------------- Classes -----------------
class AES_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AES_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUBufferAtomic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUBufferLoad {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUBufferStore {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrWriteMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUImageAtomic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUImageLoad {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUImageStore {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUReadPreloadRegisterIntrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUReadPreloadRegisterIntrinsicNamed<string AMDGPUReadPreloadRegisterIntrinsicNamed:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = AMDGPUReadPreloadRegisterIntrinsicNamed:name;
  string NAME = ?;
}
class AVRInst<dag AVRInst:outs = ?, dag AVRInst:ins = ?, string AVRInst:asmstr = ?, list<dag> AVRInst:pattern = ?> {	// Instruction
  string Namespace = "AVR";
  dag OutOperandList = AVRInst:outs;
  dag InOperandList = AVRInst:ins;
  string AsmString = AVRInst:asmstr;
  list<dag> Pattern = AVRInst:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class AVRInst16<dag AVRInst16:outs = ?, dag AVRInst16:ins = ?, string AVRInst16:asmstr = ?, list<dag> AVRInst16:pattern = ?> {	// Instruction AVRInst
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = AVRInst16:outs;
  dag InOperandList = AVRInst16:ins;
  string AsmString = AVRInst16:asmstr;
  list<dag> Pattern = AVRInst16:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class AVRInst32<dag AVRInst32:outs = ?, dag AVRInst32:ins = ?, string AVRInst32:asmstr = ?, list<dag> AVRInst32:pattern = ?> {	// Instruction AVRInst
  field bits<32> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = AVRInst32:outs;
  dag InOperandList = AVRInst32:ins;
  string AsmString = AVRInst32:asmstr;
  list<dag> Pattern = AVRInst32:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class AVRReg<bits<16> AVRReg:num = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? }, string AVRReg:name = ?, list<Register> AVRReg:subregs = [], list<string> AVRReg:altNames = []> {	// Register RegisterWithSubRegs
  field bits<16> Num = { AVRReg:num{15}, AVRReg:num{14}, AVRReg:num{13}, AVRReg:num{12}, AVRReg:num{11}, AVRReg:num{10}, AVRReg:num{9}, AVRReg:num{8}, AVRReg:num{7}, AVRReg:num{6}, AVRReg:num{5}, AVRReg:num{4}, AVRReg:num{3}, AVRReg:num{2}, AVRReg:num{1}, AVRReg:num{0} };
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = AVRReg:name;
  list<string> AltNames = AVRReg:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = AVRReg:subregs;
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { AVRReg:num{15}, AVRReg:num{14}, AVRReg:num{13}, AVRReg:num{12}, AVRReg:num{11}, AVRReg:num{10}, AVRReg:num{9}, AVRReg:num{8}, AVRReg:num{7}, AVRReg:num{6}, AVRReg:num{5}, AVRReg:num{4}, AVRReg:num{3}, AVRReg:num{2}, AVRReg:num{1}, AVRReg:num{0} };
  string NAME = ?;
}
class AdvSIMD_1FloatArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1IntArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_144];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1IntArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_177];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_178];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Expand_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Float_Across_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Int_Across_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_146];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_147];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_148];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Arg_FloatCompare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_156];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Arg_Scalar_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2FloatArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2IntArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Scalar_Float_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142, anonymous_143];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_181];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_182];
  list<LLVMType> ParamTypes = [anonymous_183, anonymous_184, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_185, anonymous_187];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_188];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_189, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_190];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vector2Index_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, anonymous_175, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Compare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_155];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_157, anonymous_158];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161, anonymous_162];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Expand_BySize_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Wide_BySize_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_164];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_165, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_166, llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Wide_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_159, anonymous_160];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_191, anonymous_192];
  list<LLVMType> ParamTypes = [anonymous_194];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_195, anonymous_196];
  list<LLVMType> ParamTypes = [anonymous_197, anonymous_198, anonymous_199, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_200, anonymous_201, anonymous_203];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_204];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_207];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_167, anonymous_168, anonymous_169];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Scalar_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_170, anonymous_171, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Scalar_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_174, llvm_anyvector_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_172, llvm_anyvector_ty, anonymous_173];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_208, anonymous_209, anonymous_210];
  list<LLVMType> ParamTypes = [anonymous_212];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_213, anonymous_214, anonymous_215];
  list<LLVMType> ParamTypes = [anonymous_216, anonymous_217, anonymous_218, anonymous_219, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_220, anonymous_221, anonymous_222, anonymous_224];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_225];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_226, anonymous_227, anonymous_228, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_229];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_CvtFPToFx_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_CvtFxToFP_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_FPToIntRounding_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl1_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, anonymous_230];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl2_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, anonymous_231];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl3_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_232];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl4_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_233];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx1_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_234, llvm_v16i8_ty, anonymous_235];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx2_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_236, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_237];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx3_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_238, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_239];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx4_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_240, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_241];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AsmOperandClass {
  string Name = ?;
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = ?;
  string DiagnosticType = "";
  bit IsOptional = 0;
  string DefaultMethod = ?;
  string NAME = ?;
}
class AsmParser {
  string AsmParserClassName = "AsmParser";
  string AsmParserInstCleanup = "";
  bit ShouldEmitMatchRegisterName = 1;
  bit ShouldEmitMatchRegisterAltName = 0;
  bit HasMnemonicFirst = 1;
  string NAME = ?;
}
class AsmParserVariant {
  int Variant = 0;
  string Name = "";
  string CommentDelimiter = "";
  string RegisterPrefix = "";
  string TokenizingCharacters = "[]*!";
  string SeparatorCharacters = " 	,";
  string BreakCharacters = "";
  string NAME = ?;
}
class AsmWriter {
  string AsmWriterClassName = "InstPrinter";
  int PassSubtarget = 0;
  int Variant = 0;
  string NAME = ?;
}
class AssemblerPredicate<string AssemblerPredicate:cond = ?, string AssemblerPredicate:name = ""> {
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = AssemblerPredicate:cond;
  string PredicateName = AssemblerPredicate:name;
  string NAME = ?;
}
class Bypass {
  string NAME = ?;
}
class CCAction {
  string NAME = ?;
}
class CCAssignToReg<list<Register> CCAssignToReg:regList = ?> {	// CCAction
  list<Register> RegList = CCAssignToReg:regList;
  string NAME = ?;
}
class CCAssignToRegWithShadow<list<Register> CCAssignToRegWithShadow:regList = ?, list<Register> CCAssignToRegWithShadow:shadowList = ?> {	// CCAction
  list<Register> RegList = CCAssignToRegWithShadow:regList;
  list<Register> ShadowRegList = CCAssignToRegWithShadow:shadowList;
  string NAME = ?;
}
class CCAssignToStack<int CCAssignToStack:size = ?, int CCAssignToStack:align = ?> {	// CCAction
  int Size = CCAssignToStack:size;
  int Align = CCAssignToStack:align;
  string NAME = ?;
}
class CCAssignToStackWithShadow<int CCAssignToStackWithShadow:size = ?, int CCAssignToStackWithShadow:align = ?, list<Register> CCAssignToStackWithShadow:shadowList = ?> {	// CCAction
  int Size = CCAssignToStackWithShadow:size;
  int Align = CCAssignToStackWithShadow:align;
  list<Register> ShadowRegList = CCAssignToStackWithShadow:shadowList;
  string NAME = ?;
}
class CCBitConvertToType<ValueType CCBitConvertToType:destTy = ?> {	// CCAction
  ValueType DestTy = CCBitConvertToType:destTy;
  string NAME = ?;
}
class CCCustom<string CCCustom:fn = ?> {	// CCAction
  string FuncName = CCCustom:fn;
  string NAME = ?;
}
class CCDelegateTo<CallingConv CCDelegateTo:cc = ?> {	// CCAction
  CallingConv CC = CCDelegateTo:cc;
  string NAME = ?;
}
class CCIf<string CCIf:predicate = ?, CCAction CCIf:A = ?> {	// CCAction CCPredicateAction
  CCAction SubAction = CCIf:A;
  string Predicate = CCIf:predicate;
  string NAME = ?;
}
class CCIfByVal<CCAction CCIfByVal:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfByVal:A;
  string Predicate = "ArgFlags.isByVal()";
  string NAME = ?;
}
class CCIfCC<string CCIfCC:CC = ?, CCAction CCIfCC:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfCC:A;
  string Predicate = !strconcat("State.getCallingConv() == ", CCIfCC:CC);
  string NAME = ?;
}
class CCIfConsecutiveRegs<CCAction CCIfConsecutiveRegs:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfConsecutiveRegs:A;
  string Predicate = "ArgFlags.isInConsecutiveRegs()";
  string NAME = ?;
}
class CCIfInReg<CCAction CCIfInReg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfInReg:A;
  string Predicate = "ArgFlags.isInReg()";
  string NAME = ?;
}
class CCIfNest<CCAction CCIfNest:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfNest:A;
  string Predicate = "ArgFlags.isNest()";
  string NAME = ?;
}
class CCIfNotVarArg<CCAction CCIfNotVarArg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfNotVarArg:A;
  string Predicate = "!State.isVarArg()";
  string NAME = ?;
}
class CCIfSRet<CCAction CCIfSRet:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSRet:A;
  string Predicate = "ArgFlags.isSRet()";
  string NAME = ?;
}
class CCIfSplit<CCAction CCIfSplit:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSplit:A;
  string Predicate = "ArgFlags.isSplit()";
  string NAME = ?;
}
class CCIfSwiftError<CCAction CCIfSwiftError:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSwiftError:A;
  string Predicate = "ArgFlags.isSwiftError()";
  string NAME = ?;
}
class CCIfSwiftSelf<CCAction CCIfSwiftSelf:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSwiftSelf:A;
  string Predicate = "ArgFlags.isSwiftSelf()";
  string NAME = ?;
}
class CCIfType<list<ValueType> CCIfType:vts = ?, CCAction CCIfType:A = ?> {	// CCAction CCPredicateAction
  CCAction SubAction = CCIfType:A;
  list<ValueType> VTs = CCIfType:vts;
  string NAME = ?;
}
class CCIfVarArg<CCAction CCIfVarArg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfVarArg:A;
  string Predicate = "State.isVarArg()";
  string NAME = ?;
}
class CCPassByVal<int CCPassByVal:size = ?, int CCPassByVal:align = ?> {	// CCAction
  int Size = CCPassByVal:size;
  int Align = CCPassByVal:align;
  string NAME = ?;
}
class CCPassIndirect<ValueType CCPassIndirect:destTy = ?> {	// CCAction
  ValueType DestTy = CCPassIndirect:destTy;
  string NAME = ?;
}
class CCPredicateAction<CCAction CCPredicateAction:A = ?> {	// CCAction
  CCAction SubAction = CCPredicateAction:A;
  string NAME = ?;
}
class CCPromoteToType<ValueType CCPromoteToType:destTy = ?> {	// CCAction
  ValueType DestTy = CCPromoteToType:destTy;
  string NAME = ?;
}
class CCPromoteToUpperBitsInType<ValueType CCPromoteToUpperBitsInType:destTy = ?> {	// CCAction
  ValueType DestTy = CCPromoteToUpperBitsInType:destTy;
  string NAME = ?;
}
class CalleeSavedRegs<dag CalleeSavedRegs:saves = ?> {
  dag SaveList = CalleeSavedRegs:saves;
  dag OtherPreserved = ?;
  string NAME = ?;
}
class CallingConv<list<CCAction> CallingConv:actions = ?> {
  list<CCAction> Actions = CallingConv:actions;
  bit Custom = 0;
  string NAME = ?;
}
class CodePatPred<string CodePatPred:predicate = ?> {	// PatPred
  string PredicateCode = CodePatPred:predicate;
  string NAME = ?;
}
class ComboFuncData<FuncUnit ComboFuncData:ComboFunc = ?, list<FuncUnit> ComboFuncData:funclist = ?> {
  FuncUnit TheComboFunc = ComboFuncData:ComboFunc;
  list<FuncUnit> FuncList = ComboFuncData:funclist;
  string NAME = ?;
}
class ComboFuncUnits<list<ComboFuncData> ComboFuncUnits:cfd = ?> {
  list<ComboFuncData> CFD = ComboFuncUnits:cfd;
  string NAME = ?;
}
class ComplexDeprecationPredicate<string ComplexDeprecationPredicate:dep = ?> {
  string ComplexDeprecationPredicate = ComplexDeprecationPredicate:dep;
  string NAME = ?;
}
class ComplexPattern<ValueType ComplexPattern:ty = ?, int ComplexPattern:numops = ?, string ComplexPattern:fn = ?, list<SDNode> ComplexPattern:roots = [], list<SDNodeProperty> ComplexPattern:props = []> {
  ValueType Ty = ComplexPattern:ty;
  int NumOperands = ComplexPattern:numops;
  string SelectFunc = ComplexPattern:fn;
  list<SDNode> RootNodes = ComplexPattern:roots;
  list<SDNodeProperty> Properties = ComplexPattern:props;
  string NAME = ?;
}
class ComposedSubRegIndex<SubRegIndex ComposedSubRegIndex:A = ?, SubRegIndex ComposedSubRegIndex:B = ?> {	// SubRegIndex
  string Namespace = "";
  int Size = ComposedSubRegIndex:B.Size;
  int Offset = !if(!eq(ComposedSubRegIndex:A.Offset, -1), -1, !if(!eq(ComposedSubRegIndex:B.Offset, -1), -1, !add(ComposedSubRegIndex:A.Offset, ComposedSubRegIndex:B.Offset)));
  list<SubRegIndex> ComposedOf = [ComposedSubRegIndex:A, ComposedSubRegIndex:B];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
class CondCode {
  string NAME = ?;
}
class Crypto_AES_DataKey_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_AES_Data_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_12Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_1Hash_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_5Hash4Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_8Hash4Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_8Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class CustomCallingConv {	// CallingConv
  list<CCAction> Actions = [];
  bit Custom = 1;
  string NAME = ?;
}
class DAGOperand {
  string NAME = ?;
}
class Deprecated<SubtargetFeature Deprecated:dep = ?> {
  SubtargetFeature DeprecatedFeatureMask = Deprecated:dep;
  string NAME = ?;
}
class Device<string Device:Name = ?, Family Device:Fam = ?, ELFArch Device:Arch = ?, list<SubtargetFeature> Device:ExtraFeatures = []> {	// Processor
  string Name = Device:Name;
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = !listconcat([Device:Fam, Device:Arch], Device:ExtraFeatures);
  string NAME = ?;
}
class DwarfRegAlias<Register DwarfRegAlias:reg = ?> {
  Register DwarfAlias = DwarfRegAlias:reg;
  string NAME = ?;
}
class DwarfRegNum<list<int> DwarfRegNum:Numbers = ?> {
  list<int> DwarfNumbers = DwarfRegNum:Numbers;
  string NAME = ?;
}
class ELFArch<string ELFArch:name = ?> {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = !strconcat("ELF::", ELFArch:name);
  string Desc = "";
  list<SubtargetFeature> Implies = SubtargetFeature:i;
  string NAME = ?;
}
class ExtensionPseudo<dag ExtensionPseudo:outs = ?, dag ExtensionPseudo:ins = ?, string ExtensionPseudo:asmstr = ?, list<dag> ExtensionPseudo:pattern = ?> {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = ExtensionPseudo:outs;
  dag InOperandList = ExtensionPseudo:ins;
  string AsmString = ExtensionPseudo:asmstr;
  list<dag> Pattern = ExtensionPseudo:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class F16<bits<16> F16:opcode = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? }, dag F16:outs = ?, dag F16:ins = ?, string F16:asmstr = ?, list<dag> F16:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { F16:opcode{15}, F16:opcode{14}, F16:opcode{13}, F16:opcode{12}, F16:opcode{11}, F16:opcode{10}, F16:opcode{9}, F16:opcode{8}, F16:opcode{7}, F16:opcode{6}, F16:opcode{5}, F16:opcode{4}, F16:opcode{3}, F16:opcode{2}, F16:opcode{1}, F16:opcode{0} };
  string Namespace = "AVR";
  dag OutOperandList = F16:outs;
  dag InOperandList = F16:ins;
  string AsmString = F16:asmstr;
  list<dag> Pattern = F16:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class F32<bits<32> F32:opcode = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? }, dag F32:outs = ?, dag F32:ins = ?, string F32:asmstr = ?, list<dag> F32:pattern = ?> {	// Instruction AVRInst AVRInst32
  field bits<32> Inst = { F32:opcode{31}, F32:opcode{30}, F32:opcode{29}, F32:opcode{28}, F32:opcode{27}, F32:opcode{26}, F32:opcode{25}, F32:opcode{24}, F32:opcode{23}, F32:opcode{22}, F32:opcode{21}, F32:opcode{20}, F32:opcode{19}, F32:opcode{18}, F32:opcode{17}, F32:opcode{16}, F32:opcode{15}, F32:opcode{14}, F32:opcode{13}, F32:opcode{12}, F32:opcode{11}, F32:opcode{10}, F32:opcode{9}, F32:opcode{8}, F32:opcode{7}, F32:opcode{6}, F32:opcode{5}, F32:opcode{4}, F32:opcode{3}, F32:opcode{2}, F32:opcode{1}, F32:opcode{0} };
  string Namespace = "AVR";
  dag OutOperandList = F32:outs;
  dag InOperandList = F32:ins;
  string AsmString = F32:asmstr;
  list<dag> Pattern = F32:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class F32BRk<bits<3> F32BRk:f = { ?, ?, ? }, dag F32BRk:outs = ?, dag F32BRk:ins = ?, string F32BRk:asmstr = ?, list<dag> F32BRk:pattern = ?> {	// Instruction AVRInst AVRInst32
  field bits<32> Inst = { 1, 0, 0, 1, 0, 1, 0, k{21}, k{20}, k{19}, k{18}, k{17}, F32BRk:f{2}, F32BRk:f{1}, F32BRk:f{0}, k{16}, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = F32BRk:outs;
  dag InOperandList = F32BRk:ins;
  string AsmString = F32BRk:asmstr;
  list<dag> Pattern = F32BRk:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<22> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class F32DM<bit F32DM:f = ?, dag F32DM:outs = ?, dag F32DM:ins = ?, string F32DM:asmstr = ?, list<dag> F32DM:pattern = ?> {	// Instruction AVRInst AVRInst32
  field bits<32> Inst = { 1, 0, 0, 1, 0, 0, F32DM:f, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 0, 0, 0, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = F32DM:outs;
  dag InOperandList = F32DM:ins;
  string AsmString = F32DM:asmstr;
  list<dag> Pattern = F32DM:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<16> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FBRk<bit FBRk:f = ?, dag FBRk:outs = ?, dag FBRk:ins = ?, string FBRk:asmstr = ?, list<dag> FBRk:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 1, 0, FBRk:f, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = FBRk:outs;
  dag InOperandList = FBRk:ins;
  string AsmString = FBRk:asmstr;
  list<dag> Pattern = FBRk:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<12> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FBRsk<bit FBRsk:f = ?, bits<3> FBRsk:s = { ?, ?, ? }, dag FBRsk:outs = ?, dag FBRsk:ins = ?, string FBRsk:asmstr = ?, list<dag> FBRsk:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 1, 1, 1, 0, FBRsk:f, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, FBRsk:s{2}, FBRsk:s{1}, FBRsk:s{0} };
  string Namespace = "AVR";
  dag OutOperandList = FBRsk:outs;
  dag InOperandList = FBRsk:ins;
  string AsmString = FBRsk:asmstr;
  list<dag> Pattern = FBRsk:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FDES<dag FDES:outs = ?, dag FDES:ins = ?, string FDES:asmstr = ?, list<dag> FDES:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, k{3}, k{2}, k{1}, k{0}, 1, 0, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = FDES:outs;
  dag InOperandList = FDES:ins;
  string AsmString = FDES:asmstr;
  list<dag> Pattern = FDES:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> k = { ?, ?, ?, ? };
  string NAME = ?;
}
class FFMULRdRr<bits<2> FFMULRdRr:f = { ?, ? }, dag FFMULRdRr:outs = ?, dag FFMULRdRr:ins = ?, string FFMULRdRr:asmstr = ?, list<dag> FFMULRdRr:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 1, FFMULRdRr:f{1}, rd{2}, rd{1}, rd{0}, FFMULRdRr:f{0}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = FFMULRdRr:outs;
  dag InOperandList = FFMULRdRr:ins;
  string AsmString = FFMULRdRr:asmstr;
  list<dag> Pattern = FFMULRdRr:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> rd = { ?, ?, ? };
  bits<3> rr = { ?, ?, ? };
  string NAME = ?;
}
class FIOARr<dag FIOARr:outs = ?, dag FIOARr:ins = ?, string FIOARr:asmstr = ?, list<dag> FIOARr:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 1, 1, 1, A{5}, A{4}, r{4}, r{3}, r{2}, r{1}, r{0}, A{3}, A{2}, A{1}, A{0} };
  string Namespace = "AVR";
  dag OutOperandList = FIOARr:outs;
  dag InOperandList = FIOARr:ins;
  string AsmString = FIOARr:asmstr;
  list<dag> Pattern = FIOARr:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<6> A = { ?, ?, ?, ?, ?, ? };
  bits<5> r = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FIOBIT<bits<2> FIOBIT:t = { ?, ? }, dag FIOBIT:outs = ?, dag FIOBIT:ins = ?, string FIOBIT:asmstr = ?, list<dag> FIOBIT:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 1, 0, FIOBIT:t{1}, FIOBIT:t{0}, A{4}, A{3}, A{2}, A{1}, A{0}, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = FIOBIT:outs;
  dag InOperandList = FIOBIT:ins;
  string AsmString = FIOBIT:asmstr;
  list<dag> Pattern = FIOBIT:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> A = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
class FIORdA<dag FIORdA:outs = ?, dag FIORdA:ins = ?, string FIORdA:asmstr = ?, list<dag> FIORdA:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 1, 1, 0, A{5}, A{4}, d{4}, d{3}, d{2}, d{1}, d{0}, A{3}, A{2}, A{1}, A{0} };
  string Namespace = "AVR";
  dag OutOperandList = FIORdA:outs;
  dag InOperandList = FIORdA:ins;
  string AsmString = FIORdA:asmstr;
  list<dag> Pattern = FIORdA:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  bits<6> A = { ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FLPMX<bit FLPMX:e = ?, bit FLPMX:p = ?, dag FLPMX:outs = ?, dag FLPMX:ins = ?, string FLPMX:asmstr = ?, list<dag> FLPMX:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, 0, 1, FLPMX:e, FLPMX:p };
  string Namespace = "AVR";
  dag OutOperandList = FLPMX:outs;
  dag InOperandList = FLPMX:ins;
  string AsmString = FLPMX:asmstr;
  list<dag> Pattern = FLPMX:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FMOVWRdRr<dag FMOVWRdRr:outs = ?, dag FMOVWRdRr:ins = ?, string FMOVWRdRr:asmstr = ?, list<dag> FMOVWRdRr:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 0, 1, d{4}, d{3}, d{2}, d{1}, r{4}, r{3}, r{2}, r{1} };
  string Namespace = "AVR";
  dag OutOperandList = FMOVWRdRr:outs;
  dag InOperandList = FMOVWRdRr:ins;
  string AsmString = FMOVWRdRr:asmstr;
  list<dag> Pattern = FMOVWRdRr:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  bits<5> r = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FMUL2RdRr<bit FMUL2RdRr:f = ?, dag FMUL2RdRr:outs = ?, dag FMUL2RdRr:ins = ?, string FMUL2RdRr:asmstr = ?, list<dag> FMUL2RdRr:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, FMUL2RdRr:f, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = FMUL2RdRr:outs;
  dag InOperandList = FMUL2RdRr:ins;
  string AsmString = FMUL2RdRr:asmstr;
  list<dag> Pattern = FMUL2RdRr:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FRd<bits<4> FRd:opcode = { ?, ?, ?, ? }, bits<7> FRd:f = { ?, ?, ?, ?, ?, ?, ? }, dag FRd:outs = ?, dag FRd:ins = ?, string FRd:asmstr = ?, list<dag> FRd:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { FRd:opcode{3}, FRd:opcode{2}, FRd:opcode{1}, FRd:opcode{0}, FRd:f{6}, FRd:f{5}, FRd:f{4}, d{4}, d{3}, d{2}, d{1}, d{0}, FRd:f{3}, FRd:f{2}, FRd:f{1}, FRd:f{0} };
  string Namespace = "AVR";
  dag OutOperandList = FRd:outs;
  dag InOperandList = FRd:ins;
  string AsmString = FRd:asmstr;
  list<dag> Pattern = FRd:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FRdB<bits<2> FRdB:t = { ?, ? }, dag FRdB:outs = ?, dag FRdB:ins = ?, string FRdB:asmstr = ?, list<dag> FRdB:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 1, 1, 1, 1, FRdB:t{1}, FRdB:t{0}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = FRdB:outs;
  dag InOperandList = FRdB:ins;
  string AsmString = FRdB:asmstr;
  list<dag> Pattern = FRdB:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
class FRdK<bits<4> FRdK:opcode = { ?, ?, ?, ? }, dag FRdK:outs = ?, dag FRdK:ins = ?, string FRdK:asmstr = ?, list<dag> FRdK:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { FRdK:opcode{3}, FRdK:opcode{2}, FRdK:opcode{1}, FRdK:opcode{0}, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = FRdK:outs;
  dag InOperandList = FRdK:ins;
  string AsmString = FRdK:asmstr;
  list<dag> Pattern = FRdK:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FRdRr<bits<4> FRdRr:opcode = { ?, ?, ?, ? }, bits<2> FRdRr:f = { ?, ? }, dag FRdRr:outs = ?, dag FRdRr:ins = ?, string FRdRr:asmstr = ?, list<dag> FRdRr:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { FRdRr:opcode{3}, FRdRr:opcode{2}, FRdRr:opcode{1}, FRdRr:opcode{0}, FRdRr:f{1}, FRdRr:f{0}, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = FRdRr:outs;
  dag InOperandList = FRdRr:ins;
  string AsmString = FRdRr:asmstr;
  list<dag> Pattern = FRdRr:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FS<bit FS:b = ?, dag FS:outs = ?, dag FS:ins = ?, string FS:asmstr = ?, list<dag> FS:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, FS:b, s{2}, s{1}, s{0}, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = FS:outs;
  dag InOperandList = FS:ins;
  string AsmString = FS:asmstr;
  list<dag> Pattern = FS:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
class FSK<bit FSK:f = ?, dag FSK:outs = ?, dag FSK:ins = ?, string FSK:asmstr = ?, list<dag> FSK:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 1, 1, 1, 0, FSK:f, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, s{2}, s{1}, s{0} };
  string Namespace = "AVR";
  dag OutOperandList = FSK:outs;
  dag InOperandList = FSK:ins;
  string AsmString = FSK:asmstr;
  list<dag> Pattern = FSK:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
class FSTDLDD<bit FSTDLDD:type = ?, dag FSTDLDD:outs = ?, dag FSTDLDD:ins = ?, string FSTDLDD:asmstr = ?, list<dag> FSTDLDD:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, memri{5}, 0, memri{4}, memri{3}, FSTDLDD:type, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, memri{6}, memri{2}, memri{1}, memri{0} };
  string Namespace = "AVR";
  dag OutOperandList = FSTDLDD:outs;
  dag InOperandList = FSTDLDD:ins;
  string AsmString = FSTDLDD:asmstr;
  list<dag> Pattern = FSTDLDD:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> memri = { ?, ?, ?, ?, ?, ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FSTLD<bit FSTLD:type = ?, bits<2> FSTLD:mode = { ?, ? }, dag FSTLD:outs = ?, dag FSTLD:ins = ?, string FSTLD:asmstr = ?, list<dag> FSTLD:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, FSTLD:type, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, FSTLD:mode{1}, FSTLD:mode{0} };
  string Namespace = "AVR";
  dag OutOperandList = FSTLD:outs;
  dag InOperandList = FSTLD:ins;
  string AsmString = FSTLD:asmstr;
  list<dag> Pattern = FSTLD:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FTST<bits<4> FTST:opcode = { ?, ?, ?, ? }, bits<2> FTST:f = { ?, ? }, dag FTST:outs = ?, dag FTST:ins = ?, string FTST:asmstr = ?, list<dag> FTST:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { FTST:opcode{3}, FTST:opcode{2}, FTST:opcode{1}, FTST:opcode{0}, FTST:f{1}, FTST:f{0}, rd{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rd{3}, rd{2}, rd{1}, rd{0} };
  string Namespace = "AVR";
  dag OutOperandList = FTST:outs;
  dag InOperandList = FTST:ins;
  string AsmString = FTST:asmstr;
  list<dag> Pattern = FTST:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FWRdK<bit FWRdK:f = ?, dag FWRdK:outs = ?, dag FWRdK:ins = ?, string FWRdK:asmstr = ?, list<dag> FWRdK:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 1, FWRdK:f, k{5}, k{4}, dst{2}, dst{1}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = FWRdK:outs;
  dag InOperandList = FWRdK:ins;
  string AsmString = FWRdK:asmstr;
  list<dag> Pattern = FWRdK:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> dst = { ?, ?, ?, ?, ? };
  bits<6> k = { ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class FZRd<bits<3> FZRd:t = { ?, ?, ? }, dag FZRd:outs = ?, dag FZRd:ins = ?, string FZRd:asmstr = ?, list<dag> FZRd:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, FZRd:t{2}, FZRd:t{1}, FZRd:t{0} };
  string Namespace = "AVR";
  dag OutOperandList = FZRd:outs;
  dag InOperandList = FZRd:ins;
  string AsmString = FZRd:asmstr;
  list<dag> Pattern = FZRd:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
class Family<string Family:name = ?, list<SubtargetFeature> Family:i = ?> {	// SubtargetFeature FeatureSet
  string Name = Family:name;
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = !strconcat("The device is a part of the ", !strconcat(Family:name, " family"));
  list<SubtargetFeature> Implies = Family:i;
  string NAME = ?;
}
class FeatureSet<string FeatureSet:name = ?, string FeatureSet:desc = ?, list<SubtargetFeature> FeatureSet:i = ?> {	// SubtargetFeature
  string Name = FeatureSet:name;
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = FeatureSet:desc;
  list<SubtargetFeature> Implies = FeatureSet:i;
  string NAME = ?;
}
class FuncUnit {
  string NAME = ?;
}
class GCCBuiltin<string GCCBuiltin:name = ?> {
  string GCCBuiltinName = GCCBuiltin:name;
  string NAME = ?;
}
class Hexagon_Intrinsic<string Hexagon_Intrinsic:GCCIntSuffix = ?, list<LLVMType> Hexagon_Intrinsic:ret_types = ?, list<LLVMType> Hexagon_Intrinsic:param_types = ?, list<IntrinsicProperty> Hexagon_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = Hexagon_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = Hexagon_Intrinsic:param_types;
  list<IntrinsicProperty> IntrProperties = Hexagon_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_LLiLLiLLi_Intrinsic<string Hexagon_LLiLLiLLi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_LLiLLiLLi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_LLiLLiLLii_Intrinsic<string Hexagon_LLiLLiLLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_LLiLLiLLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_LLiLLii_Intrinsic<string Hexagon_LLiLLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_LLiLLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_LLii_Intrinsic<string Hexagon_LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_df_Intrinsic<string Hexagon_df_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdf_Intrinsic<string Hexagon_df_dfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdfdf_Intrinsic<string Hexagon_df_dfdfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdfdfqi_Intrinsic<string Hexagon_df_dfdfdfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdfdfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_di_Intrinsic<string Hexagon_df_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_sf_Intrinsic<string Hexagon_df_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_si_Intrinsic<string Hexagon_df_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_df_Intrinsic<string Hexagon_di_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_di_Intrinsic<string Hexagon_di_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didi_Intrinsic<string Hexagon_di_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_dididi_Intrinsic<string Hexagon_di_dididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_dididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_dididisi_Intrinsic<string Hexagon_di_dididisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_dididisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didiqi_Intrinsic<string Hexagon_di_didiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didisi_Intrinsic<string Hexagon_di_didisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didisisi_Intrinsic<string Hexagon_di_didisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_disi_Intrinsic<string Hexagon_di_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_disisi_Intrinsic<string Hexagon_di_disisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_disisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qi_Intrinsic<string Hexagon_di_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qididi_Intrinsic<string Hexagon_di_qididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qisisi_Intrinsic<string Hexagon_di_qisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sf_Intrinsic<string Hexagon_di_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_si_Intrinsic<string Hexagon_di_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sidi_Intrinsic<string Hexagon_di_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sisi_Intrinsic<string Hexagon_di_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sisisi_Intrinsic<string Hexagon_di_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_hi_si_Intrinsic<string Hexagon_hi_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_hi_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_iii_Intrinsic<string Hexagon_iii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_iii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_iiii_Intrinsic<string Hexagon_iiii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_iiii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_iv1024i_Intrinsic<string Hexagon_iv1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_iv1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_iv512i_Intrinsic<string Hexagon_iv512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_iv512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memdisi_Intrinsic<string Hexagon_mem_memdisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memdisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memdisisi_Intrinsic<string Hexagon_mem_memdisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memdisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memmemsi_Intrinsic<string Hexagon_mem_memmemsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memmemsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memmemsisi_Intrinsic<string Hexagon_mem_memmemsisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memmemsisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memsisi_Intrinsic<string Hexagon_mem_memsisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memsisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memsisisi_Intrinsic<string Hexagon_mem_memsisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memsisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_didi_Intrinsic<string Hexagon_qi_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_disi_Intrinsic<string Hexagon_qi_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_mem_Intrinsic<string Hexagon_qi_mem_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_mem_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qi_Intrinsic<string Hexagon_qi_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qiqi_Intrinsic<string Hexagon_qi_qiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qiqiqi_Intrinsic<string Hexagon_qi_qiqiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qiqiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sfqi_Intrinsic<string Hexagon_qi_sfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_si_Intrinsic<string Hexagon_qi_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sidi_Intrinsic<string Hexagon_qi_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sisi_Intrinsic<string Hexagon_qi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_df_Intrinsic<string Hexagon_sf_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_di_Intrinsic<string Hexagon_sf_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sf_Intrinsic<string Hexagon_sf_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsf_Intrinsic<string Hexagon_sf_sfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsfsf_Intrinsic<string Hexagon_sf_sfsfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsfsfqi_Intrinsic<string Hexagon_sf_sfsfsfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsfsfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_si_Intrinsic<string Hexagon_sf_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_df_Intrinsic<string Hexagon_si_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_dfdf_Intrinsic<string Hexagon_si_dfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_dfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_dfsi_Intrinsic<string Hexagon_si_dfsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_dfsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_di_Intrinsic<string Hexagon_si_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_didi_Intrinsic<string Hexagon_si_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_disi_Intrinsic<string Hexagon_si_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_disisi_Intrinsic<string Hexagon_si_disisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_disisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qi_Intrinsic<string Hexagon_si_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qiqi_Intrinsic<string Hexagon_si_qiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qisi_Intrinsic<string Hexagon_si_qisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qisisi_Intrinsic<string Hexagon_si_qisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sf_Intrinsic<string Hexagon_si_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sfsf_Intrinsic<string Hexagon_si_sfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sfsi_Intrinsic<string Hexagon_si_sfsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sfsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_si_Intrinsic<string Hexagon_si_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sidi_Intrinsic<string Hexagon_si_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sididi_Intrinsic<string Hexagon_si_sididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sidisi_Intrinsic<string Hexagon_si_sidisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sidisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisi_Intrinsic<string Hexagon_si_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisidi_Intrinsic<string Hexagon_si_sisidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisisi_Intrinsic<string Hexagon_si_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisisisi_Intrinsic<string Hexagon_si_sisisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_udi_didi_Intrinsic<string Hexagon_udi_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_udi_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_udi_sisi_Intrinsic<string Hexagon_udi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_udi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_usi_sisi_Intrinsic<string Hexagon_usi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_usi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024_Intrinsic<string Hexagon_v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024i_Intrinsic<string Hexagon_v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024LLii_Intrinsic<string Hexagon_v1024v1024LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024_Intrinsic<string Hexagon_v1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024_Intrinsic_T<string Hexagon_v1024v1024_Intrinsic_T:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024_Intrinsic_T:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024i_Intrinsic<string Hexagon_v1024v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024ii_Intrinsic<string Hexagon_v1024v1024ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024LLii_Intrinsic<string Hexagon_v1024v1024v1024LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024_Intrinsic<string Hexagon_v1024v1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024i_Intrinsic<string Hexagon_v1024v1024v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024ii_Intrinsic<string Hexagon_v1024v1024v1024ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024v1024_Intrinsic<string Hexagon_v1024v1024v1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v1024v1024i_Intrinsic<string Hexagon_v1024v1024v1024v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v1024v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v128ii_Intrinsic<string Hexagon_v1024v1024v128ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v128ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v1024i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v2048i_Intrinsic<string Hexagon_v1024v1024v2048i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v2048i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v512_Intrinsic<string Hexagon_v1024v1024v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v512i_Intrinsic<string Hexagon_v1024v1024v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v512v512_Intrinsic<string Hexagon_v1024v1024v512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v1024v512v512i_Intrinsic<string Hexagon_v1024v1024v512v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v1024v512v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v128ii_Intrinsic<string Hexagon_v1024v128ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v128ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v128iv1024v1024_Intrinsic<string Hexagon_v1024v128iv1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v128iv1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v2048_Intrinsic_T<string Hexagon_v1024v2048_Intrinsic_T:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v2048_Intrinsic_T:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v2048i_Intrinsic<string Hexagon_v1024v2048i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v2048i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v512_Intrinsic<string Hexagon_v1024v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v512i_Intrinsic<string Hexagon_v1024v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v512v512_Intrinsic<string Hexagon_v1024v512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v512v512i_Intrinsic<string Hexagon_v1024v512v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v512v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v1024v64iv512v512_Intrinsic<string Hexagon_v1024v64iv512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v1024v64iv512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128ii_Intrinsic<string Hexagon_v128ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv1024i_Intrinsic<string Hexagon_v128iv1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv1024v1024_Intrinsic<string Hexagon_v128iv1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv128i_Intrinsic<string Hexagon_v128iv128i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv128i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv128iv1024i_Intrinsic<string Hexagon_v128iv128iv1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv128iv1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv128iv1024v1024_Intrinsic<string Hexagon_v128iv128iv1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv128iv1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v128iv128iv128i_Intrinsic<string Hexagon_v128iv128iv128i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v128iv128iv128i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v1024_Intrinsic<string Hexagon_v2048v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v1024i_Intrinsic<string Hexagon_v2048v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v1024v1024_Intrinsic<string Hexagon_v2048v1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v1024v1024i_Intrinsic<string Hexagon_v2048v1024v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v1024v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v128iv1024v1024_Intrinsic<string Hexagon_v2048v128iv1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v128iv1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048LLii_Intrinsic<string Hexagon_v2048v2048LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048_Intrinsic_T<string Hexagon_v2048v2048_Intrinsic_T:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048_Intrinsic_T:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048i_Intrinsic<string Hexagon_v2048v2048i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048ii_Intrinsic<string Hexagon_v2048v2048ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v1024_Intrinsic<string Hexagon_v2048v2048v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v1024i_Intrinsic<string Hexagon_v2048v2048v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v1024v1024_Intrinsic<string Hexagon_v2048v2048v1024v1024_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v1024v1024_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v1024v1024i_Intrinsic<string Hexagon_v2048v2048v1024v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v1024v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v2048LLii_Intrinsic<string Hexagon_v2048v2048v2048LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v2048LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v2048_Intrinsic<string Hexagon_v2048v2048v2048_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v2048_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v2048i_Intrinsic<string Hexagon_v2048v2048v2048i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v2048i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v2048v2048v2048ii_Intrinsic<string Hexagon_v2048v2048v2048ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v2048v2048v2048ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v256_v256v256_Intrinsic<string Hexagon_v256_v256v256_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v256_v256v256_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512_Intrinsic<string Hexagon_v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512i_Intrinsic<string Hexagon_v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v1024_Intrinsic_T<string Hexagon_v512v1024_Intrinsic_T:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v1024_Intrinsic_T:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v1024i_Intrinsic<string Hexagon_v512v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512LLii_Intrinsic<string Hexagon_v512v512LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512_Intrinsic<string Hexagon_v512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512i_Intrinsic<string Hexagon_v512v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v1024i_Intrinsic<string Hexagon_v512v512v1024i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v1024i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v512LLii_Intrinsic<string Hexagon_v512v512v512LLii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v512LLii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v512_Intrinsic<string Hexagon_v512v512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v512i_Intrinsic<string Hexagon_v512v512v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v512v512_Intrinsic<string Hexagon_v512v512v512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v512v512i_Intrinsic<string Hexagon_v512v512v512v512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v512v512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v512v64ii_Intrinsic<string Hexagon_v512v512v64ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v512v64ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v512i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v64ii_Intrinsic<string Hexagon_v512v64ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v64ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v512v64iv512v512_Intrinsic<string Hexagon_v512v64iv512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v512v64iv512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64ii_Intrinsic<string Hexagon_v64ii_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64ii_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv512i_Intrinsic<string Hexagon_v64iv512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv512v512_Intrinsic<string Hexagon_v64iv512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv64i_Intrinsic<string Hexagon_v64iv64i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv64i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv64iv512i_Intrinsic<string Hexagon_v64iv64iv512i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv64iv512i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv64iv512v512_Intrinsic<string Hexagon_v64iv64iv512v512_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv64iv512v512_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_v64iv64iv64i_Intrinsic<string Hexagon_v64iv64iv64i_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_v64iv64iv64i_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_si_Intrinsic<string Hexagon_void_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_sisi_Intrinsic<string Hexagon_void_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_void_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_sisisi_Intrinsic<string Hexagon_void_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_void_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class ImmLeaf<ValueType ImmLeaf:vt = ?, string ImmLeaf:pred = ?, SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm> {	// SDPatternOperator PatFrag
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (ImmLeaf:vt imm);
  string PredicateCode = "";
  string ImmediateCode = ImmLeaf:pred;
  SDNodeXForm OperandTransform = ImmLeaf:xform;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
class InstAlias<string InstAlias:Asm = ?, dag InstAlias:Result = ?, int InstAlias:Emit = 1> {
  string AsmString = InstAlias:Asm;
  dag ResultInst = InstAlias:Result;
  int EmitPriority = InstAlias:Emit;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
class InstRW<list<SchedReadWrite> InstRW:rw = ?, dag InstRW:instrlist = ?> {
  list<SchedReadWrite> OperandReadWrites = InstRW:rw;
  dag Instrs = InstRW:instrlist;
  SchedMachineModel SchedModel = ?;
  bit Unsupported = 0;
  string NAME = ?;
}
class InstrInfo {
  bit isLittleEndianEncoding = 0;
  bit guessInstructionProperties = 1;
  bit decodePositionallyEncodedOperands = 0;
  bit noNamedPositionallyEncodedOperands = 0;
  string NAME = ?;
}
class InstrItinClass {
  string NAME = ?;
}
class InstrItinData<InstrItinClass InstrItinData:Class = ?, list<InstrStage> InstrItinData:stages = ?, list<int> InstrItinData:operandcycles = [], list<Bypass> InstrItinData:bypasses = [], int InstrItinData:uops = 1> {
  InstrItinClass TheClass = InstrItinData:Class;
  int NumMicroOps = InstrItinData:uops;
  list<InstrStage> Stages = InstrItinData:stages;
  list<int> OperandCycles = InstrItinData:operandcycles;
  list<Bypass> Bypasses = InstrItinData:bypasses;
  string NAME = ?;
}
class InstrMapping {
  string FilterClass = ?;
  list<string> RowFields = [];
  list<string> ColFields = [];
  list<string> KeyCol = [];
  list<list<string>> ValueCols = [];
  string NAME = ?;
}
class InstrStage<int InstrStage:cycles = ?, list<FuncUnit> InstrStage:units = ?, int InstrStage:timeinc = -1, ReservationKind InstrStage:kind = Required> {
  int Cycles = InstrStage:cycles;
  list<FuncUnit> Units = InstrStage:units;
  int TimeInc = InstrStage:timeinc;
  int Kind = InstrStage:kind.Value;
  string NAME = ?;
}
class Instruction {
  string Namespace = "";
  dag OutOperandList = ?;
  dag InOperandList = ?;
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class Intrinsic<list<LLVMType> Intrinsic:ret_types = ?, list<LLVMType> Intrinsic:param_types = [], list<IntrinsicProperty> Intrinsic:properties = [], string Intrinsic:name = ""> {	// SDPatternOperator
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = Intrinsic:ret_types;
  list<LLVMType> ParamTypes = Intrinsic:param_types;
  list<IntrinsicProperty> IntrProperties = Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class IntrinsicProperty {
  string NAME = ?;
}
class ItinRW<list<SchedReadWrite> ItinRW:rw = ?, list<InstrItinClass> ItinRW:iic = ?> {
  list<InstrItinClass> MatchedItinClasses = ItinRW:iic;
  list<SchedReadWrite> OperandReadWrites = ItinRW:rw;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class LLVMAnyPointerType<LLVMType LLVMAnyPointerType:elty = ?> {	// LLVMType
  ValueType VT = iPTRAny;
  LLVMType ElTy = LLVMAnyPointerType:elty;
  string NAME = ?;
}
class LLVMExtendedType<int LLVMExtendedType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMExtendedType:num;
  string NAME = ?;
}
class LLVMHalfElementsVectorType<int LLVMHalfElementsVectorType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMHalfElementsVectorType:num;
  string NAME = ?;
}
class LLVMMatchType<int LLVMMatchType:num = ?> {	// LLVMType
  ValueType VT = OtherVT;
  int Number = LLVMMatchType:num;
  string NAME = ?;
}
class LLVMPointerTo<int LLVMPointerTo:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMPointerTo:num;
  string NAME = ?;
}
class LLVMPointerType<LLVMType LLVMPointerType:elty = ?> {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = LLVMPointerType:elty;
  int AddrSpace = 0;
  string NAME = ?;
}
class LLVMQualPointerType<LLVMType LLVMQualPointerType:elty = ?, int LLVMQualPointerType:addrspace = ?> {	// LLVMType
  ValueType VT = iPTR;
  LLVMType ElTy = LLVMQualPointerType:elty;
  int AddrSpace = LLVMQualPointerType:addrspace;
  string NAME = ?;
}
class LLVMTruncatedType<int LLVMTruncatedType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMTruncatedType:num;
  string NAME = ?;
}
class LLVMType<ValueType LLVMType:vt = ?> {
  ValueType VT = LLVMType:vt;
  string NAME = ?;
}
class LLVMVectorOfPointersToElt<int LLVMVectorOfPointersToElt:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMVectorOfPointersToElt:num;
  string NAME = ?;
}
class LLVMVectorSameWidth<int LLVMVectorSameWidth:num = ?, LLVMType LLVMVectorSameWidth:elty = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMVectorSameWidth:num;
  ValueType ElTy = LLVMVectorSameWidth:elty.VT;
  string NAME = ?;
}
class MSBuiltin<string MSBuiltin:name = ?> {
  string MSBuiltinName = MSBuiltin:name;
  string NAME = ?;
}
class MnemonicAlias<string MnemonicAlias:From = ?, string MnemonicAlias:To = ?, string MnemonicAlias:VariantName = ""> {
  string FromMnemonic = MnemonicAlias:From;
  string ToMnemonic = MnemonicAlias:To;
  string AsmVariantName = MnemonicAlias:VariantName;
  list<Predicate> Predicates = [];
  string NAME = ?;
}
class Neon_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_1Arg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_90, anonymous_91];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_3Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_92, anonymous_93, anonymous_94];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_3Arg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_95, anonymous_96, anonymous_97];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Compare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_98];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFPToFx_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFPtoInt_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFxToFP_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl3Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl4Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl5Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl6Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class NoCapture<int NoCapture:argNo = ?> {	// IntrinsicProperty
  int ArgNo = NoCapture:argNo;
  string NAME = ?;
}
class Operand<ValueType Operand:ty = ?> {	// DAGOperand
  ValueType Type = Operand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
class OperandWithDefaultOps<ValueType OperandWithDefaultOps:ty = ?, dag OperandWithDefaultOps:defaultops = ?> {	// DAGOperand Operand
  ValueType Type = OperandWithDefaultOps:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = OperandWithDefaultOps:defaultops;
  string NAME = ?;
}
class OptionalDefOperand<ValueType OptionalDefOperand:ty = ?, dag OptionalDefOperand:OpTypes = ?, dag OptionalDefOperand:defaultops = ?> {	// DAGOperand Operand OperandWithDefaultOps
  ValueType Type = OptionalDefOperand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = OptionalDefOperand:OpTypes;
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = OptionalDefOperand:defaultops;
  string NAME = ?;
}
class OutPatFrag<dag OutPatFrag:ops = ?, dag OutPatFrag:frag = ?> {	// SDPatternOperator PatFrag
  list<SDNodeProperty> Properties = [];
  dag Operands = OutPatFrag:ops;
  dag Fragment = OutPatFrag:frag;
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
class PTXReadSRegIntrinsic_r32<string PTXReadSRegIntrinsic_r32:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = !strconcat("__nvvm_read_ptx_sreg_", PTXReadSRegIntrinsic_r32:name);
  string NAME = ?;
}
class PTXReadSRegIntrinsic_r64<string PTXReadSRegIntrinsic_r64:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = !strconcat("__nvvm_read_ptx_sreg_", PTXReadSRegIntrinsic_r64:name);
  string NAME = ?;
}
class Pat<dag Pat:pattern = ?, dag Pat:result = ?> {	// Pattern
  dag PatternToMatch = Pat:pattern;
  list<dag> ResultInstrs = [Pat:result];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
class PatFrag<dag PatFrag:ops = ?, dag PatFrag:frag = ?, string PatFrag:pred = "", SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm> {	// SDPatternOperator
  list<SDNodeProperty> Properties = [];
  dag Operands = PatFrag:ops;
  dag Fragment = PatFrag:frag;
  string PredicateCode = PatFrag:pred;
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = PatFrag:xform;
  string NAME = ?;
}
class PatLeaf<dag PatLeaf:frag = ?, string PatLeaf:pred = "", SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm> {	// SDPatternOperator PatFrag
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = PatLeaf:frag;
  string PredicateCode = PatLeaf:pred;
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = PatLeaf:xform;
  string NAME = ?;
}
class PatPred {
  string NAME = ?;
}
class Pattern<dag Pattern:patternToMatch = ?, list<dag> Pattern:resultInstrs = ?> {
  dag PatternToMatch = Pattern:patternToMatch;
  list<dag> ResultInstrs = Pattern:resultInstrs;
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
class PointerLikeRegClass<int PointerLikeRegClass:Kind = ?> {
  int RegClassKind = PointerLikeRegClass:Kind;
  string NAME = ?;
}
class PowerPC_QPX_FFFF_Intrinsic<string PowerPC_QPX_FFFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FFFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_FFF_Intrinsic<string PowerPC_QPX_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_FF_Intrinsic<string PowerPC_QPX_FF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Intrinsic<string PowerPC_QPX_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_QPX_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_QPX_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_QPX_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_QPX_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_QPX_Intrinsic:param_types;
  list<IntrinsicProperty> IntrProperties = PowerPC_QPX_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_LoadPerm_Intrinsic<string PowerPC_QPX_LoadPerm_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_LoadPerm_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Load_Intrinsic<string PowerPC_QPX_Load_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Load_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Store_Intrinsic<string PowerPC_QPX_Store_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Store_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Intrinsic<string PowerPC_VSX_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_VSX_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_VSX_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_VSX_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_VSX_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_VSX_Intrinsic:param_types;
  list<IntrinsicProperty> IntrProperties = PowerPC_VSX_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Sca_DDD_Intrinsic<string PowerPC_VSX_Sca_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Sca_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Vec_DDD_Intrinsic<string PowerPC_VSX_Vec_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Vec_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Vec_FFF_Intrinsic<string PowerPC_VSX_Vec_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Vec_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_BBB_Intrinsic<string PowerPC_Vec_BBB_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_BBB_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_DDD_Intrinsic<string PowerPC_Vec_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_FFF_Intrinsic<string PowerPC_Vec_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_FF_Intrinsic<string PowerPC_Vec_FF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_FF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_HHH_Intrinsic<string PowerPC_Vec_HHH_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_HHH_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_Intrinsic<string PowerPC_Vec_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_Vec_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_Vec_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_Vec_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_Vec_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_Vec_Intrinsic:param_types;
  list<IntrinsicProperty> IntrProperties = PowerPC_Vec_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_QQQ_Intrinsic<string PowerPC_Vec_QQQ_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_QQQ_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_WWW_Intrinsic<string PowerPC_Vec_WWW_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_WWW_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Predicate<string Predicate:cond = ?> {
  string CondString = Predicate:cond;
  bit AssemblerMatcherPredicate = 0;
  string AssemblerCondString = "";
  string PredicateName = "";
  string NAME = ?;
}
class PredicateOp {
  string NAME = ?;
}
class PredicateOperand<ValueType PredicateOperand:ty = ?, dag PredicateOperand:OpTypes = ?, dag PredicateOperand:AlwaysVal = ?> {	// DAGOperand Operand OperandWithDefaultOps PredicateOp
  ValueType Type = PredicateOperand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = PredicateOperand:OpTypes;
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = PredicateOperand:AlwaysVal;
  string NAME = ?;
}
class PredicateProlog<string PredicateProlog:c = ?> {
  string Code = PredicateProlog:c;
  string NAME = ?;
}
class ProcReadAdvance<int ProcReadAdvance:cycles = ?, list<SchedWrite> ProcReadAdvance:writes = []> {
  int Cycles = ProcReadAdvance:cycles;
  list<SchedWrite> ValidWrites = ProcReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcResGroup<list<ProcResource> ProcResGroup:resources = ?> {	// ProcResourceKind
  list<ProcResource> Resources = ProcResGroup:resources;
  SchedMachineModel SchedModel = ?;
  int BufferSize = -1;
  string NAME = ?;
}
class ProcResource<int ProcResource:num = ?> {	// ProcResourceKind ProcResourceUnits
  ProcResourceKind Kind = EponymousProcResourceKind;
  int NumUnits = ProcResource:num;
  ProcResourceKind Super = ?;
  int BufferSize = -1;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcResourceKind {
  string NAME = ?;
}
class ProcResourceUnits<ProcResourceKind ProcResourceUnits:kind = ?, int ProcResourceUnits:num = ?> {
  ProcResourceKind Kind = ProcResourceUnits:kind;
  int NumUnits = ProcResourceUnits:num;
  ProcResourceKind Super = ?;
  int BufferSize = -1;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcWriteResources<list<ProcResourceKind> ProcWriteResources:resources = ?> {
  list<ProcResourceKind> ProcResources = ProcWriteResources:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class Processor<string Processor:n = ?, ProcessorItineraries Processor:pi = ?, list<SubtargetFeature> Processor:f = ?> {
  string Name = Processor:n;
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = Processor:pi;
  list<SubtargetFeature> Features = Processor:f;
  string NAME = ?;
}
class ProcessorItineraries<list<FuncUnit> ProcessorItineraries:fu = ?, list<Bypass> ProcessorItineraries:bp = ?, list<InstrItinData> ProcessorItineraries:iid = ?> {
  list<FuncUnit> FU = ProcessorItineraries:fu;
  list<Bypass> BP = ProcessorItineraries:bp;
  list<InstrItinData> IID = ProcessorItineraries:iid;
  string NAME = ?;
}
class ProcessorModel<string ProcessorModel:n = ?, SchedMachineModel ProcessorModel:m = ?, list<SubtargetFeature> ProcessorModel:f = ?> {	// Processor
  string Name = ProcessorModel:n;
  SchedMachineModel SchedModel = ProcessorModel:m;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = ProcessorModel:f;
  string NAME = ?;
}
class Pseudo<dag Pseudo:outs = ?, dag Pseudo:ins = ?, string Pseudo:asmstr = ?, list<dag> Pseudo:pattern = ?> {	// Instruction AVRInst AVRInst16
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = Pseudo:outs;
  dag InOperandList = Pseudo:ins;
  string AsmString = Pseudo:asmstr;
  list<dag> Pattern = Pseudo:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class PseudoInstExpansion<dag PseudoInstExpansion:Result = ?> {
  dag ResultInst = PseudoInstExpansion:Result;
  bit isPseudo = 1;
  string NAME = ?;
}
class ReadAdvance<SchedRead ReadAdvance:read = ?, int ReadAdvance:cycles = ?, list<SchedWrite> ReadAdvance:writes = []> {	// ProcReadAdvance
  int Cycles = ReadAdvance:cycles;
  list<SchedWrite> ValidWrites = ReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  SchedRead ReadType = ReadAdvance:read;
  string NAME = ?;
}
class ReadNone<int ReadNone:argNo = ?> {	// IntrinsicProperty
  int ArgNo = ReadNone:argNo;
  string NAME = ?;
}
class ReadOnly<int ReadOnly:argNo = ?> {	// IntrinsicProperty
  int ArgNo = ReadOnly:argNo;
  string NAME = ?;
}
class RegAltNameIndex {
  string Namespace = "";
  string NAME = ?;
}
class Register<string Register:n = ?, list<string> Register:altNames = []> {
  string Namespace = "";
  string AsmName = Register:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class RegisterClass<string RegisterClass:namespace = ?, list<ValueType> RegisterClass:regTypes = ?, int RegisterClass:alignment = ?, dag RegisterClass:regList = ?, RegAltNameIndex RegisterClass:idx = NoRegAltName> {	// DAGOperand
  string Namespace = RegisterClass:namespace;
  list<ValueType> RegTypes = RegisterClass:regTypes;
  int Size = 0;
  int Alignment = RegisterClass:alignment;
  int CopyCost = 1;
  dag MemberList = RegisterClass:regList;
  RegAltNameIndex altNameIndex = RegisterClass:idx;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
class RegisterOperand<RegisterClass RegisterOperand:regclass = ?, string RegisterOperand:pm = "printOperand"> {	// DAGOperand
  RegisterClass RegClass = RegisterOperand:regclass;
  string PrintMethod = RegisterOperand:pm;
  AsmOperandClass ParserMatchClass = ?;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_REGISTER";
  string NAME = ?;
}
class RegisterTuples<list<SubRegIndex> RegisterTuples:Indices = ?, list<dag> RegisterTuples:Regs = ?> {
  list<dag> SubRegs = RegisterTuples:Regs;
  list<SubRegIndex> SubRegIndices = RegisterTuples:Indices;
  string NAME = ?;
}
class RegisterWithSubRegs<string RegisterWithSubRegs:n = ?, list<Register> RegisterWithSubRegs:subregs = ?> {	// Register
  list<string> Register:altNames = [];
  string Namespace = "";
  string AsmName = RegisterWithSubRegs:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = RegisterWithSubRegs:subregs;
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class Requires<list<Predicate> Requires:preds = ?> {
  list<Predicate> Predicates = Requires:preds;
  string NAME = ?;
}
class ReservationKind<bits<1> ReservationKind:val = { ? }> {
  int Value = ReservationKind:val;
  string NAME = ?;
}
class Returned<int Returned:argNo = ?> {	// IntrinsicProperty
  int ArgNo = Returned:argNo;
  string NAME = ?;
}
class SDCallSeqEnd<list<SDTypeConstraint> SDCallSeqEnd:constraints = ?> {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = SDCallSeqEnd:constraints;
  string NAME = ?;
}
class SDCallSeqStart<list<SDTypeConstraint> SDCallSeqStart:constraints = ?> {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = SDCallSeqStart:constraints;
  string NAME = ?;
}
class SDNode<string SDNode:opcode = ?, SDTypeProfile SDNode:typeprof = ?, list<SDNodeProperty> SDNode:props = [], string SDNode:sdclass = "SDNode"> {	// SDPatternOperator
  list<SDNodeProperty> Properties = SDNode:props;
  string Opcode = SDNode:opcode;
  string SDClass = SDNode:sdclass;
  SDTypeProfile TypeProfile = SDNode:typeprof;
  string NAME = ?;
}
class SDNodeProperty {
  string NAME = ?;
}
class SDNodeXForm<SDNode SDNodeXForm:opc = ?, string SDNodeXForm:xformFunction = ?> {
  SDNode Opcode = SDNodeXForm:opc;
  string XFormFunction = SDNodeXForm:xformFunction;
  string NAME = ?;
}
class SDPatternOperator {
  list<SDNodeProperty> Properties = [];
  string NAME = ?;
}
class SDTCVecEltisVT<int SDTCVecEltisVT:OpNum = ?, ValueType SDTCVecEltisVT:vt = ?> {	// SDTypeConstraint
  int OperandNum = SDTCVecEltisVT:OpNum;
  ValueType VT = SDTCVecEltisVT:vt;
  string NAME = ?;
}
class SDTCisEltOfVec<int SDTCisEltOfVec:ThisOp = ?, int SDTCisEltOfVec:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisEltOfVec:ThisOp;
  int OtherOpNum = SDTCisEltOfVec:OtherOp;
  string NAME = ?;
}
class SDTCisFP<int SDTCisFP:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisFP:OpNum;
  string NAME = ?;
}
class SDTCisInt<int SDTCisInt:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisInt:OpNum;
  string NAME = ?;
}
class SDTCisOpSmallerThanOp<int SDTCisOpSmallerThanOp:SmallOp = ?, int SDTCisOpSmallerThanOp:BigOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisOpSmallerThanOp:SmallOp;
  int BigOperandNum = SDTCisOpSmallerThanOp:BigOp;
  string NAME = ?;
}
class SDTCisPtrTy<int SDTCisPtrTy:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisPtrTy:OpNum;
  string NAME = ?;
}
class SDTCisSameAs<int SDTCisSameAs:OpNum = ?, int SDTCisSameAs:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSameAs:OpNum;
  int OtherOperandNum = SDTCisSameAs:OtherOp;
  string NAME = ?;
}
class SDTCisSameNumEltsAs<int SDTCisSameNumEltsAs:OpNum = ?, int SDTCisSameNumEltsAs:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSameNumEltsAs:OpNum;
  int OtherOperandNum = SDTCisSameNumEltsAs:OtherOp;
  string NAME = ?;
}
class SDTCisSameSizeAs<int SDTCisSameSizeAs:OpNum = ?, int SDTCisSameSizeAs:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSameSizeAs:OpNum;
  int OtherOperandNum = SDTCisSameSizeAs:OtherOp;
  string NAME = ?;
}
class SDTCisSubVecOfVec<int SDTCisSubVecOfVec:ThisOp = ?, int SDTCisSubVecOfVec:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSubVecOfVec:ThisOp;
  int OtherOpNum = SDTCisSubVecOfVec:OtherOp;
  string NAME = ?;
}
class SDTCisVT<int SDTCisVT:OpNum = ?, ValueType SDTCisVT:vt = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVT:OpNum;
  ValueType VT = SDTCisVT:vt;
  string NAME = ?;
}
class SDTCisVTSmallerThanOp<int SDTCisVTSmallerThanOp:OpNum = ?, int SDTCisVTSmallerThanOp:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVTSmallerThanOp:OpNum;
  int OtherOperandNum = SDTCisVTSmallerThanOp:OtherOp;
  string NAME = ?;
}
class SDTCisVec<int SDTCisVec:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVec:OpNum;
  string NAME = ?;
}
class SDTypeConstraint<int SDTypeConstraint:opnum = ?> {
  int OperandNum = SDTypeConstraint:opnum;
  string NAME = ?;
}
class SDTypeProfile<int SDTypeProfile:numresults = ?, int SDTypeProfile:numoperands = ?, list<SDTypeConstraint> SDTypeProfile:constraints = ?> {
  int NumResults = SDTypeProfile:numresults;
  int NumOperands = SDTypeProfile:numoperands;
  list<SDTypeConstraint> Constraints = SDTypeProfile:constraints;
  string NAME = ?;
}
class SHA_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_3Arg_i32_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_3Arg_v4i32_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Sched<list<SchedReadWrite> Sched:schedrw = ?> {
  list<SchedReadWrite> SchedRW = Sched:schedrw;
  string NAME = ?;
}
class SchedAlias<SchedReadWrite SchedAlias:match = ?, SchedReadWrite SchedAlias:alias = ?> {
  SchedReadWrite MatchRW = SchedAlias:match;
  SchedReadWrite AliasRW = SchedAlias:alias;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedMachineModel {
  int IssueWidth = -1;
  int MicroOpBufferSize = -1;
  int LoopMicroOpBufferSize = -1;
  int LoadLatency = -1;
  int HighLatency = -1;
  int MispredictPenalty = -1;
  ProcessorItineraries Itineraries = NoItineraries;
  bit PostRAScheduler = 0;
  bit CompleteModel = 1;
  list<Predicate> UnsupportedFeatures = [];
  bit NoModel = 0;
  string NAME = ?;
}
class SchedPredicate<string SchedPredicate:pred = ?> {
  SchedMachineModel SchedModel = ?;
  string Predicate = SchedPredicate:pred;
  string NAME = ?;
}
class SchedRead {	// SchedReadWrite
  string NAME = ?;
}
class SchedReadAdvance<int SchedReadAdvance:cycles = ?, list<SchedWrite> SchedReadAdvance:writes = []> {	// SchedReadWrite SchedRead ProcReadAdvance
  int Cycles = SchedReadAdvance:cycles;
  list<SchedWrite> ValidWrites = SchedReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedReadVariant<list<SchedVar> SchedReadVariant:variants = ?> {	// SchedReadWrite SchedRead SchedVariant
  list<SchedVar> Variants = SchedReadVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedReadWrite {
  string NAME = ?;
}
class SchedVar<SchedPredicate SchedVar:pred = ?, list<SchedReadWrite> SchedVar:selected = ?> {
  SchedPredicate Predicate = SchedVar:pred;
  list<SchedReadWrite> Selected = SchedVar:selected;
  string NAME = ?;
}
class SchedVariant<list<SchedVar> SchedVariant:variants = ?> {
  list<SchedVar> Variants = SchedVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedWrite {	// SchedReadWrite
  string NAME = ?;
}
class SchedWriteRes<list<ProcResourceKind> SchedWriteRes:resources = ?> {	// SchedReadWrite SchedWrite ProcWriteResources
  list<ProcResourceKind> ProcResources = SchedWriteRes:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedWriteVariant<list<SchedVar> SchedWriteVariant:variants = ?> {	// SchedReadWrite SchedWrite SchedVariant
  list<SchedVar> Variants = SchedWriteVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SelectPseudo<dag SelectPseudo:outs = ?, dag SelectPseudo:ins = ?, string SelectPseudo:asmstr = ?, list<dag> SelectPseudo:pattern = ?> {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = SelectPseudo:outs;
  dag InOperandList = SelectPseudo:ins;
  string AsmString = SelectPseudo:asmstr;
  list<dag> Pattern = SelectPseudo:pattern;
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class ShiftPseudo<dag ShiftPseudo:outs = ?, dag ShiftPseudo:ins = ?, string ShiftPseudo:asmstr = ?, list<dag> ShiftPseudo:pattern = ?> {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = ShiftPseudo:outs;
  dag InOperandList = ShiftPseudo:ins;
  string AsmString = ShiftPseudo:asmstr;
  list<dag> Pattern = ShiftPseudo:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class StorePseudo<dag StorePseudo:outs = ?, dag StorePseudo:ins = ?, string StorePseudo:asmstr = ?, list<dag> StorePseudo:pattern = ?> {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = StorePseudo:outs;
  dag InOperandList = StorePseudo:ins;
  string AsmString = StorePseudo:asmstr;
  list<dag> Pattern = StorePseudo:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class SubRegIndex<int SubRegIndex:size = ?, int SubRegIndex:offset = 0> {
  string Namespace = "";
  int Size = SubRegIndex:size;
  int Offset = SubRegIndex:offset;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
class SubtargetFeature<string SubtargetFeature:n = ?, string SubtargetFeature:a = ?, string SubtargetFeature:v = ?, string SubtargetFeature:d = ?, list<SubtargetFeature> SubtargetFeature:i = []> {
  string Name = SubtargetFeature:n;
  string Attribute = SubtargetFeature:a;
  string Value = SubtargetFeature:v;
  string Desc = SubtargetFeature:d;
  list<SubtargetFeature> Implies = SubtargetFeature:i;
  string NAME = ?;
}
class SystemZBinary<string SystemZBinary:name = ?, LLVMType SystemZBinary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinary:type];
  list<LLVMType> ParamTypes = [SystemZBinary:type, SystemZBinary:type];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryCC<LLVMType SystemZBinaryCC:type = ?> {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryCC:type, SystemZBinaryCC:type];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConv<string SystemZBinaryConv:name = ?, LLVMType SystemZBinaryConv:result = ?, LLVMType SystemZBinaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConv:result];
  list<LLVMType> ParamTypes = [SystemZBinaryConv:arg, SystemZBinaryConv:arg];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConvCC<LLVMType SystemZBinaryConvCC:result = ?, LLVMType SystemZBinaryConvCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConvCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryConvCC:arg, SystemZBinaryConvCC:arg];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConvIntCC<LLVMType SystemZBinaryConvIntCC:result = ?, LLVMType SystemZBinaryConvIntCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConvIntCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryConvIntCC:arg, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryInt<string SystemZBinaryInt:name = ?, LLVMType SystemZBinaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryInt:type];
  list<LLVMType> ParamTypes = [SystemZBinaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZQuaternaryInt<string SystemZQuaternaryInt:name = ?, LLVMType SystemZQuaternaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZQuaternaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZQuaternaryInt:type];
  list<LLVMType> ParamTypes = [SystemZQuaternaryInt:type, SystemZQuaternaryInt:type, SystemZQuaternaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZQuaternaryIntCC<LLVMType SystemZQuaternaryIntCC:type = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZQuaternaryIntCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZQuaternaryIntCC:type, SystemZQuaternaryIntCC:type, SystemZQuaternaryIntCC:type, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernary<string SystemZTernary:name = ?, LLVMType SystemZTernary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernary:type];
  list<LLVMType> ParamTypes = [SystemZTernary:type, SystemZTernary:type, SystemZTernary:type];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryConv<string SystemZTernaryConv:name = ?, LLVMType SystemZTernaryConv:result = ?, LLVMType SystemZTernaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryConv:result];
  list<LLVMType> ParamTypes = [SystemZTernaryConv:arg, SystemZTernaryConv:arg, SystemZTernaryConv:result];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryInt<string SystemZTernaryInt:name = ?, LLVMType SystemZTernaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryInt:type];
  list<LLVMType> ParamTypes = [SystemZTernaryInt:type, SystemZTernaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryIntCC<LLVMType SystemZTernaryIntCC:type = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryIntCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZTernaryIntCC:type, SystemZTernaryIntCC:type, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnary<string SystemZUnary:name = ?, LLVMType SystemZUnary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZUnary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnary:type];
  list<LLVMType> ParamTypes = [SystemZUnary:type];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryCC<LLVMType SystemZUnaryCC:type = ?> {	// SDPatternOperator Intrinsic SystemZUnaryConvCC
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZUnaryCC:type];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryConv<string SystemZUnaryConv:name = ?, LLVMType SystemZUnaryConv:result = ?, LLVMType SystemZUnaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZUnaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryConv:result];
  list<LLVMType> ParamTypes = [SystemZUnaryConv:arg];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryConvCC<LLVMType SystemZUnaryConvCC:result = ?, LLVMType SystemZUnaryConvCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryConvCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZUnaryConvCC:arg];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Target {
  InstrInfo InstructionSet = ?;
  list<AsmParser> AssemblyParsers = [DefaultAsmParser];
  list<AsmParserVariant> AssemblyParserVariants = [DefaultAsmParserVariant];
  list<AsmWriter> AssemblyWriters = [DefaultAsmWriter];
  string NAME = ?;
}
class TokenAlias<string TokenAlias:From = ?, string TokenAlias:To = ?> {
  string FromToken = TokenAlias:From;
  string ToToken = TokenAlias:To;
  string NAME = ?;
}
class ValueType<int ValueType:size = ?, int ValueType:value = ?> {
  string Namespace = "MVT";
  int Size = ValueType:size;
  int Value = ValueType:value;
  string NAME = ?;
}
class WriteOnly<int WriteOnly:argNo = ?> {	// IntrinsicProperty
  int ArgNo = WriteOnly:argNo;
  string NAME = ?;
}
class WriteRes<SchedWrite WriteRes:write = ?, list<ProcResourceKind> WriteRes:resources = ?> {	// ProcWriteResources
  list<ProcResourceKind> ProcResources = WriteRes:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  SchedWrite WriteType = WriteRes:write;
  string NAME = ?;
}
class WriteSequence<list<SchedWrite> WriteSequence:writes = ?, int WriteSequence:rep = 1> {	// SchedReadWrite SchedWrite
  list<SchedWrite> Writes = WriteSequence:writes;
  int Repeat = WriteSequence:rep;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class unknown_class {
  string NAME = ?;
}
------------- Defs -----------------
def ADCRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 1, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "adc	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (adde i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ADCWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "adcw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (adde i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ADDRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 0, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "add	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (add i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ADDWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "addw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (add i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ADIWRdK {	// Instruction AVRInst AVRInst16 FWRdK Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 1, 0, k{5}, k{4}, dst{2}, dst{1}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs IWREGS:$rd);
  dag InOperandList = (ins IWREGS:$src, i16imm:$k);
  string AsmString = "adiw	$rd, $k";
  list<dag> Pattern = [(set i16:$rd, (add i16:$src, uimm6:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [HasADDSUBIW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> dst = { ?, ?, ?, ?, ? };
  bits<6> k = { ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ADJCALLSTACKDOWN {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$amt);
  string AsmString = "#ADJCALLSTACKDOWN";
  list<dag> Pattern = [(AVRcallseq_start timm:$amt)];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP, SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ADJCALLSTACKUP {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$amt1, i16imm:$amt2);
  string AsmString = "#ADJCALLSTACKUP";
  list<dag> Pattern = [(AVRcallseq_end timm:$amt1, timm:$amt2)];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP, SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ANDIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 1, 1, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm:$k);
  string AsmString = "andi	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (and i8:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ANDIWRdK {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$rd);
  dag InOperandList = (ins DLDREGS:$src, i16imm:$k);
  string AsmString = "andiw	$rd, $k";
  list<dag> Pattern = [(set i16:$rd, (and i16:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ANDRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 1, 0, 0, 0, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "and	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (and i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ANDWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "andw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (and i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ASRRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 1, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "asr	$rd";
  list<dag> Pattern = [(set i8:$rd, (AVRasr i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ASRWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "asrw	$rd";
  list<dag> Pattern = [(set i16:$rd, (AVRasr i16:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def AVR {	// Target
  InstrInfo InstructionSet = AVRInstrInfo;
  list<AsmParser> AssemblyParsers = [DefaultAsmParser];
  list<AsmParserVariant> AssemblyParserVariants = [DefaultAsmParserVariant];
  list<AsmWriter> AssemblyWriters = [DefaultAsmWriter];
  string NAME = ?;
}
def AVRInstrInfo {	// InstrInfo
  bit isLittleEndianEncoding = 0;
  bit guessInstructionProperties = 1;
  bit decodePositionallyEncodedOperands = 0;
  bit noNamedPositionallyEncodedOperands = 0;
  string NAME = ?;
}
def AVRWrapper {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::WRAPPER";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRWrapper;
  string NAME = ?;
}
def AVR_COND_EQ {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 0);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_GE {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 2);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_LO {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 5);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_LT {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 3);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_MI {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 6);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_NE {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 1);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_PL {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 7);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVR_COND_SH {	// SDPatternOperator PatFrag PatLeaf
  string PatLeaf:pred = "";
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (i8 4);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def AVRasr {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::ASR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def AVRasrLoop {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::ASRLOOP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def AVRbrcond {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPInGlue];
  string Opcode = "AVRISD::BRCOND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRBrcond;
  string NAME = ?;
}
def AVRcall {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOutGlue, SDNPOptInGlue, SDNPVariadic];
  string Opcode = "AVRISD::CALL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRCall;
  string NAME = ?;
}
def AVRcallseq_end {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPOutGlue];
  string Opcode = "ISD::CALLSEQ_END";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRCallSeqEnd;
  string NAME = ?;
}
def AVRcallseq_start {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOutGlue];
  string Opcode = "ISD::CALLSEQ_START";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRCallSeqStart;
  string NAME = ?;
}
def AVRcmp {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue];
  string Opcode = "AVRISD::CMP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRCmp;
  string NAME = ?;
}
def AVRcmpc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPInGlue, SDNPOutGlue];
  string Opcode = "AVRISD::CMPC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRCmp;
  string NAME = ?;
}
def AVRlsl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::LSL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def AVRlslLoop {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::LSLLOOP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def AVRlsr {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::LSR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def AVRlsrLoop {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::LSRLOOP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def AVRretflag {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPVariadic];
  string Opcode = "AVRISD::RET_FLAG";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def AVRretiflag {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPVariadic];
  string Opcode = "AVRISD::RETI_FLAG";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def AVRrol {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::ROL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def AVRror {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "AVRISD::ROR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def AVRselectcc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPInGlue];
  string Opcode = "AVRISD::SELECT_CC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRSelectCC;
  string NAME = ?;
}
def AVRtst {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue];
  string Opcode = "AVRISD::TST";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_AVRTst;
  string NAME = ?;
}
def Any {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 127;
  string NAME = ?;
}
def ArgCC_AVR_RT_DIV {	// CallingConv
  list<CCAction> Actions = [anonymous_834, anonymous_836];
  bit Custom = 0;
  string NAME = ?;
}
def ArgCC_AVR_RT_MUL {	// CallingConv
  list<CCAction> Actions = [anonymous_832];
  bit Custom = 0;
  string NAME = ?;
}
def ArgCC_AVR_Vararg {	// CallingConv
  list<CCAction> Actions = [anonymous_830];
  bit Custom = 0;
  string NAME = ?;
}
def Asr16 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins DREGS:$src, GPR8:$cnt);
  string AsmString = "# Asr16 PSEUDO";
  list<dag> Pattern = [(set i16:$dst, (AVRasrLoop i16:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Asr8 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins GPR8:$src, GPR8:$cnt);
  string AsmString = "# Asr8 PSEUDO";
  list<dag> Pattern = [(set i8:$dst, (AVRasrLoop i8:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def BCLRs {	// Instruction AVRInst AVRInst16 FS
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, 1, s{2}, s{1}, s{0}, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i8imm:$s);
  string AsmString = "bclr	$s";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
def BLD {	// Instruction AVRInst AVRInst16 FRdB
  field bits<16> Inst = { 1, 1, 1, 1, 1, 0, 0, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, i8imm:$b);
  string AsmString = "bld	$rd, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def BRBCsk {	// Instruction AVRInst AVRInst16 FSK
  field bits<16> Inst = { 1, 1, 1, 1, 0, 1, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, s{2}, s{1}, s{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i8imm:$s, relbrtarget_7:$k);
  string AsmString = "brbc	$s, $k";
  list<dag> Pattern = [];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
def BRBSsk {	// Instruction AVRInst AVRInst16 FSK
  field bits<16> Inst = { 1, 1, 1, 1, 0, 0, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, s{2}, s{1}, s{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i8imm:$s, relbrtarget_7:$k);
  string AsmString = "brbs	$s, $k";
  list<dag> Pattern = [];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
def BREAK {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "break";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasBREAK];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def BREQk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 0, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "breq	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_EQ)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRGEk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 1, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 1, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brge	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_GE)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRLOk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 0, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brlo	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_LO)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRLTk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 0, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 1, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brlt	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_LT)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRMIk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 0, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brmi	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_MI)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRNEk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 1, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brne	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_NE)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRPLk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 1, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brpl	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_PL)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BRSHk {	// Instruction AVRInst AVRInst16 FBRsk
  field bits<16> Inst = { 1, 1, 1, 1, 0, 1, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0}, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins relbrtarget_7:$target);
  string AsmString = "brsh	$target";
  list<dag> Pattern = [(AVRbrcond bb:$target, AVR_COND_SH)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> k = { ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def BSETs {	// Instruction AVRInst AVRInst16 FS
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, 0, s{2}, s{1}, s{0}, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i8imm:$s);
  string AsmString = "bset	$s";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> s = { ?, ?, ? };
  string NAME = ?;
}
def BST {	// Instruction AVRInst AVRInst16 FRdB
  field bits<16> Inst = { 1, 1, 1, 1, 1, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, i8imm:$b);
  string AsmString = "bst	$rd, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def BUNDLE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "BUNDLE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CALLk {	// Instruction AVRInst AVRInst32 F32BRk Requires
  field bits<32> Inst = { 1, 0, 0, 1, 0, 1, 0, k{21}, k{20}, k{19}, k{18}, k{17}, 1, 1, 1, k{16}, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins call_target:$k);
  string AsmString = "call	$k";
  list<dag> Pattern = [(AVRcall imm:$k)];
  list<Register> Uses = [SP];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasJMPCALL];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<22> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CBIAb {	// Instruction AVRInst AVRInst16 FIOBIT
  field bits<16> Inst = { 1, 0, 0, 1, 1, 0, 0, 0, A{4}, A{3}, A{2}, A{1}, A{0}, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$addr, i8imm:$bit);
  string AsmString = "cbi	$addr, $bit";
  list<dag> Pattern = [(store (and (i8 (load lowioaddr8:$addr)), iobitposn8:$bit), lowioaddr8:$addr)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> A = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def CBRRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 1, 1, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm_com:$k);
  string AsmString = "cbr	$rd, $k";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CCR {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i8];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = -1;
  dag MemberList = (add SREG);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def CFI_INSTRUCTION {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CLR {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clr	$rd";
  dag ResultInst = (EORRdRr GPR8:$rd, GPR8:$rd);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def COMRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "com	$rd";
  list<dag> Pattern = [(set i8:$rd, (not i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def COMWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "comw	$rd";
  list<dag> Pattern = [(set i16:$rd, (not i16:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def COPY {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def COPY_TO_REGCLASS {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src, i32imm:$regclass);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CPCRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 0, 0, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, GPR8:$rr);
  string AsmString = "cpc	$rd, $rr";
  list<dag> Pattern = [(AVRcmpc i8:$rd, i8:$rr), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CPCWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins DREGS:$src, DREGS:$src2);
  string AsmString = "cpcw	$src, $src2";
  list<dag> Pattern = [(AVRcmpc i16:$src, i16:$src2), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CPIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 0, 1, 1, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, i8imm:$k);
  string AsmString = "cpi	$rd, $k";
  list<dag> Pattern = [(AVRcmp i8:$rd, imm:$k), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CPRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 1, 0, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, GPR8:$rr);
  string AsmString = "cp	$rd, $rr";
  list<dag> Pattern = [(AVRcmp i8:$rd, i8:$rr), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CPSE {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 1, 0, 0, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd, GPR8:$rr);
  string AsmString = "cpse	$rd, $rr";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CPWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins DREGS:$src, DREGS:$src2);
  string AsmString = "cpw	$src, $src2";
  list<dag> Pattern = [(AVRcmp i16:$src, i16:$src2), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CSR_Interrupts {	// CalleeSavedRegs
  dag SaveList = (add (sequence "R%u", 31, 0));
  dag OtherPreserved = ?;
  string NAME = ?;
}
def CSR_Normal {	// CalleeSavedRegs
  dag SaveList = (add R29, R28, (sequence "R%u", 17, 2));
  dag OtherPreserved = ?;
  string NAME = ?;
}
def Commutative {	// IntrinsicProperty
  string NAME = ?;
}
def DBG_VALUE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "DBG_VALUE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def DECRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 1, 0, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "dec	$rd";
  list<dag> Pattern = [(set i8:$rd, (add i8:$src, -1)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def DESK {	// Instruction AVRInst AVRInst16 FDES Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, k{3}, k{2}, k{1}, k{0}, 1, 0, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i8imm:$k);
  string AsmString = "des	$k";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R15, R14, R13, R12, R11, R10, R9, R8, R7, R6, R5, R4, R3, R2, R1, R0];
  list<Predicate> Predicates = [HasDES];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> k = { ?, ?, ?, ? };
  string NAME = ?;
}
def DLDREGS {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R25R24, R19R18, R21R20, R23R22, R31R30, R27R26, R29R28, R17R16);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def DREGS {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R25R24, R19R18, R21R20, R23R22, R31R30, R27R26, R29R28, R17R16, R15R14, R13R12, R11R10, R9R8, R7R6, R5R4, R3R2, R1R0);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def DefaultAsmParser {	// AsmParser
  string AsmParserClassName = "AsmParser";
  string AsmParserInstCleanup = "";
  bit ShouldEmitMatchRegisterName = 1;
  bit ShouldEmitMatchRegisterAltName = 0;
  bit HasMnemonicFirst = 1;
  string NAME = ?;
}
def DefaultAsmParserVariant {	// AsmParserVariant
  int Variant = 0;
  string Name = "";
  string CommentDelimiter = "";
  string RegisterPrefix = "";
  string TokenizingCharacters = "[]*!";
  string SeparatorCharacters = " 	,";
  string BreakCharacters = "";
  string NAME = ?;
}
def DefaultAsmWriter {	// AsmWriter
  string AsmWriterClassName = "InstPrinter";
  int PassSubtarget = 0;
  int Variant = 0;
  string NAME = ?;
}
def EH_LABEL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EICALL {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "eicall";
  list<dag> Pattern = [];
  list<Register> Uses = [SP, R31R30];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasEIJMPCALL];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EIJMP {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "eijmp";
  list<dag> Pattern = [];
  list<Register> Uses = [R31R30];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasEIJMPCALL];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 1;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ELFArchAVR1 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR1";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR2 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR2";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR25 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR25";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR3 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR3";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR31 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR31";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR35 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR35";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR4 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR4";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR5 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR5";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR51 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR51";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVR6 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVR6";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchAVRTiny {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_AVRTINY";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA1 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA1";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA2 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA2";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA3 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA3";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA4 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA4";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA5 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA5";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA6 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA6";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELFArchXMEGA7 {	// SubtargetFeature ELFArch
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "";
  string Attribute = "ELFArch";
  string Value = "ELF::EF_AVR_ARCH_XMEGA7";
  string Desc = "";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def ELPM {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "elpm";
  list<dag> Pattern = [];
  list<Register> Uses = [R31R30];
  list<Register> Defs = [R0];
  list<Predicate> Predicates = [HasELPM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ELPMRdZ {	// Instruction AVRInst AVRInst16 FLPMX Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, 0, 1, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "elpm	$dst, $z";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasELPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ELPMRdZPi {	// Instruction AVRInst AVRInst16 FLPMX Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, 0, 1, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "elpm	$dst, $z+";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R31R30];
  list<Predicate> Predicates = [HasELPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def EORRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 1, 0, 0, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "eor	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (xor i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def EORWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "eorw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (xor i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EXTRACT_SUBREG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EponymousProcResourceKind {	// ProcResourceKind
  string NAME = ?;
}
def FAULTING_LOAD_OP {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def FMUL {	// Instruction AVRInst AVRInst16 FFMULRdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 1, 0, rd{2}, rd{1}, rd{0}, 1, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "fmul	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> rd = { ?, ?, ? };
  bits<3> rr = { ?, ?, ? };
  string NAME = ?;
}
def FMULS {	// Instruction AVRInst AVRInst16 FFMULRdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 1, 1, rd{2}, rd{1}, rd{0}, 0, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "fmuls	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> rd = { ?, ?, ? };
  bits<3> rr = { ?, ?, ? };
  string NAME = ?;
}
def FMULSU {	// Instruction AVRInst AVRInst16 FFMULRdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 1, 1, rd{2}, rd{1}, rd{0}, 1, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "fmulsu	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> rd = { ?, ?, ? };
  bits<3> rr = { ?, ?, ? };
  string NAME = ?;
}
def FRMIDX {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$dst);
  dag InOperandList = (ins DLDREGS:$src, i16imm:$src2);
  string AsmString = "frmidx	$dst, $src, $src2";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def FamilyAVR0 {	// SubtargetFeature FeatureSet Family
  string Name = "avr0";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr0 family";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FamilyAVR1 {	// SubtargetFeature FeatureSet Family
  string Name = "avr1";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr1 family";
  list<SubtargetFeature> Implies = [FamilyAVR0, FeatureLPM];
  string NAME = ?;
}
def FamilyAVR2 {	// SubtargetFeature FeatureSet Family
  string Name = "avr2";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr2 family";
  list<SubtargetFeature> Implies = [FamilyAVR1, FeatureIJMPCALL, FeatureADDSUBIW, FeatureSRAM];
  string NAME = ?;
}
def FamilyAVR25 {	// SubtargetFeature FeatureSet Family
  string Name = "avr25";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr25 family";
  list<SubtargetFeature> Implies = [FamilyAVR2, FeatureMOVW, FeatureLPMX, FeatureSPM, FeatureBREAK];
  string NAME = ?;
}
def FamilyAVR3 {	// SubtargetFeature FeatureSet Family
  string Name = "avr3";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr3 family";
  list<SubtargetFeature> Implies = [FamilyAVR2, FeatureJMPCALL];
  string NAME = ?;
}
def FamilyAVR31 {	// SubtargetFeature FeatureSet Family
  string Name = "avr31";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr31 family";
  list<SubtargetFeature> Implies = [FamilyAVR3, FeatureELPM];
  string NAME = ?;
}
def FamilyAVR35 {	// SubtargetFeature FeatureSet Family
  string Name = "avr35";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr35 family";
  list<SubtargetFeature> Implies = [FamilyAVR3, FeatureMOVW, FeatureLPMX, FeatureSPM, FeatureBREAK];
  string NAME = ?;
}
def FamilyAVR4 {	// SubtargetFeature FeatureSet Family
  string Name = "avr4";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr4 family";
  list<SubtargetFeature> Implies = [FamilyAVR2, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM, FeatureBREAK];
  string NAME = ?;
}
def FamilyAVR5 {	// SubtargetFeature FeatureSet Family
  string Name = "avr5";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr5 family";
  list<SubtargetFeature> Implies = [FamilyAVR3, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM, FeatureBREAK];
  string NAME = ?;
}
def FamilyAVR51 {	// SubtargetFeature FeatureSet Family
  string Name = "avr51";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr51 family";
  list<SubtargetFeature> Implies = [FamilyAVR5, FeatureELPM, FeatureELPMX];
  string NAME = ?;
}
def FamilyAVR6 {	// SubtargetFeature FeatureSet Family
  string Name = "avr6";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avr6 family";
  list<SubtargetFeature> Implies = [FamilyAVR51];
  string NAME = ?;
}
def FamilyAVRTiny {	// SubtargetFeature FeatureSet Family
  string Name = "avrtiny";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the avrtiny family";
  list<SubtargetFeature> Implies = [FamilyAVR0, FeatureBREAK, FeatureSRAM, FeatureTinyEncoding];
  string NAME = ?;
}
def FamilyXMEGA {	// SubtargetFeature FeatureSet Family
  string Name = "xmega";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the xmega family";
  list<SubtargetFeature> Implies = [FamilyAVR51, FeatureEIJMPCALL, FeatureSPMX, FeatureDES];
  string NAME = ?;
}
def FamilyXMEGAU {	// SubtargetFeature FeatureSet Family
  string Name = "xmegau";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "The device is a part of the xmegau family";
  list<SubtargetFeature> Implies = [FamilyXMEGA, FeatureRMW];
  string NAME = ?;
}
def FeatureADDSUBIW {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "addsubiw";
  string Attribute = "m_hasADDSUBIW";
  string Value = "true";
  string Desc = "Enable 16-bit register-immediate addition and subtraction instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureBREAK {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "break";
  string Attribute = "m_hasBREAK";
  string Value = "true";
  string Desc = "The device supports the `BREAK` debugging instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureDES {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "des";
  string Attribute = "m_hasDES";
  string Value = "true";
  string Desc = "The device supports the `DES k` encryption instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureEIJMPCALL {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "eijmpcall";
  string Attribute = "m_hasEIJMPCALL";
  string Value = "true";
  string Desc = "The device supports the `EIJMP`/`EICALL` instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureELPM {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "elpm";
  string Attribute = "m_hasELPM";
  string Value = "true";
  string Desc = "The device supports the ELPM instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureELPMX {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "elpmx";
  string Attribute = "m_hasELPMX";
  string Value = "true";
  string Desc = "The device supports the `ELPM Rd, Z[+]` instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureIJMPCALL {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "ijmpcall";
  string Attribute = "m_hasIJMPCALL";
  string Value = "true";
  string Desc = "The device supports `IJMP`/`ICALL`instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureJMPCALL {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "jmpcall";
  string Attribute = "m_hasJMPCALL";
  string Value = "true";
  string Desc = "The device supports the `JMP` and `CALL` instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureLPM {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "lpm";
  string Attribute = "m_hasLPM";
  string Value = "true";
  string Desc = "The device supports the `LPM` instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureLPMX {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "lpmx";
  string Attribute = "m_hasLPMX";
  string Value = "true";
  string Desc = "The device supports the `LPM Rd, Z[+]` instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureMOVW {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "movw";
  string Attribute = "m_hasMOVW";
  string Value = "true";
  string Desc = "The device supports the 16-bit MOVW instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureMultiplication {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "mul";
  string Attribute = "m_supportsMultiplication";
  string Value = "true";
  string Desc = "The device supports the multiplication instructions";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureRMW {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "rmw";
  string Attribute = "m_supportsRMW";
  string Value = "true";
  string Desc = "The device supports the read-write-modify instructions: XCH, LAS, LAC, LAT";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureSPM {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "spm";
  string Attribute = "m_hasSPM";
  string Value = "true";
  string Desc = "The device supports the `SPM` instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureSPMX {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "spmx";
  string Attribute = "m_hasSPMX";
  string Value = "true";
  string Desc = "The device supports the `SPM Z+` instruction";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureSRAM {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "sram";
  string Attribute = "m_hasSRAM";
  string Value = "true";
  string Desc = "The device has random access memory";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureSetSpecial {	// SubtargetFeature FeatureSet
  string Name = "special";
  string Attribute = "m_FeatureSetDummy";
  string Value = "true";
  string Desc = "Enable use of the entire instruction set - used for debugging";
  list<SubtargetFeature> Implies = [FeatureSRAM, FeatureJMPCALL, FeatureIJMPCALL, FeatureEIJMPCALL, FeatureADDSUBIW, FeatureMOVW, FeatureLPM, FeatureLPMX, FeatureELPM, FeatureELPMX, FeatureSPM, FeatureSPMX, FeatureDES, FeatureRMW, FeatureMultiplication, FeatureBREAK];
  string NAME = ?;
}
def FeatureSmallStack {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "smallstack";
  string Attribute = "m_hasSmallStack";
  string Value = "true";
  string Desc = "The device has an 8-bit stack pointer";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FeatureTinyEncoding {	// SubtargetFeature
  list<SubtargetFeature> SubtargetFeature:i = [];
  string Name = "tinyencoding";
  string Attribute = "m_hasTinyEncoding";
  string Value = "true";
  string Desc = "The device has Tiny core specific instruction encodings";
  list<SubtargetFeature> Implies = [];
  string NAME = ?;
}
def FlagVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 65;
  string NAME = ?;
}
def GC_LABEL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def GPR8 {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i8];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R24, R25, R18, R19, R20, R21, R22, R23, R30, R31, R26, R27, R28, R29, R17, R16, R15, R14, R13, R12, R11, R10, R9, R8, R7, R6, R5, R4, R3, R2, R0, R1);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def GPR8lo {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i8];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R15, R14, R13, R12, R11, R10, R9, R8, R7, R6, R5, R4, R3, R2, R0, R1);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def GPRSP {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add SP);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def G_ADD {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src1, unknown:$src2);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def G_BR {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins unknown:$src1);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def G_OR {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src1, unknown:$src2);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def HasADDSUBIW {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasADDSUBIW()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureADDSUBIW";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasBREAK {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasBREAK()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureBREAK";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasDES {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasDES()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureDES";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasEIJMPCALL {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasEIJMPCALL()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureEIJMPCALL";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasELPM {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasELPM()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureELPM";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasELPMX {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasELPMX()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureELPMX";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasIJMPCALL {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasIJMPCALL()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureIJMPCALL";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasJMPCALL {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasJMPCALL()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureJMPCALL";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasLPM {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasLPM()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureLPM";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasLPMX {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasLPMX()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureLPMX";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasMOVW {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasMOVW()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureMOVW";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasSPM {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasSPM()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureSPM";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasSPMX {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasSPMX()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureSPMX";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasSRAM {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasSRAM()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureSRAM";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasSmallStack {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->HasSmallStack()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureSmallStack";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def HasTinyEncoding {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->hasTinyEncoding()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureTinyEncoding";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def ICALL {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "icall";
  list<dag> Pattern = [];
  list<Register> Uses = [SP, R31R30];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasIJMPCALL];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def IJMP {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "ijmp";
  list<dag> Pattern = [];
  list<Register> Uses = [R31R30];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasIJMPCALL];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 1;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def IMPLICIT_DEF {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def INCRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 0, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "inc	$rd";
  list<dag> Pattern = [(set i8:$rd, (add i8:$src, 1)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def INLINEASM {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def INRdA {	// Instruction AVRInst AVRInst16 FIORdA
  field bits<16> Inst = { 1, 0, 1, 1, 0, A{5}, A{4}, d{4}, d{3}, d{2}, d{1}, d{0}, A{3}, A{2}, A{1}, A{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins i16imm:$src);
  string AsmString = "in	$dst, $src";
  list<dag> Pattern = [(set i8:$dst, (load ioaddr8:$src))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  bits<6> A = { ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def INSERT_SUBREG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, unknown:$subsrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$supersrc = $dst";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def INWRdA {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins i16imm:$src);
  string AsmString = "inw	$dst, $src";
  list<dag> Pattern = [(set i16:$dst, (load ioaddr16:$src))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def IWREGS {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R25R24, R31R30, R27R26, R29R28);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def ImmAsmOperand {	// AsmOperandClass
  string Name = "Imm";
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = ?;
  string DiagnosticType = "";
  bit IsOptional = 0;
  string DefaultMethod = ?;
  string NAME = ?;
}
def IntrArgMemOnly {	// IntrinsicProperty
  string NAME = ?;
}
def IntrConvergent {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoDuplicate {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoMem {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoReturn {	// IntrinsicProperty
  string NAME = ?;
}
def IntrReadMem {	// IntrinsicProperty
  string NAME = ?;
}
def IntrWriteMem {	// IntrinsicProperty
  string NAME = ?;
}
def JMPk {	// Instruction AVRInst AVRInst32 F32BRk Requires
  field bits<32> Inst = { 1, 0, 0, 1, 0, 1, 0, k{21}, k{20}, k{19}, k{18}, k{17}, 1, 1, 0, k{16}, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins call_target:$k);
  string AsmString = "jmp	$k";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasJMPCALL];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<22> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def KILL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LACZRd {	// Instruction AVRInst AVRInst16 FZRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 1, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lac	$z, $rd";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [SupportsRMW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LASZRd {	// Instruction AVRInst AVRInst16 FZRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 1, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "las	$z, $rd";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [SupportsRMW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LATZRd {	// Instruction AVRInst AVRInst16 FZRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 1, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lat	$z, $rd";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [SupportsRMW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LD8 {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i8];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R24, R25, R18, R19, R20, R21, R22, R23, R30, R31, R26, R27, R28, R29, R17, R16);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def LD8lo {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i8];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R23, R22, R21, R20, R19, R18, R17, R16);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def LDDRdPtrQ {	// Instruction AVRInst AVRInst16 FSTDLDD Requires
  field bits<16> Inst = { 1, 0, memri{5}, 0, memri{4}, memri{3}, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, memri{6}, memri{2}, memri{1}, memri{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$reg);
  dag InOperandList = (ins memri:$memri);
  string AsmString = "ldd	$reg, $memri";
  list<dag> Pattern = [(set i8:$reg, (load addr:$memri))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> memri = { ?, ?, ?, ?, ?, ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDDSTDPtrReg {	// DAGOperand Operand
  ValueType Type = i16;
  string PrintMethod = "printOperand";
  string EncoderMethod = "encodeLDSTPtrReg";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops PTRDISPREGS);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = PtrRegAsmOperand;
  string NAME = ?;
}
def LDDWRdPtrQ {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins memri:$memri);
  string AsmString = "lddw	$dst, $memri";
  list<dag> Pattern = [(set i16:$dst, (load addr:$memri))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "@earlyclobber $dst";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDDWRdYQ {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins memri:$memri);
  string AsmString = "lddw	$dst, $memri";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 1, 1, 1, 0, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins i8imm:$k);
  string AsmString = "ldi	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, imm:$k)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDIWRdK {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$dst);
  dag InOperandList = (ins i16imm:$src);
  string AsmString = "ldiw	$dst, $src";
  list<dag> Pattern = [(set i16:$dst, imm:$src)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDRdPtr {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$reg);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg);
  string AsmString = "ld	$reg, $ptrreg";
  list<dag> Pattern = [(set GPR8:$reg, (load i16:$ptrreg))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDRdPtrPd {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$reg, PTRREGS:$base_wb);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg);
  string AsmString = "ld	$reg, -$ptrreg";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $reg,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDRdPtrPi {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$reg, PTRREGS:$base_wb);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg);
  string AsmString = "ld	$reg, $ptrreg+";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $reg,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDSRdK {	// Instruction AVRInst AVRInst32 F32DM Requires
  field bits<32> Inst = { 1, 0, 0, 1, 0, 0, 0, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 0, 0, 0, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins i16imm:$k);
  string AsmString = "lds	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (load imm:$k))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<16> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LDSTPtrReg {	// DAGOperand Operand
  ValueType Type = i16;
  string PrintMethod = "printOperand";
  string EncoderMethod = "encodeLDSTPtrReg";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops PTRREGS);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = PtrRegAsmOperand;
  string NAME = ?;
}
def LDSWRdK {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins i16imm:$src);
  string AsmString = "ldsw	$dst, $src";
  list<dag> Pattern = [(set i16:$dst, (load imm:$src))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDWRdPtr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$reg);
  dag InOperandList = (ins PTRDISPREGS:$ptrreg);
  string AsmString = "ldw	$reg, $ptrreg";
  list<dag> Pattern = [(set i16:$reg, (load i16:$ptrreg))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "@earlyclobber $reg";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDWRdPtrPd {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$reg, PTRREGS:$base_wb);
  dag InOperandList = (ins PTRREGS:$ptrreg);
  string AsmString = "ldw	$reg, -$ptrreg";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $reg,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDWRdPtrPi {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$reg, PTRREGS:$base_wb);
  dag InOperandList = (ins PTRREGS:$ptrreg);
  string AsmString = "ldw	$reg, $ptrreg+";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $reg,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LIFETIME_END {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "LIFETIME_END";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LIFETIME_START {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "LIFETIME_START";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LOAD_STACK_GUARD {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs ptr_rc:$dst);
  dag InOperandList = (ins);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LOCAL_ESCAPE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins ptr_rc:$symbol, i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LPM {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "lpm";
  list<dag> Pattern = [];
  list<Register> Uses = [R31R30];
  list<Register> Defs = [R0];
  list<Predicate> Predicates = [HasLPM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LPMRdZ {	// Instruction AVRInst AVRInst16 FLPMX Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, 0, 1, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lpm	$dst, $z";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasLPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LPMRdZPi {	// Instruction AVRInst AVRInst16 FLPMX Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, 0, 1, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lpm	$dst, $z+";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R31R30];
  list<Predicate> Predicates = [HasLPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LPMWRdZ {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lpmw	$dst, $z";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasLPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LPMWRdZPi {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "lpmw	$dst, $z+";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R31R30];
  list<Predicate> Predicates = [HasLPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 1;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LSLRd {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 0, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "lsl	$rd";
  list<dag> Pattern = [(set i8:$rd, (AVRlsl i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LSLWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "lslw	$rd";
  list<dag> Pattern = [(set i16:$rd, (AVRlsl i16:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LSRRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 1, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "lsr	$rd";
  list<dag> Pattern = [(set i8:$rd, (AVRlsr i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def LSRWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "lsrw	$rd";
  list<dag> Pattern = [(set i16:$rd, (AVRlsr i16:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Lsl16 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins DREGS:$src, GPR8:$cnt);
  string AsmString = "# Lsl16 PSEUDO";
  list<dag> Pattern = [(set i16:$dst, (AVRlslLoop i16:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Lsl8 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins GPR8:$src, GPR8:$cnt);
  string AsmString = "# Lsl8 PSEUDO";
  list<dag> Pattern = [(set i8:$dst, (AVRlslLoop i8:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Lsr16 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins DREGS:$src, GPR8:$cnt);
  string AsmString = "# Lsr16 PSEUDO";
  list<dag> Pattern = [(set i16:$dst, (AVRlsrLoop i16:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Lsr8 {	// Instruction AVRInst AVRInst16 Pseudo ShiftPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins GPR8:$src, GPR8:$cnt);
  string AsmString = "# Lsr8 PSEUDO";
  list<dag> Pattern = [(set i8:$dst, (AVRlsrLoop i8:$src, i8:$cnt))];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def MOVRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 1, 0, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$rr);
  string AsmString = "mov	$rd, $rr";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MOVWRdRr {	// Instruction AVRInst AVRInst16 FMOVWRdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 0, 1, d{4}, d{3}, d{2}, d{1}, r{4}, r{3}, r{2}, r{1} };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "movw	$dst, $src";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasMOVW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  bits<5> r = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MULRdRr {	// Instruction AVRInst AVRInst16 FRdRr Requires
  field bits<16> Inst = { 1, 0, 0, 1, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "mul	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MULSRdRr {	// Instruction AVRInst AVRInst16 FMUL2RdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 0, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "muls	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MULSURdRr {	// Instruction AVRInst AVRInst16 FFMULRdRr Requires
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 1, 1, 0, rd{2}, rd{1}, rd{0}, 0, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$lhs, GPR8:$rhs);
  string AsmString = "mulsu	$lhs, $rhs";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [R1, R0, SREG];
  list<Predicate> Predicates = [SupportsMultiplication];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<3> rd = { ?, ?, ? };
  bits<3> rr = { ?, ?, ? };
  string NAME = ?;
}
def MemriAsmOperand {	// AsmOperandClass
  string Name = "Memri";
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = "parseMemriOperand";
  string DiagnosticType = "";
  bit IsOptional = 0;
  string DefaultMethod = ?;
  string NAME = ?;
}
def MetadataVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 121;
  string NAME = ?;
}
def NEGRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "neg	$rd";
  list<dag> Pattern = [(set i8:$rd, (ineg i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def NOOP_SDNodeXForm {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "";
  string NAME = ?;
}
def NOP {	// Instruction AVRInst AVRInst16 F16
  field bits<16> Inst = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "nop";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def NoBypass {	// Bypass
  string NAME = ?;
}
def NoHonorSignDependentRounding {	// Predicate
  string CondString = "!TM.Options.HonorSignDependentRoundingFPMath()";
  bit AssemblerMatcherPredicate = 0;
  string AssemblerCondString = "";
  string PredicateName = "";
  string NAME = ?;
}
def NoItineraries {	// ProcessorItineraries
  list<FuncUnit> FU = [];
  list<Bypass> BP = [];
  list<InstrItinData> IID = [];
  string NAME = ?;
}
def NoItinerary {	// InstrItinClass
  string NAME = ?;
}
def NoReadAdvance {	// SchedReadWrite SchedRead ProcReadAdvance SchedReadAdvance
  list<SchedWrite> SchedReadAdvance:writes = [];
  int Cycles = 0;
  list<SchedWrite> ValidWrites = [];
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
def NoRegAltName {	// RegAltNameIndex
  string Namespace = "";
  string NAME = ?;
}
def NoSchedModel {	// SchedMachineModel
  int IssueWidth = -1;
  int MicroOpBufferSize = -1;
  int LoopMicroOpBufferSize = -1;
  int LoadLatency = -1;
  int HighLatency = -1;
  int MispredictPenalty = -1;
  ProcessorItineraries Itineraries = NoItineraries;
  bit PostRAScheduler = 0;
  bit CompleteModel = 0;
  list<Predicate> UnsupportedFeatures = [];
  bit NoModel = 1;
  string NAME = ?;
}
def NoSchedPred {	// SchedPredicate
  SchedMachineModel SchedModel = ?;
  string Predicate = "true";
  string NAME = ?;
}
def NoWrite {	// SchedReadWrite SchedWrite
  string NAME = ?;
}
def ORIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 1, 0, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm:$k);
  string AsmString = "ori	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (or i8:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ORIWRdK {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$rd);
  dag InOperandList = (ins DLDREGS:$src, i16imm:$rr);
  string AsmString = "oriw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (or i16:$src, imm:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ORRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 1, 0, 1, 0, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "or	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (or i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ORWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "orw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (or i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 1;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def OUTARr {	// Instruction AVRInst AVRInst16 FIOARr
  field bits<16> Inst = { 1, 0, 1, 1, 1, A{5}, A{4}, r{4}, r{3}, r{2}, r{1}, r{0}, A{3}, A{2}, A{1}, A{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$dst, GPR8:$src);
  string AsmString = "out	$dst, $src";
  list<dag> Pattern = [(store i8:$src, ioaddr8:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<6> A = { ?, ?, ?, ?, ?, ? };
  bits<5> r = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def OUTWARr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$dst, DREGS:$src);
  string AsmString = "outw	$dst, $src";
  list<dag> Pattern = [(store i16:$src, ioaddr16:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def OtherVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 0;
  string NAME = ?;
}
def PATCHABLE_FUNCTION_ENTER {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "# XRay Function Enter.";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PATCHABLE_OP {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = 1;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 1;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PATCHABLE_RET {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins variable_ops);
  string AsmString = "# XRay Function Exit.";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 1;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 1;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PATCHPOINT {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins i64imm:$id, i32imm:$nbytes, unknown:$callee, i32imm:$nargs, i32imm:$cc, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PHI {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins variable_ops);
  string AsmString = "PHINODE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def POPRd {	// Instruction AVRInst AVRInst16 FRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 1, 1, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$reg);
  dag InOperandList = (ins);
  string AsmString = "pop	$reg";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def POPWRd {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$reg);
  dag InOperandList = (ins);
  string AsmString = "popw	$reg";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PTRDISPREGS {	// DAGOperand RegisterClass
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R31R30, R29R28);
  RegAltNameIndex altNameIndex = ptr;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def PTRREGS {	// DAGOperand RegisterClass
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R27R26, R29R28, R31R30);
  RegAltNameIndex altNameIndex = ptr;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def PUSHRr {	// Instruction AVRInst AVRInst16 FRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, d{4}, d{3}, d{2}, d{1}, d{0}, 1, 1, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$reg);
  string AsmString = "push	$reg";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = 1;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def PUSHWRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins DREGS:$reg);
  string AsmString = "pushw	$reg";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = 1;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PtrRegAsmOperand {	// AsmOperandClass
  string Name = "Reg";
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = ?;
  string DiagnosticType = "";
  bit IsOptional = 0;
  string DefaultMethod = ?;
  string NAME = ?;
}
def R0 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r0";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [0];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def R1 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r1";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [1];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };
  string NAME = ?;
}
def R10 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r10";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [10];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 };
  string NAME = ?;
}
def R11 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r11";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [11];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1 };
  string NAME = ?;
}
def R11R10 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r11:r10";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R10, R11];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [10];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 };
  string NAME = ?;
}
def R12 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r12";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [12];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 };
  string NAME = ?;
}
def R13 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r13";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [13];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1 };
  string NAME = ?;
}
def R13R12 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r13:r12";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R12, R13];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [12];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 };
  string NAME = ?;
}
def R14 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r14";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [14];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  string NAME = ?;
}
def R15 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r15";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [15];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1 };
  string NAME = ?;
}
def R15R14 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r15:r14";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R14, R15];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [14];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  string NAME = ?;
}
def R16 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r16";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [16];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 };
  string NAME = ?;
}
def R17 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r17";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [17];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 };
  string NAME = ?;
}
def R17R16 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r17:r16";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R16, R17];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [16];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 };
  string NAME = ?;
}
def R18 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r18";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [18];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0 };
  string NAME = ?;
}
def R19 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r19";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [19];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1 };
  string NAME = ?;
}
def R19R18 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r19:r18";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R18, R19];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [18];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0 };
  string NAME = ?;
}
def R1R0 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r1:r0";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R0, R1];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [0];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def R2 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r2";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [2];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };
  string NAME = ?;
}
def R20 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r20";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [20];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0 };
  string NAME = ?;
}
def R21 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r21";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [21];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1 };
  string NAME = ?;
}
def R21R20 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r21:r20";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R20, R21];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [20];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0 };
  string NAME = ?;
}
def R22 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r22";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [22];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 };
  string NAME = ?;
}
def R23 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r23";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [23];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1 };
  string NAME = ?;
}
def R23R22 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r23:r22";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R22, R23];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [22];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 };
  string NAME = ?;
}
def R24 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r24";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [24];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 };
  string NAME = ?;
}
def R25 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r25";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [25];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1 };
  string NAME = ?;
}
def R25R24 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r25:r24";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R24, R25];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [24];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 };
  string NAME = ?;
}
def R26 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r26";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [26];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0 };
  string NAME = ?;
}
def R27 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r27";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [27];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1 };
  string NAME = ?;
}
def R27R26 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r27:r26";
  list<string> AltNames = ["X"];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R26, R27];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [ptr];
  list<int> DwarfNumbers = [26];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0 };
  string NAME = ?;
}
def R28 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r28";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [28];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 };
  string NAME = ?;
}
def R29 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r29";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [29];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1 };
  string NAME = ?;
}
def R29R28 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r29:r28";
  list<string> AltNames = ["Y"];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R28, R29];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [ptr];
  list<int> DwarfNumbers = [28];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 };
  string NAME = ?;
}
def R3 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r3";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [3];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 };
  string NAME = ?;
}
def R30 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r30";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [30];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 };
  string NAME = ?;
}
def R31 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r31";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [31];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 };
  string NAME = ?;
}
def R31R30 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r31:r30";
  list<string> AltNames = ["Z"];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R30, R31];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [ptr];
  list<int> DwarfNumbers = [30];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 };
  string NAME = ?;
}
def R3R2 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r3:r2";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R2, R3];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [2];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };
  string NAME = ?;
}
def R4 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r4";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [4];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 };
  string NAME = ?;
}
def R5 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r5";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [5];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1 };
  string NAME = ?;
}
def R5R4 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r5:r4";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R4, R5];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [4];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 };
  string NAME = ?;
}
def R6 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r6";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [6];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 };
  string NAME = ?;
}
def R7 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r7";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [7];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 };
  string NAME = ?;
}
def R7R6 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r7:r6";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R6, R7];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [6];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 };
  string NAME = ?;
}
def R8 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r8";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [8];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };
  string NAME = ?;
}
def R9 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r9";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [9];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 };
  string NAME = ?;
}
def R9R8 {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "r9:r8";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [R8, R9];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [8];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };
  string NAME = ?;
}
def RCALLk {	// Instruction AVRInst AVRInst16 FBRk
  field bits<16> Inst = { 1, 1, 0, 1, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins brtarget_13:$target);
  string AsmString = "rcall	$target";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<12> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def REG_SEQUENCE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def RET {	// Instruction AVRInst AVRInst16 F16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "ret";
  list<dag> Pattern = [(AVRretflag)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 1;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def RETI {	// Instruction AVRInst AVRInst16 F16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "reti";
  list<dag> Pattern = [(AVRretiflag)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 1;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def RJMPk {	// Instruction AVRInst AVRInst16 FBRk
  field bits<16> Inst = { 1, 1, 0, 0, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins brtarget_13:$target);
  string AsmString = "rjmp	$target";
  list<dag> Pattern = [(br bb:$target)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<12> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ROLRd {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 1, 1, 1, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "rol	$rd";
  list<dag> Pattern = [(set i8:$rd, (AVRrol i8:$src)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ROLWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "rolw	$rd";
  list<dag> Pattern = [(set i16:$rd, (AVRrol i16:$src)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def RORRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 1, 1, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "ror	$rd";
  list<dag> Pattern = [(set i8:$rd, (AVRror i8:$src)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def RORWRd {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "rorw	$rd";
  list<dag> Pattern = [(set i16:$rd, (AVRror i16:$src)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ReadDefault {	// SchedReadWrite SchedRead
  string NAME = ?;
}
def Required {	// ReservationKind
  int Value = 0;
  string NAME = ?;
}
def Reserved {	// ReservationKind
  int Value = 1;
  string NAME = ?;
}
def RetCC_AVR {	// CallingConv
  list<CCAction> Actions = [anonymous_823, anonymous_825];
  bit Custom = 0;
  string NAME = ?;
}
def RetCC_AVR_RT {	// CallingConv
  list<CCAction> Actions = [anonymous_827, anonymous_829];
  bit Custom = 0;
  string NAME = ?;
}
def SBCIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 0, 0, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm:$k);
  string AsmString = "sbci	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (sube i8:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SBCIWRdK {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$rd);
  dag InOperandList = (ins DLDREGS:$src, i16imm:$rr);
  string AsmString = "sbciw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (sube i16:$src, imm:$rr)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SBCRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 0, 1, 0, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "sbc	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (sube i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SBCWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "sbcw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (sube i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [SREG];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SBIAb {	// Instruction AVRInst AVRInst16 FIOBIT
  field bits<16> Inst = { 1, 0, 0, 1, 1, 0, 1, 0, A{4}, A{3}, A{2}, A{1}, A{0}, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$addr, i8imm:$bit);
  string AsmString = "sbi	$addr, $bit";
  list<dag> Pattern = [(store (or (i8 (load lowioaddr8:$addr)), iobitpos8:$bit), lowioaddr8:$addr)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> A = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def SBICAb {	// Instruction AVRInst AVRInst16 FIOBIT
  field bits<16> Inst = { 1, 0, 0, 1, 1, 0, 0, 1, A{4}, A{3}, A{2}, A{1}, A{0}, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$a, i8imm:$b);
  string AsmString = "sbic	$a, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> A = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def SBISAb {	// Instruction AVRInst AVRInst16 FIOBIT
  field bits<16> Inst = { 1, 0, 0, 1, 1, 0, 1, 1, A{4}, A{3}, A{2}, A{1}, A{0}, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$a, i8imm:$b);
  string AsmString = "sbis	$a, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> A = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def SBIWRdK {	// Instruction AVRInst AVRInst16 FWRdK Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 1, 1, k{5}, k{4}, dst{2}, dst{1}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs IWREGS:$rd);
  dag InOperandList = (ins IWREGS:$src, i16imm:$k);
  string AsmString = "sbiw	$rd, $k";
  list<dag> Pattern = [(set i16:$rd, (sub i16:$src, uimm6:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [HasADDSUBIW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> dst = { ?, ?, ?, ?, ? };
  bits<6> k = { ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SBRCRrB {	// Instruction AVRInst AVRInst16 FRdB
  field bits<16> Inst = { 1, 1, 1, 1, 1, 1, 0, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rr, i8imm:$b);
  string AsmString = "sbrc	$rr, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def SBRRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 1, 0, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm:$k);
  string AsmString = "sbr	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (or i8:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SBRSRrB {	// Instruction AVRInst AVRInst16 FRdB
  field bits<16> Inst = { 1, 1, 1, 1, 1, 1, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, b{2}, b{1}, b{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rr, i8imm:$b);
  string AsmString = "sbrs	$rr, $b";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<3> b = { ?, ?, ? };
  string NAME = ?;
}
def SDNPAssociative {	// SDNodeProperty
  string NAME = ?;
}
def SDNPCommutative {	// SDNodeProperty
  string NAME = ?;
}
def SDNPHasChain {	// SDNodeProperty
  string NAME = ?;
}
def SDNPInGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMayLoad {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMayStore {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMemOperand {	// SDNodeProperty
  string NAME = ?;
}
def SDNPOptInGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPOutGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPSideEffect {	// SDNodeProperty
  string NAME = ?;
}
def SDNPVariadic {	// SDNodeProperty
  string NAME = ?;
}
def SDNPWantParent {	// SDNodeProperty
  string NAME = ?;
}
def SDNPWantRoot {	// SDNodeProperty
  string NAME = ?;
}
def SDTAtomic2 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_466, anonymous_467, anonymous_468];
  string NAME = ?;
}
def SDTAtomic3 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_462, anonymous_463, anonymous_464, anonymous_465];
  string NAME = ?;
}
def SDTAtomicFence {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_460, anonymous_461];
  string NAME = ?;
}
def SDTAtomicLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_471, anonymous_472];
  string NAME = ?;
}
def SDTAtomicStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_469, anonymous_470];
  string NAME = ?;
}
def SDTBr {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_403];
  string NAME = ?;
}
def SDTBrCC {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 4;
  list<SDTypeConstraint> Constraints = [anonymous_404, anonymous_405, anonymous_406];
  string NAME = ?;
}
def SDTBrcond {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_407, anonymous_408];
  string NAME = ?;
}
def SDTBrind {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_409];
  string NAME = ?;
}
def SDTCatchret {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_410, anonymous_411];
  string NAME = ?;
}
def SDTConvertOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_473, anonymous_474, anonymous_475, anonymous_476];
  string NAME = ?;
}
def SDTExtInreg {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_385, anonymous_386, anonymous_387, anonymous_388];
  string NAME = ?;
}
def SDTFPBinOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_355, anonymous_356, anonymous_357];
  string NAME = ?;
}
def SDTFPExtendOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_378, anonymous_379, anonymous_380];
  string NAME = ?;
}
def SDTFPLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_340];
  string NAME = ?;
}
def SDTFPRoundOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_375, anonymous_376, anonymous_377];
  string NAME = ?;
}
def SDTFPSignOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_358, anonymous_359, anonymous_360];
  string NAME = ?;
}
def SDTFPTernaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_361, anonymous_362, anonymous_363, anonymous_364];
  string NAME = ?;
}
def SDTFPToIntOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_383, anonymous_384];
  string NAME = ?;
}
def SDTFPUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_373, anonymous_374];
  string NAME = ?;
}
def SDTIStore {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_414, anonymous_415, anonymous_416];
  string NAME = ?;
}
def SDTIntBinHiLoOp {	// SDTypeProfile
  int NumResults = 2;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_351, anonymous_352, anonymous_353, anonymous_354];
  string NAME = ?;
}
def SDTIntBinOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_343, anonymous_344, anonymous_345];
  string NAME = ?;
}
def SDTIntExtendOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_367, anonymous_368, anonymous_369];
  string NAME = ?;
}
def SDTIntLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_339];
  string NAME = ?;
}
def SDTIntSatNoShOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_349, anonymous_350];
  string NAME = ?;
}
def SDTIntShiftOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_346, anonymous_347, anonymous_348];
  string NAME = ?;
}
def SDTIntToFPOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_381, anonymous_382];
  string NAME = ?;
}
def SDTIntTruncOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_370, anonymous_371, anonymous_372];
  string NAME = ?;
}
def SDTIntUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_365, anonymous_366];
  string NAME = ?;
}
def SDTLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_412];
  string NAME = ?;
}
def SDTMaskedGather {	// SDTypeProfile
  int NumResults = 2;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_426, anonymous_427, anonymous_428, anonymous_429, anonymous_430, anonymous_431, anonymous_432];
  string NAME = ?;
}
def SDTMaskedLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_421, anonymous_422, anonymous_423, anonymous_424, anonymous_425];
  string NAME = ?;
}
def SDTMaskedScatter {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_433, anonymous_434, anonymous_435, anonymous_436, anonymous_437, anonymous_438];
  string NAME = ?;
}
def SDTMaskedStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_417, anonymous_418, anonymous_419, anonymous_420];
  string NAME = ?;
}
def SDTMemBarrier {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_455, anonymous_456, anonymous_457, anonymous_458, anonymous_459];
  string NAME = ?;
}
def SDTNone {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTOther {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_342];
  string NAME = ?;
}
def SDTPrefetch {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 4;
  list<SDTypeConstraint> Constraints = [anonymous_451, anonymous_452, anonymous_453, anonymous_454];
  string NAME = ?;
}
def SDTPtrLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_341];
  string NAME = ?;
}
def SDTSelect {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_392, anonymous_393, anonymous_394];
  string NAME = ?;
}
def SDTSelectCC {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_399, anonymous_400, anonymous_401, anonymous_402];
  string NAME = ?;
}
def SDTSetCC {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_389, anonymous_390, anonymous_391];
  string NAME = ?;
}
def SDTStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_413];
  string NAME = ?;
}
def SDTSubVecExtract {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_446, anonymous_447];
  string NAME = ?;
}
def SDTSubVecInsert {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_448, anonymous_449, anonymous_450];
  string NAME = ?;
}
def SDTUNDEF {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTVSelect {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_395, anonymous_396, anonymous_397, anonymous_398];
  string NAME = ?;
}
def SDTVecExtract {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_441, anonymous_442];
  string NAME = ?;
}
def SDTVecInsert {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_443, anonymous_444, anonymous_445];
  string NAME = ?;
}
def SDTVecShuffle {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_439, anonymous_440];
  string NAME = ?;
}
def SDT_AVRBrcond {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_761, anonymous_762];
  string NAME = ?;
}
def SDT_AVRCall {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_758];
  string NAME = ?;
}
def SDT_AVRCallSeqEnd {	// SDTypeProfile SDCallSeqEnd
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_756, anonymous_757];
  string NAME = ?;
}
def SDT_AVRCallSeqStart {	// SDTypeProfile SDCallSeqStart
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_755];
  string NAME = ?;
}
def SDT_AVRCmp {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_763];
  string NAME = ?;
}
def SDT_AVRSelectCC {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_765, anonymous_766, anonymous_767];
  string NAME = ?;
}
def SDT_AVRTst {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_764];
  string NAME = ?;
}
def SDT_AVRWrapper {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_759, anonymous_760];
  string NAME = ?;
}
def SDT_assertext {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_497, anonymous_498, anonymous_499];
  string NAME = ?;
}
def SETEQ {	// CondCode
  string NAME = ?;
}
def SETGE {	// CondCode
  string NAME = ?;
}
def SETGT {	// CondCode
  string NAME = ?;
}
def SETLE {	// CondCode
  string NAME = ?;
}
def SETLT {	// CondCode
  string NAME = ?;
}
def SETNE {	// CondCode
  string NAME = ?;
}
def SETO {	// CondCode
  string NAME = ?;
}
def SETOEQ {	// CondCode
  string NAME = ?;
}
def SETOGE {	// CondCode
  string NAME = ?;
}
def SETOGT {	// CondCode
  string NAME = ?;
}
def SETOLE {	// CondCode
  string NAME = ?;
}
def SETOLT {	// CondCode
  string NAME = ?;
}
def SETONE {	// CondCode
  string NAME = ?;
}
def SETUEQ {	// CondCode
  string NAME = ?;
}
def SETUGE {	// CondCode
  string NAME = ?;
}
def SETUGT {	// CondCode
  string NAME = ?;
}
def SETULE {	// CondCode
  string NAME = ?;
}
def SETULT {	// CondCode
  string NAME = ?;
}
def SETUNE {	// CondCode
  string NAME = ?;
}
def SETUO {	// CondCode
  string NAME = ?;
}
def SEXT {	// Instruction AVRInst AVRInst16 Pseudo ExtensionPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "sext	$dst, $src";
  list<dag> Pattern = [(set i16:$dst, (sext i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SLEEP {	// Instruction AVRInst AVRInst16 F16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "sleep";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SP {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 };
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "SP";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [SPL, SPH];
  list<SubRegIndex> SubRegIndices = [sub_lo, sub_hi];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [32];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 1;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def SPH {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "SPH";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [33];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 };
  string NAME = ?;
}
def SPL {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "SPL";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [32];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def SPM {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "spm";
  list<dag> Pattern = [];
  list<Register> Uses = [R31R30, R1, R0];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSPM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SPMZPi {	// Instruction AVRInst AVRInst16 F16 Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "spm $z+";
  list<dag> Pattern = [];
  list<Register> Uses = [R1, R0];
  list<Register> Defs = [R31R30];
  list<Predicate> Predicates = [HasSPMX];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SPREAD {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins GPRSP:$src);
  string AsmString = "spread	$dst, $src";
  list<dag> Pattern = [];
  list<Register> Uses = [SP];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SPWRITE {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPRSP:$dst);
  dag InOperandList = (ins DREGS:$src);
  string AsmString = "spwrite	$dst, $src";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SREG {	// Register RegisterWithSubRegs AVRReg DwarfRegNum
  field bits<16> Num = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  list<Register> AVRReg:subregs = [];
  list<string> AVRReg:altNames = [];
  list<string> Register:altNames = [];
  string Namespace = "AVR";
  string AsmName = "FLAGS";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [88];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 };
  string NAME = ?;
}
def STACKMAP {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i64imm:$id, i32imm:$nbytes, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STATEPOINT {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = 1;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 1;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STDPtrQRr {	// Instruction AVRInst AVRInst16 FSTDLDD Requires
  field bits<16> Inst = { 1, 0, memri{5}, 0, memri{4}, memri{3}, 1, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, memri{6}, memri{2}, memri{1}, memri{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins memri:$memri, GPR8:$reg);
  string AsmString = "std	$memri, $reg";
  list<dag> Pattern = [(store i8:$reg, addr:$memri)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<7> memri = { ?, ?, ?, ?, ?, ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def STDSPQRr {	// Instruction AVRInst AVRInst16 Pseudo StorePseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins memspi:$dst, GPR8:$src);
  string AsmString = "stdstk	$dst, $src";
  list<dag> Pattern = [(store i8:$src, addr:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STDWPtrQRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins memri:$memri, DREGS:$src);
  string AsmString = "stdw	$memri, $src";
  list<dag> Pattern = [(store i16:$src, addr:$memri)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STDWSPQRr {	// Instruction AVRInst AVRInst16 Pseudo StorePseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins memspi:$dst, DREGS:$src);
  string AsmString = "stdwstk	$dst, $src";
  list<dag> Pattern = [(store i16:$src, addr:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [SP];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STPtrPdRr {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 1, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs LDSTPtrReg:$base_wb);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg, GPR8:$reg, i8imm:$offs);
  string AsmString = "st	-$ptrreg, $reg";
  list<dag> Pattern = [(set i16:$base_wb, (pre_store GPR8:$reg, i16:$ptrreg, imm:$offs))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def STPtrPiRr {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 1, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 0, 1 };
  string Namespace = "AVR";
  dag OutOperandList = (outs LDSTPtrReg:$base_wb);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg, GPR8:$reg, i8imm:$offs);
  string AsmString = "st	$ptrreg+, $reg";
  list<dag> Pattern = [(set i16:$base_wb, (post_store GPR8:$reg, i16:$ptrreg, imm:$offs))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def STPtrRr {	// Instruction AVRInst AVRInst16 FSTLD Requires
  field bits<16> Inst = { 1, 0, 0, 0, 0, 0, 1, reg{4}, reg{3}, reg{2}, reg{1}, reg{0}, ptrreg{1}, ptrreg{0}, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins LDSTPtrReg:$ptrreg, GPR8:$reg);
  string AsmString = "st	$ptrreg, $reg";
  list<dag> Pattern = [(store GPR8:$reg, i16:$ptrreg)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "loadStorePostEncoder";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<2> ptrreg = { ?, ? };
  bits<5> reg = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def STSKRr {	// Instruction AVRInst AVRInst32 F32DM Requires
  field bits<32> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 0, 0, 0, k{15}, k{14}, k{13}, k{12}, k{11}, k{10}, k{9}, k{8}, k{7}, k{6}, k{5}, k{4}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$k, GPR8:$rd);
  string AsmString = "sts	$k, $rd";
  list<dag> Pattern = [(store i8:$rd, imm:$k)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<16> k = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def STSWKRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i16imm:$dst, DREGS:$src);
  string AsmString = "stsw	$dst, $src";
  list<dag> Pattern = [(store i16:$src, imm:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STWPtrPdRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs PTRREGS:$base_wb);
  dag InOperandList = (ins PTRREGS:$ptrreg, DREGS:$reg, i8imm:$offs);
  string AsmString = "stw	-$ptrreg, $reg";
  list<dag> Pattern = [(set PTRREGS:$base_wb, (pre_store i16:$reg, i16:$ptrreg, imm:$offs))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STWPtrPiRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs PTRREGS:$base_wb);
  dag InOperandList = (ins PTRREGS:$ptrreg, DREGS:$trh, i8imm:$offs);
  string AsmString = "stw	$ptrreg+, $trh";
  list<dag> Pattern = [(set PTRREGS:$base_wb, (post_store DREGS:$trh, PTRREGS:$ptrreg, imm:$offs))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$ptrreg = $base_wb,@earlyclobber $base_wb";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STWPtrRr {	// Instruction AVRInst AVRInst16 Pseudo Requires
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins PTRDISPREGS:$ptrreg, DREGS:$reg);
  string AsmString = "stw	$ptrreg, $reg";
  list<dag> Pattern = [(store i16:$reg, i16:$ptrreg)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [HasSRAM];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SUBIRdK {	// Instruction AVRInst AVRInst16 FRdK
  field bits<16> Inst = { 0, 1, 0, 1, k{7}, k{6}, k{5}, k{4}, rd{3}, rd{2}, rd{1}, rd{0}, k{3}, k{2}, k{1}, k{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs LD8:$rd);
  dag InOperandList = (ins LD8:$src, i8imm:$k);
  string AsmString = "subi	$rd, $k";
  list<dag> Pattern = [(set i8:$rd, (sub i8:$src, imm:$k)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> rd = { ?, ?, ?, ? };
  bits<8> k = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SUBIWRdK {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DLDREGS:$rd);
  dag InOperandList = (ins DLDREGS:$src, i16imm:$rr);
  string AsmString = "subiw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (sub i16:$src, imm:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SUBREG_TO_REG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$implsrc, unknown:$subsrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 1;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SUBRdRr {	// Instruction AVRInst AVRInst16 FRdRr
  field bits<16> Inst = { 0, 0, 0, 1, 1, 0, rr{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rr{3}, rr{2}, rr{1}, rr{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src, GPR8:$rr);
  string AsmString = "sub	$rd, $rr";
  list<dag> Pattern = [(set i8:$rd, (sub i8:$src, i8:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  bits<5> rr = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SUBWRdRr {	// Instruction AVRInst AVRInst16 Pseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$rd);
  dag InOperandList = (ins DREGS:$src, DREGS:$rr);
  string AsmString = "subw	$rd, $rr";
  list<dag> Pattern = [(set i16:$rd, (sub i16:$src, i16:$rr)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SWAPRd {	// Instruction AVRInst AVRInst16 FRd
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, d{4}, d{3}, d{2}, d{1}, d{0}, 0, 0, 1, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "swap	$rd";
  list<dag> Pattern = [(set i8:$rd, (bswap i8:$src))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src = $rd";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> d = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def Select16 {	// Instruction AVRInst AVRInst16 Pseudo SelectPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins DREGS:$src, DREGS:$src2, i8imm:$cc);
  string AsmString = "# Select16 PSEUDO";
  list<dag> Pattern = [(set i16:$dst, (AVRselectcc i16:$src, i16:$src2, imm:$cc))];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Select8 {	// Instruction AVRInst AVRInst16 Pseudo SelectPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$dst);
  dag InOperandList = (ins GPR8:$src, GPR8:$src2, i8imm:$cc);
  string AsmString = "# Select8 PSEUDO";
  list<dag> Pattern = [(set i8:$dst, (AVRselectcc i8:$src, i8:$src2, imm:$cc))];
  list<Register> Uses = [SREG];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SupportsMultiplication {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->supportsMultiplication()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureMultiplication";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def SupportsRMW {	// Predicate AssemblerPredicate
  string CondString = "Subtarget->supportsRMW()";
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = "FeatureRMW";
  string PredicateName = "";
  string AssemblerPredicate:name = "";
  string NAME = ?;
}
def TSTRd {	// Instruction AVRInst AVRInst16 FTST
  field bits<16> Inst = { 0, 0, 1, 0, 0, 0, rd{4}, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, rd{3}, rd{2}, rd{1}, rd{0} };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins GPR8:$rd);
  string AsmString = "tst	$rd";
  list<dag> Pattern = [(AVRtst i8:$rd)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def Throws {	// IntrinsicProperty
  string NAME = ?;
}
def WDR {	// Instruction AVRInst AVRInst16 F16
  field bits<16> Inst = { 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs);
  dag InOperandList = (ins);
  string AsmString = "wdr";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def XCHZRd {	// Instruction AVRInst AVRInst16 FZRd Requires
  field bits<16> Inst = { 1, 0, 0, 1, 0, 0, 1, rd{4}, rd{3}, rd{2}, rd{1}, rd{0}, 0, 1, 0, 0 };
  string Namespace = "AVR";
  dag OutOperandList = (outs GPR8:$rd);
  dag InOperandList = (ins ZREGS:$z);
  string AsmString = "xch	$z, $rd";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [SupportsRMW];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<5> rd = { ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ZEXT {	// Instruction AVRInst AVRInst16 Pseudo ExtensionPseudo
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "AVR";
  dag OutOperandList = (outs DREGS:$dst);
  dag InOperandList = (ins GPR8:$src);
  string AsmString = "zext	$dst, $src";
  list<dag> Pattern = [(set i16:$dst, (zext i8:$src)), (implicit SREG)];
  list<Register> Uses = [];
  list<Register> Defs = [SREG];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  bit hasNoSchedulingInfo = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ZREGS {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "AVR";
  list<ValueType> RegTypes = [i16];
  int Size = 0;
  int Alignment = 8;
  int CopyCost = 1;
  dag MemberList = (add R31R30);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def add {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::ADD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def addc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPOutGlue];
  string Opcode = "ISD::ADDC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def adde {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPOutGlue, SDNPInGlue];
  string Opcode = "ISD::ADDE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def addr {	// ComplexPattern
  ValueType Ty = iPTR;
  int NumOperands = 2;
  string SelectFunc = "SelectAddr";
  list<SDNode> RootNodes = [];
  list<SDNodeProperty> Properties = [SDNPWantRoot];
  string NAME = ?;
}
def addrspacecast {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ADDRSPACECAST";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTUnaryOp;
  string NAME = ?;
}
def alignednontemporalload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (nontemporalload node:$ptr);
  string PredicateCode = "
  LoadSDNode *Ld = cast<LoadSDNode>(N);
  return Ld->getAlignment() >= Ld->getMemoryVT().getStoreSize();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def alignednontemporalstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (nontemporalstore node:$val, node:$ptr);
  string PredicateCode = "
  StoreSDNode *St = cast<StoreSDNode>(N);
  return St->getAlignment() >= St->getMemoryVT().getStoreSize();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def and {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::AND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def anonymous_0 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_1 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_10 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_100 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_101 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_102 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_103 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_104 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_105 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_106 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_107 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_108 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_109 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_11 {	// IntrinsicProperty WriteOnly
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_110 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_111 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_112 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_113 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_114 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_115 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_116 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_117 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_118 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_119 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_12 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_120 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_121 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_122 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_123 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_124 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_125 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_126 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_127 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_128 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_129 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_13 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_130 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_131 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_132 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_133 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_134 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_135 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_136 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_137 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_138 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_139 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_14 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_140 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_141 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_142 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_143 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_144 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_145 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_146 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_147 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_148 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_149 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_15 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_150 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_151 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_152 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_153 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_154 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_155 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_156 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_157 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_158 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_159 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_16 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_160 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_161 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_162 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_163 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_164 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_165 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_166 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_167 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_168 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_169 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_17 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_170 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_171 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_172 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_173 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_174 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_175 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_176 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_177 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_176;
  string NAME = ?;
}
def anonymous_178 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_179 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_18 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_180 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_181 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_180;
  string NAME = ?;
}
def anonymous_182 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_183 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_184 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_185 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_186 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_187 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_186;
  string NAME = ?;
}
def anonymous_188 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_189 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_19 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_190 {	// IntrinsicProperty NoCapture
  int ArgNo = 3;
  string NAME = ?;
}
def anonymous_191 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_192 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_193 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_194 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_193;
  string NAME = ?;
}
def anonymous_195 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_196 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_197 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_198 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_199 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_2 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_20 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_200 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_201 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_202 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_203 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_202;
  string NAME = ?;
}
def anonymous_204 {	// IntrinsicProperty NoCapture
  int ArgNo = 3;
  string NAME = ?;
}
def anonymous_205 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_206 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_207 {	// IntrinsicProperty NoCapture
  int ArgNo = 4;
  string NAME = ?;
}
def anonymous_208 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_209 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_21 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_210 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_211 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_212 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_211;
  string NAME = ?;
}
def anonymous_213 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_214 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_215 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_216 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_217 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_218 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_219 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_22 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_220 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_221 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_222 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_223 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_224 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_223;
  string NAME = ?;
}
def anonymous_225 {	// IntrinsicProperty NoCapture
  int ArgNo = 4;
  string NAME = ?;
}
def anonymous_226 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_227 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_228 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_229 {	// IntrinsicProperty NoCapture
  int ArgNo = 5;
  string NAME = ?;
}
def anonymous_23 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_230 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_231 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_232 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_233 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_234 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_235 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_236 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_237 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_238 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_239 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_24 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_240 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_241 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_242 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_243 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_244 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_245 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_246 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_247 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_248 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_249 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_25 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_250 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_251 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_252 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_253 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_254 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_255 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_256 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_257 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_258 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_259 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_26 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_260 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_261 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_262 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_263 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_264 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_265 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_266 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_267 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_268 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_269 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_27 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_270 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_271 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_272 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_273 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_274 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_275 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_276 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_277 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_278 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_279 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_28 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_280 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_281 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_282 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_283 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_284 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_float_ty;
  string NAME = ?;
}
def anonymous_285 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_286 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i32_ty;
  string NAME = ?;
}
def anonymous_287 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_288 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i32_ty;
  string NAME = ?;
}
def anonymous_289 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_29 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_290 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_291 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_290;
  string NAME = ?;
}
def anonymous_292 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_293 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_294 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_293;
  string NAME = ?;
}
def anonymous_295 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_296 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_297 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_296;
  string NAME = ?;
}
def anonymous_298 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_299 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_3 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_30 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_300 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_299;
  string NAME = ?;
}
def anonymous_301 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_302 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_303 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_302;
  string NAME = ?;
}
def anonymous_304 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_305 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_306 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_305;
  string NAME = ?;
}
def anonymous_307 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_308 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_309 {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 7;
  string NAME = ?;
}
def anonymous_31 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_310 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_311 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_312 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_313 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_314 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_315 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_316 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_317 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_318 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_319 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_32 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_320 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_321 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_322 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_323 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_324 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_325 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_326 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_327 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_328 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_329 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_33 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_330 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_331 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_332 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_333 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_334 {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 2;
  string NAME = ?;
}
def anonymous_335 {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 2;
  string NAME = ?;
}
def anonymous_336 {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 2;
  string NAME = ?;
}
def anonymous_337 {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 2;
  string NAME = ?;
}
def anonymous_338 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_339 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_34 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_340 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_341 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_342 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_343 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_344 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_345 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_346 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_347 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_348 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_349 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_35 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_350 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_351 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_352 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_353 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_354 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_355 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_356 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_357 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_358 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_359 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_36 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_360 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_361 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_362 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_363 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_364 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_365 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_366 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_367 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_368 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_369 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 1;
  int BigOperandNum = 0;
  string NAME = ?;
}
def anonymous_37 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_370 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_371 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_372 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 0;
  int BigOperandNum = 1;
  string NAME = ?;
}
def anonymous_373 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_374 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_375 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_376 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_377 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 0;
  int BigOperandNum = 1;
  string NAME = ?;
}
def anonymous_378 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_379 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_38 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_380 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 1;
  int BigOperandNum = 0;
  string NAME = ?;
}
def anonymous_381 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_382 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_383 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_384 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_385 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_386 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_387 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 2;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_388 {	// SDTypeConstraint SDTCisVTSmallerThanOp
  int OperandNum = 2;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_389 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_39 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_390 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_391 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_392 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_393 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_394 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 2;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_395 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_396 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_397 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 2;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_398 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_399 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_4 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_40 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_400 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 3;
  int OtherOperandNum = 4;
  string NAME = ?;
}
def anonymous_401 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_402 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 5;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_403 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_404 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_405 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_406 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_407 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_408 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_409 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_41 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_410 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_411 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_412 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_413 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_414 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_415 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_416 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_417 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_418 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_419 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_42 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_420 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_421 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_422 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_423 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_424 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_425 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_426 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_427 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_428 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_429 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_43 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_430 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 4;
  string NAME = ?;
}
def anonymous_431 {	// SDTypeConstraint SDTCVecEltisVT
  int OperandNum = 1;
  ValueType VT = i1;
  string NAME = ?;
}
def anonymous_432 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_433 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_434 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_435 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_436 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_437 {	// SDTypeConstraint SDTCVecEltisVT
  int OperandNum = 0;
  ValueType VT = i1;
  string NAME = ?;
}
def anonymous_438 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_439 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_44 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_440 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_441 {	// SDTypeConstraint SDTCisEltOfVec
  int OperandNum = 0;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_442 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_443 {	// SDTypeConstraint SDTCisEltOfVec
  int OperandNum = 2;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_444 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_445 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_446 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 0;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_447 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_448 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 2;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_449 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_45 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_450 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_451 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_452 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_453 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_454 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_455 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_456 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_457 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_458 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 4;
  string NAME = ?;
}
def anonymous_459 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_46 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_460 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_461 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_462 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_463 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_464 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_465 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_466 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_467 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_468 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_469 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_47 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_470 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_471 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_472 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_473 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 2;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_474 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_475 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 4;
  string NAME = ?;
}
def anonymous_476 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 5;
  string NAME = ?;
}
def anonymous_477 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def anonymous_478 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def anonymous_479 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_48 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_480 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_479];
  string NAME = ?;
}
def anonymous_481 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_482 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_483 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_481, anonymous_482];
  string NAME = ?;
}
def anonymous_484 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 1;
  int OtherOpNum = 0;
  string NAME = ?;
}
def anonymous_485 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_486 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_484, anonymous_485];
  string NAME = ?;
}
def anonymous_487 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_488 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_489 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_49 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_490 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_487, anonymous_488, anonymous_489];
  string NAME = ?;
}
def anonymous_491 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_492 {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_491];
  string NAME = ?;
}
def anonymous_493 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_494 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_493];
  string NAME = ?;
}
def anonymous_495 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_496 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_495];
  string NAME = ?;
}
def anonymous_497 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_498 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_499 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 0;
  string NAME = ?;
}
def anonymous_5 {	// IntrinsicProperty WriteOnly
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_50 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_anyint_ty;
  string NAME = ?;
}
def anonymous_500 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR1, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_501 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_502 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr25";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_503 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR3];
  string NAME = ?;
}
def anonymous_504 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr31";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR31, ELFArchAVR31];
  string NAME = ?;
}
def anonymous_505 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr35";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_506 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_507 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_508 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr51";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_509 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avr6";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR6, ELFArchAVR6];
  string NAME = ?;
}
def anonymous_51 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_510 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA1];
  string NAME = ?;
}
def anonymous_511 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_512 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA3];
  string NAME = ?;
}
def anonymous_513 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_514 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA5];
  string NAME = ?;
}
def anonymous_515 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega6";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_516 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrxmega7";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA7];
  string NAME = ?;
}
def anonymous_517 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "avrtiny";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_518 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s1200";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR0, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_519 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny11";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR1, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_52 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_520 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny12";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR1, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_521 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny15";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR1, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_522 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny28";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR1, ELFArchAVR1];
  string NAME = ?;
}
def anonymous_523 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s2313";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_524 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s2323";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_525 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s2333";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_526 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s2343";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_527 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny22";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_528 {	// Processor Device
  string Name = "attiny26";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2, FeatureLPMX];
  string NAME = ?;
}
def anonymous_529 {	// Processor Device
  string Name = "at86rf401";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR25, FeatureMOVW, FeatureLPMX];
  string NAME = ?;
}
def anonymous_53 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_530 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s4414";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_531 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s4433";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_532 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s4434";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_533 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s8515";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_534 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90c8534";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_535 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90s8535";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR2];
  string NAME = ?;
}
def anonymous_536 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata5272";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_537 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny13";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_538 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny13a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_539 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny2313";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_54 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_540 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny2313a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_541 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny24";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_542 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny24a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_543 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny4313";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_544 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny44";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_545 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny44a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_546 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny84";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_547 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny84a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_548 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny25";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_549 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny45";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_55 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_550 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny85";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_551 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny261";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_552 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny261a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_553 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny461";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_554 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny461a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_555 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny861";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_556 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny861a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_557 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny87";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_558 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny43u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_559 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny48";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_56 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_560 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny88";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_561 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny828";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR25, ELFArchAVR25];
  string NAME = ?;
}
def anonymous_562 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at43usb355";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR3];
  string NAME = ?;
}
def anonymous_563 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at76c711";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR3];
  string NAME = ?;
}
def anonymous_564 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega103";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR31, ELFArchAVR31];
  string NAME = ?;
}
def anonymous_565 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at43usb320";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR31, ELFArchAVR31];
  string NAME = ?;
}
def anonymous_566 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny167";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_567 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb82";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_568 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb162";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_569 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata5505";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_57 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_570 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega8u2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_571 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16u2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_572 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32u2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_573 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny1634";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR35, ELFArchAVR35];
  string NAME = ?;
}
def anonymous_574 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega8";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_575 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata6289";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_576 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega8a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_577 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata6285";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_578 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata6286";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_579 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega48";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_58 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_580 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega48a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_581 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega48pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_582 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega48p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_583 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega88";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_584 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega88a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_585 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega88p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_586 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega88pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_587 {	// Processor Device
  string Name = "atmega8515";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR4, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM];
  string NAME = ?;
}
def anonymous_588 {	// Processor Device
  string Name = "atmega8535";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR2, ELFArchAVR4, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM];
  string NAME = ?;
}
def anonymous_589 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega8hva";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_59 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_590 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_591 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_592 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm2b";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_593 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_594 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm3b";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_595 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm81";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR4, ELFArchAVR4];
  string NAME = ?;
}
def anonymous_596 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata5790";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_597 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "ata5795";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_598 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_599 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_6 {	// IntrinsicProperty ReadOnly
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_60 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_600 {	// Processor Device
  string Name = "atmega161";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR5, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM];
  string NAME = ?;
}
def anonymous_601 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega162";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_602 {	// Processor Device
  string Name = "atmega163";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR5, FeatureMultiplication, FeatureMOVW, FeatureLPMX, FeatureSPM];
  string NAME = ?;
}
def anonymous_603 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega164a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_604 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega164p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_605 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega164pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_606 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega165";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_607 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega165a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_608 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega165p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_609 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega165pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_61 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_610 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega168";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_611 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega168a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_612 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega168p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_613 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega168pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_614 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega169";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_615 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega169a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_616 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega169p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_617 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega169pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_618 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_619 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_62 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_620 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega323";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_621 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega324a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_622 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega324p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_623 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega324pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_624 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega325";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_625 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega325a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_626 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega325p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_627 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega325pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_628 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3250";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_629 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3250a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_63 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_630 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3250p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_631 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3250pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_632 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega328";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_633 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega328p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_634 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega329";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_635 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega329a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_636 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega329p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_637 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega329pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_638 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3290";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_639 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3290a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_64 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_640 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3290p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_641 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega3290pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_642 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega406";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_643 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_644 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_645 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega640";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_646 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega644";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_647 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega644a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_648 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega644p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_649 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega644pa";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_65 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_650 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega645";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_651 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega645a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_652 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega645p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_653 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega649";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_654 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega649a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_655 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega649p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_656 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6450";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_657 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6450a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_658 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6450p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_659 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6490";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_66 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_660 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6490a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_661 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega6490p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_662 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_663 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega644rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_664 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16hva";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_665 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16hva2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_666 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16hvb";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_667 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16hvbrevb";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_668 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32hvb";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_669 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32hvbrevb";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_67 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_670 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64hve";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_671 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90can32";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_672 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90can64";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_673 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm161";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_674 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm216";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_675 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90pwm316";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_676 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32c1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_677 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64c1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_678 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16m1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_679 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32m1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_68 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_680 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega64m1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_681 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega16u4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_682 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32u4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_683 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega32u6";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_684 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb646";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_685 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb647";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_686 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90scr100";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_687 {	// Processor Device
  string Name = "at94k";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR3, ELFArchAVR5, FeatureMultiplication, FeatureMOVW, FeatureLPMX];
  string NAME = ?;
}
def anonymous_688 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "m3000";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR5, ELFArchAVR5];
  string NAME = ?;
}
def anonymous_689 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega128";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_69 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_690 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega128a";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_691 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega1280";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_692 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega1281";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_693 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega1284";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_694 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega1284p";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_695 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega128rfa1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_696 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega128rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_697 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega1284rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_698 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90can128";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_699 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb1286";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_7 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_70 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_700 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "at90usb1287";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR51, ELFArchAVR51];
  string NAME = ?;
}
def anonymous_701 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega2560";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR6, ELFArchAVR6];
  string NAME = ?;
}
def anonymous_702 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega2561";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR6, ELFArchAVR6];
  string NAME = ?;
}
def anonymous_703 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega256rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR6, ELFArchAVR6];
  string NAME = ?;
}
def anonymous_704 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atmega2564rfr2";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVR6, ELFArchAVR6];
  string NAME = ?;
}
def anonymous_705 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega16a4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_706 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega16a4u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_707 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega16c4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_708 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega16d4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_709 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32a4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_71 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_70;
  string NAME = ?;
}
def anonymous_710 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32a4u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_711 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32c4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_712 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32d4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_713 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32e5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_714 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega16e5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_715 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega8e5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_716 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega32x1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA2];
  string NAME = ?;
}
def anonymous_717 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64a3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_718 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64a3u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_719 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64a4u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_72 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_720 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64b1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_721 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64b3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_722 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64c3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_723 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64d3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_724 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64d4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA4];
  string NAME = ?;
}
def anonymous_725 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64a1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA5];
  string NAME = ?;
}
def anonymous_726 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega64a1u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA5];
  string NAME = ?;
}
def anonymous_727 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128a3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_728 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128a3u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_729 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128b1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_73 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_730 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128b3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_731 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128c3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_732 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128d3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_733 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128d4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_734 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega192a3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_735 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega192a3u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_736 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega192c3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_737 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega192d3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_738 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256a3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_739 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256a3u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_74 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_73;
  string NAME = ?;
}
def anonymous_740 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256a3b";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_741 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256a3bu";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_742 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256c3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_743 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega256d3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_744 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega384c3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_745 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega384d3";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA6];
  string NAME = ?;
}
def anonymous_746 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128a1";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGA, ELFArchXMEGA7];
  string NAME = ?;
}
def anonymous_747 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128a1u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA7];
  string NAME = ?;
}
def anonymous_748 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "atxmega128a4u";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyXMEGAU, ELFArchXMEGA7];
  string NAME = ?;
}
def anonymous_749 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny4";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_75 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_750 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny5";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_751 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny9";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_752 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny10";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_753 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny20";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_754 {	// Processor Device
  list<SubtargetFeature> Device:ExtraFeatures = [];
  string Name = "attiny40";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [FamilyAVRTiny, ELFArchAVRTiny];
  string NAME = ?;
}
def anonymous_755 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i16;
  string NAME = ?;
}
def anonymous_756 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i16;
  string NAME = ?;
}
def anonymous_757 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = i16;
  string NAME = ?;
}
def anonymous_758 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = iPTR;
  string NAME = ?;
}
def anonymous_759 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_76 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_760 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_761 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_762 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = i8;
  string NAME = ?;
}
def anonymous_763 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_764 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_765 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_766 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_767 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = i8;
  string NAME = ?;
}
def anonymous_768 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brcs	$k";
  dag ResultInst = (BRBSsk 0, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_769 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brcc	$k";
  dag ResultInst = (BRBCsk 0, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_77 {	// LLVMType LLVMMatchType LLVMVectorOfPointersToElt
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_770 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brhs	$k";
  dag ResultInst = (BRBSsk 5, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_771 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brhc	$k";
  dag ResultInst = (BRBCsk 5, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_772 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brts	$k";
  dag ResultInst = (BRBSsk 6, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_773 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brtc	$k";
  dag ResultInst = (BRBCsk 6, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_774 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brvs	$k";
  dag ResultInst = (BRBSsk 3, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_775 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brvc	$k";
  dag ResultInst = (BRBCsk 3, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_776 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brie	$k";
  dag ResultInst = (BRBSsk 7, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_777 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "brid	$k";
  dag ResultInst = (BRBCsk 7, relbrtarget_7:$k);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_778 {	// InstAlias
  string AsmString = "ser	$rd";
  dag ResultInst = (LDIRdK LD8:$rd, 255);
  int EmitPriority = 0;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_779 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "sec";
  dag ResultInst = (BSETs 0);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_78 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_780 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clc";
  dag ResultInst = (BCLRs 0);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_781 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "sez";
  dag ResultInst = (BSETs 1);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_782 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clz";
  dag ResultInst = (BCLRs 1);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_783 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "sen";
  dag ResultInst = (BSETs 2);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_784 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "cln";
  dag ResultInst = (BCLRs 2);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_785 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "sev";
  dag ResultInst = (BSETs 3);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_786 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clv";
  dag ResultInst = (BCLRs 3);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_787 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "ses";
  dag ResultInst = (BSETs 4);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_788 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "cls";
  dag ResultInst = (BCLRs 4);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_789 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "seh";
  dag ResultInst = (BSETs 5);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_79 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_790 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clh";
  dag ResultInst = (BCLRs 5);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_791 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "set";
  dag ResultInst = (BSETs 6);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_792 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "clt";
  dag ResultInst = (BCLRs 6);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_793 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "sei";
  dag ResultInst = (BSETs 7);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_794 {	// InstAlias
  int InstAlias:Emit = 1;
  string AsmString = "cli";
  dag ResultInst = (BCLRs 7);
  int EmitPriority = 1;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
def anonymous_795 {	// Pattern Pat
  dag PatternToMatch = (addc i8:$src, i8:$src2);
  list<dag> ResultInstrs = [(ADDRdRr i8:$src, i8:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_796 {	// Pattern Pat
  dag PatternToMatch = (addc DREGS:$src, DREGS:$src2);
  list<dag> ResultInstrs = [(ADDWRdRr DREGS:$src, DREGS:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_797 {	// Pattern Pat
  dag PatternToMatch = (subc i8:$src, i8:$src2);
  list<dag> ResultInstrs = [(SUBRdRr i8:$src, i8:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_798 {	// Pattern Pat
  dag PatternToMatch = (subc i16:$src, i16:$src2);
  list<dag> ResultInstrs = [(SUBWRdRr i16:$src, i16:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_799 {	// Pattern Pat
  dag PatternToMatch = (subc i8:$src, imm:$src2);
  list<dag> ResultInstrs = [(SUBIRdK i8:$src, imm:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_8 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_80 {	// LLVMType LLVMMatchType LLVMVectorOfPointersToElt
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_800 {	// Pattern Pat
  dag PatternToMatch = (subc i16:$src, imm:$src2);
  list<dag> ResultInstrs = [(SUBIWRdK i16:$src, imm:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_801 {	// Pattern Pat
  dag PatternToMatch = (add i16:$src1, imm0_63_neg:$src2);
  list<dag> ResultInstrs = [(SBIWRdK i16:$src1, (imm0_63_neg:src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_802 {	// Pattern Pat
  dag PatternToMatch = (add i16:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SUBIWRdK i16:$src1, (imm16_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_803 {	// Pattern Pat
  dag PatternToMatch = (addc i16:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SUBIWRdK i16:$src1, (imm16_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_804 {	// Pattern Pat
  dag PatternToMatch = (adde i16:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SBCIWRdK i16:$src1, (imm16_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_805 {	// Pattern Pat
  dag PatternToMatch = (add i8:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SUBIRdK i8:$src1, (imm8_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_806 {	// Pattern Pat
  dag PatternToMatch = (addc i8:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SUBIRdK i8:$src1, (imm8_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_807 {	// Pattern Pat
  dag PatternToMatch = (adde i8:$src1, imm:$src2);
  list<dag> ResultInstrs = [(SBCIRdK i8:$src1, (imm8_neg_XFORM imm:$src2))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_808 {	// Pattern Pat
  dag PatternToMatch = (AVRcall (i16 tglobaladdr:$dst));
  list<dag> ResultInstrs = [(CALLk tglobaladdr:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_809 {	// Pattern Pat
  dag PatternToMatch = (AVRcall (i16 texternalsym:$dst));
  list<dag> ResultInstrs = [(CALLk texternalsym:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_81 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_810 {	// Pattern Pat
  dag PatternToMatch = (i16 (anyext i8:$src));
  list<dag> ResultInstrs = [(INSERT_SUBREG (i16 (IMPLICIT_DEF)), i8:$src, sub_lo)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_811 {	// Pattern Pat
  dag PatternToMatch = (i8 (trunc i16:$src));
  list<dag> ResultInstrs = [(EXTRACT_SUBREG i16:$src, sub_lo)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_812 {	// Pattern Pat
  dag PatternToMatch = (sext_inreg i16:$src, i8);
  list<dag> ResultInstrs = [(SEXT (i8 (EXTRACT_SUBREG i16:$src, sub_lo)))];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_813 {	// Pattern Pat
  dag PatternToMatch = (i16 (AVRWrapper tglobaladdr:$dst));
  list<dag> ResultInstrs = [(LDIWRdK tglobaladdr:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_814 {	// Pattern Pat
  dag PatternToMatch = (add i16:$src, (AVRWrapper tglobaladdr:$src2));
  list<dag> ResultInstrs = [(SUBIWRdK i16:$src, tglobaladdr:$src2)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_815 {	// Pattern Pat
  dag PatternToMatch = (i8 (load (AVRWrapper tglobaladdr:$dst)));
  list<dag> ResultInstrs = [(LDSRdK tglobaladdr:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_816 {	// Pattern Pat
  dag PatternToMatch = (i16 (load (AVRWrapper tglobaladdr:$dst)));
  list<dag> ResultInstrs = [(LDSWRdK tglobaladdr:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_817 {	// Pattern Pat
  dag PatternToMatch = (store i8:$src, (i16 (AVRWrapper tglobaladdr:$dst)));
  list<dag> ResultInstrs = [(STSKRr tglobaladdr:$dst, i8:$src)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_818 {	// Pattern Pat
  dag PatternToMatch = (store i16:$src, (i16 (AVRWrapper tglobaladdr:$dst)));
  list<dag> ResultInstrs = [(STSWKRr tglobaladdr:$dst, i16:$src)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_819 {	// Pattern Pat
  dag PatternToMatch = (i16 (AVRWrapper tblockaddress:$dst));
  list<dag> ResultInstrs = [(LDIWRdK tblockaddress:$dst)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_82 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_820 {	// Pattern Pat
  dag PatternToMatch = (i8 (trunc (AVRlsr (AVRlsr (AVRlsr (AVRlsr (AVRlsr (AVRlsr (AVRlsr (AVRlsr DREGS:$src))))))))));
  list<dag> ResultInstrs = [(EXTRACT_SUBREG DREGS:$src, sub_hi)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_821 {	// Pattern Pat
  dag PatternToMatch = (shl i16:$src1, (i8 1));
  list<dag> ResultInstrs = [(LSLWRd i16:$src1)];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
def anonymous_822 {	// CCAction CCAssignToReg
  list<Register> RegList = [R24];
  string NAME = ?;
}
def anonymous_823 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_822;
  list<ValueType> VTs = [i8];
  string NAME = ?;
}
def anonymous_824 {	// CCAction CCAssignToReg
  list<Register> RegList = [R25R24, R23R22, R21R20, R19R18];
  string NAME = ?;
}
def anonymous_825 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_824;
  list<ValueType> VTs = [i16];
  string NAME = ?;
}
def anonymous_826 {	// CCAction CCAssignToReg
  list<Register> RegList = [R24, R25];
  string NAME = ?;
}
def anonymous_827 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_826;
  list<ValueType> VTs = [i8];
  string NAME = ?;
}
def anonymous_828 {	// CCAction CCAssignToReg
  list<Register> RegList = [R23R22, R25R24];
  string NAME = ?;
}
def anonymous_829 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_828;
  list<ValueType> VTs = [i16];
  string NAME = ?;
}
def anonymous_83 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_830 {	// CCAction CCAssignToStack
  int Size = 2;
  int Align = 1;
  string NAME = ?;
}
def anonymous_831 {	// CCAction CCAssignToReg
  list<Register> RegList = [R27R26, R19R18];
  string NAME = ?;
}
def anonymous_832 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_831;
  list<ValueType> VTs = [i16];
  string NAME = ?;
}
def anonymous_833 {	// CCAction CCAssignToReg
  list<Register> RegList = [R24, R22];
  string NAME = ?;
}
def anonymous_834 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_833;
  list<ValueType> VTs = [i8];
  string NAME = ?;
}
def anonymous_835 {	// CCAction CCAssignToReg
  list<Register> RegList = [R25R24, R23R22];
  string NAME = ?;
}
def anonymous_836 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_835;
  list<ValueType> VTs = [i16];
  string NAME = ?;
}
def anonymous_84 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_85 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_86 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_87 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_88 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_89 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_9 {	// IntrinsicProperty ReadOnly
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_90 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_91 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_92 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_93 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_94 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_95 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_96 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_97 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_98 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_99 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anyext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ANY_EXTEND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def assertsext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::AssertSext";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_assertext;
  string NAME = ?;
}
def assertzext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::AssertZext";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDT_assertext;
  string NAME = ?;
}
def atomic_cmp_swap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_CMP_SWAP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic3;
  string NAME = ?;
}
def atomic_cmp_swap_16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_fence {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::ATOMIC_FENCE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomicFence;
  string NAME = ?;
}
def atomic_load {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomicLoad;
  string NAME = ?;
}
def atomic_load_16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_add {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_ADD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_add_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_and {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_AND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_and_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_max {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_MAX";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_max_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_min {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_MIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_min_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_nand {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_NAND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_nand_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_or {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_OR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_or_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_sub {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_SUB";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_sub_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_umax {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_UMAX";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_umax_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umin {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_UMIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_umin_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_xor {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_LOAD_XOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_xor_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_store {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_STORE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomicStore;
  string NAME = ?;
}
def atomic_store_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_swap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::ATOMIC_SWAP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_swap_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def bb {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BasicBlock";
  string SDClass = "BasicBlockSDNode";
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def bitconvert {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BITCAST";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTUnaryOp;
  string NAME = ?;
}
def bitreverse {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BITREVERSE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def blockaddress {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BlockAddress";
  string SDClass = "BlockAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def br {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::BR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTBr;
  string NAME = ?;
}
def brcc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::BR_CC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTBrCC;
  string NAME = ?;
}
def brcond {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::BRCOND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTBrcond;
  string NAME = ?;
}
def brind {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::BRIND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTBrind;
  string NAME = ?;
}
def brtarget_13 {	// DAGOperand Operand
  ValueType Type = OtherVT;
  string PrintMethod = "printPCRelImm";
  string EncoderMethod = "encodeRelCondBrTarget<AVR::fixup_13_pcrel>";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def bswap {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BSWAP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def build_vector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::BUILD_VECTOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_477;
  string NAME = ?;
}
def call_target {	// DAGOperand Operand
  ValueType Type = iPTR;
  string PrintMethod = "printOperand";
  string EncoderMethod = "encodeCallTarget";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def catchpad {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::CATCHPAD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def catchret {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::CATCHRET";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTCatchret;
  string NAME = ?;
}
def cleanupret {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::CLEANUPRET";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def concat_vectors {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CONCAT_VECTORS";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_486;
  string NAME = ?;
}
def cond {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CONDCODE";
  string SDClass = "CondCodeSDNode";
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def constpool {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ConstantPool";
  string SDClass = "ConstantPoolSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def ctlz {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CTLZ";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def ctlz_zero_undef {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CTLZ_ZERO_UNDEF";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def ctpop {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CTPOP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cttz {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CTTZ";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cttz_zero_undef {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CTTZ_ZERO_UNDEF";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cvt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::CONVERT_RNDSAT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTConvertOp;
  string NAME = ?;
}
def cvtff {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtfs {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FS;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtfu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtsf {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtss {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SS;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtsu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtuf {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_UF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtus {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_US;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtuu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_UU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def debugtrap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::DEBUGTRAP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def decimate {
  string NAME = ?;
}
def externalsym {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ExternalSymbol";
  string SDClass = "ExternalSymbolSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def extload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::EXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadf64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvf64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extract_subvector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::EXTRACT_SUBVECTOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTSubVecExtract;
  string NAME = ?;
}
def extractelt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::EXTRACT_VECTOR_ELT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTVecExtract;
  string NAME = ?;
}
def f128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 11;
  string NAME = ?;
}
def f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 7;
  string NAME = ?;
}
def f16_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP16_TO_FP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 8;
  string NAME = ?;
}
def f32imm {	// DAGOperand Operand
  ValueType Type = f32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 9;
  string NAME = ?;
}
def f64imm {	// DAGOperand Operand
  ValueType Type = f64;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def f80 {	// ValueType
  string Namespace = "MVT";
  int Size = 80;
  int Value = 10;
  string NAME = ?;
}
def fAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 124;
  string NAME = ?;
}
def fabs {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FABS";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fadd {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::FADD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fcanonicalize {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FCANONICALIZE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fceil {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FCEIL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fcopysign {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FCOPYSIGN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPSignOp;
  string NAME = ?;
}
def fcos {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FCOS";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fdiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FDIV";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fexp2 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FEXP2";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fextend {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP_EXTEND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPExtendOp;
  string NAME = ?;
}
def ffloor {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FFLOOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fgetsign {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FGETSIGN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def flog2 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FLOG2";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fma {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FMA";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPTernaryOp;
  string NAME = ?;
}
def fmad {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FMAD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPTernaryOp;
  string NAME = ?;
}
def fmaxnan {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FMAXNAN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fmaxnum {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::FMAXNUM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fminnan {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FMINNAN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fminnum {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::FMINNUM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fmul {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::FMUL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fnearbyint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FNEARBYINT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fneg {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FNEG";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fp_to_f16 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP_TO_FP16";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fp_to_sint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP_TO_SINT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fp_to_uint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP_TO_UINT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fpimm {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ConstantFP";
  string SDClass = "ConstantFPSDNode";
  SDTypeProfile TypeProfile = SDTFPLeaf;
  string NAME = ?;
}
def fpow {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FPOW";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def frameindex {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FrameIndex";
  string SDClass = "FrameIndexSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def frem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FREM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def frint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FRINT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def frnd {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FROUND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fround {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FP_ROUND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPRoundOp;
  string NAME = ?;
}
def fsin {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FSIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fsqrt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FSQRT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fsub {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FSUB";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def ftrunc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::FTRUNC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def globaladdr {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::GlobalAddress";
  string SDClass = "GlobalAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def globaltlsaddr {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::GlobalTLSAddress";
  string SDClass = "GlobalAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 1;
  int Value = 1;
  string NAME = ?;
}
def i128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 6;
  string NAME = ?;
}
def i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 3;
  string NAME = ?;
}
def i16imm {	// DAGOperand Operand
  ValueType Type = i16;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i1imm {	// DAGOperand Operand
  ValueType Type = i1;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 4;
  string NAME = ?;
}
def i32imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 5;
  string NAME = ?;
}
def i64imm {	// DAGOperand Operand
  ValueType Type = i64;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 2;
  string NAME = ?;
}
def i8imm {	// DAGOperand Operand
  ValueType Type = i8;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i8imm_com {	// DAGOperand Operand
  ValueType Type = i8;
  string PrintMethod = "printOperand";
  string EncoderMethod = "encodeComplement";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops i8imm);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def iAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 125;
  string NAME = ?;
}
def iPTR {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 126;
  string NAME = ?;
}
def iPTRAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 122;
  string NAME = ?;
}
def imm {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::Constant";
  string SDClass = "ConstantSDNode";
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def imm0_63_neg {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  int64_t val = -N->getSExtValue();
  return val >= 0 && val < 64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = imm16_neg_XFORM;
  string NAME = ?;
}
def imm16_neg_XFORM {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "
  return CurDAG->getTargetConstant(-N->getAPIntValue(), SDLoc(N), MVT::i16);
";
  string NAME = ?;
}
def imm8_neg_XFORM {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "
  return CurDAG->getTargetConstant(-N->getAPIntValue(), SDLoc(N), MVT::i8);
";
  string NAME = ?;
}
def immAllOnesV {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (build_vector);
  string PredicateCode = "
  return ISD::isBuildVectorAllOnes(N);
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immAllZerosV {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (build_vector);
  string PredicateCode = "
  return ISD::isBuildVectorAllZeros(N);
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def implicit {
  string NAME = ?;
}
def ineg {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$in);
  dag Fragment = (sub 0, node:$in);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def ins {
  string NAME = ?;
}
def insert_subvector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::INSERT_SUBVECTOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTSubVecInsert;
  string NAME = ?;
}
def insertelt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::INSERT_VECTOR_ELT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTVecInsert;
  string NAME = ?;
}
def instregex {
  string NAME = ?;
}
def instrs {
  string NAME = ?;
}
def int_aarch64_clrex {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32b {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32ch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32h {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32w {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesd {	// SDPatternOperator Intrinsic Crypto_AES_DataKey_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aese {	// SDPatternOperator Intrinsic Crypto_AES_DataKey_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesimc {	// SDPatternOperator Intrinsic Crypto_AES_Data_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesmc {	// SDPatternOperator Intrinsic Crypto_AES_Data_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1c {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1h {	// SDPatternOperator Intrinsic Crypto_SHA_1Hash_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1m {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1p {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1su0 {	// SDPatternOperator Intrinsic Crypto_SHA_12Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1su1 {	// SDPatternOperator Intrinsic Crypto_SHA_8Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256h {	// SDPatternOperator Intrinsic Crypto_SHA_8Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256h2 {	// SDPatternOperator Intrinsic Crypto_SHA_8Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256su0 {	// SDPatternOperator Intrinsic Crypto_SHA_8Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256su1 {	// SDPatternOperator Intrinsic Crypto_SHA_12Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_dmb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dmb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_dsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dsb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_hint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_isb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_isb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldaxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldaxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_abs {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_144];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_addhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161, anonymous_162];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_addp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_cls {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_146];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_facge {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_FloatCompare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_156];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_facgt {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_FloatCompare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_156];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_faddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtas {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtau {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtms {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtmu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtns {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtnu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtps {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtpu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtxn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtzs {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtzu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnm {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnmp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnmv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnm {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnmp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnmv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmulx {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecpe {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecps {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecpx {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frintn {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frsqrte {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frsqrts {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_151, anonymous_152];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_181];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_191, anonymous_192];
  list<LLVMType> ParamTypes = [anonymous_194];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_208, anonymous_209, anonymous_210];
  list<LLVMType> ParamTypes = [anonymous_212];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_181];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_182];
  list<LLVMType> ParamTypes = [anonymous_183, anonymous_184, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2r {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_181];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_191, anonymous_192];
  list<LLVMType> ParamTypes = [anonymous_194];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3lane {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_195, anonymous_196];
  list<LLVMType> ParamTypes = [anonymous_197, anonymous_198, anonymous_199, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3r {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_191, anonymous_192];
  list<LLVMType> ParamTypes = [anonymous_194];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_208, anonymous_209, anonymous_210];
  list<LLVMType> ParamTypes = [anonymous_212];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4lane {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_213, anonymous_214, anonymous_215];
  list<LLVMType> ParamTypes = [anonymous_216, anonymous_217, anonymous_218, anonymous_219, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4r {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_208, anonymous_209, anonymous_210];
  list<LLVMType> ParamTypes = [anonymous_212];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmul {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_157, anonymous_158];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmull64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_raddhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161, anonymous_162];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rbit {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_146];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rsubhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161, anonymous_162];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddlp {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddlv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_sqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_sqxtun {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_uqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_BySize_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_164];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shsub {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_157, anonymous_158];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqabs {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_144];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmulh {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_157, anonymous_158];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmulls_scalar {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqneg {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_144];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrdmulh {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshrun {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshlu {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshrun {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqsub {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_148];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqxtun {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_148];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_srhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_srshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sshll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_165, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_185, anonymous_187];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_188];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_200, anonymous_201, anonymous_203];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_204];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_220, anonymous_221, anonymous_222, anonymous_224];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_225];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_185, anonymous_187];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_188];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st2lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_189, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_190];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_200, anonymous_201, anonymous_203];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_204];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st3lane {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_207];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_220, anonymous_221, anonymous_222, anonymous_224];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_225];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st4lane {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_226, anonymous_227, anonymous_228, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_229];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_subhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161, anonymous_162];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_suqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl1 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl1_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, anonymous_230];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl2 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl2_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, anonymous_231];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl3 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl3_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_232];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl4 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl4_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_233];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx1 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx1_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_234, llvm_v16i8_ty, anonymous_235];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx2 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx2_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_236, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_237];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx3 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx3_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_238, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_239];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx4 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx4_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_240, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_241];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddlp {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddlv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uhsub {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_157, anonymous_158];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqrshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqrshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqsub {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_148];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urecpe {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_146];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_153, anonymous_154];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ursqrte {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_146];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ushl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ushll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_165, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_usqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_149, anonymous_150];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcopy_lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vector2Index_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, anonymous_175, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2fxs {	// SDPatternOperator Intrinsic AdvSIMD_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2fxu {	// SDPatternOperator Intrinsic AdvSIMD_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2hf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfxs2fp {	// SDPatternOperator Intrinsic AdvSIMD_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfxu2fp {	// SDPatternOperator Intrinsic AdvSIMD_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvthf2fp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vsli {	// SDPatternOperator Intrinsic AdvSIMD_3VectorArg_Scalar_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_170, anonymous_171, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vsri {	// SDPatternOperator Intrinsic AdvSIMD_3VectorArg_Scalar_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_170, anonymous_171, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_rbit {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_141];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sdiv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_137, anonymous_138];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sisd_fabd {	// SDPatternOperator Intrinsic AdvSIMD_2Scalar_Float_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142, anonymous_143];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sisd_fcvtxn {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stlxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stlxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_udiv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_139, anonymous_140];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_adjust_trampoline {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_adjust_trampoline";
  string NAME = ?;
}
def int_amdgcn_atomic_dec {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, anonymous_332];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_333];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_atomic_inc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, anonymous_330];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_331];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_add {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_and {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_cmpswap {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_or {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_smax {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_smin {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_sub {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_swap {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_umax {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_umin {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_atomic_xor {	// SDPatternOperator Intrinsic AMDGPUBufferAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_load {	// SDPatternOperator Intrinsic AMDGPUBufferLoad
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_load_format {	// SDPatternOperator Intrinsic AMDGPUBufferLoad
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_store {	// SDPatternOperator Intrinsic AMDGPUBufferStore
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrWriteMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_store_format {	// SDPatternOperator Intrinsic AMDGPUBufferStore
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrWriteMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_wbinvl1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_buffer_wbinvl1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_wbinvl1_sc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_buffer_wbinvl1_sc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_buffer_wbinvl1_vol {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_buffer_wbinvl1_vol";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_class {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_cos {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_322];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_cubeid {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_cubeid";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_cubema {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_cubema";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_cubesc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_cubesc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_cubetc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_cubetc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_dispatch_ptr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_dispatch_ptr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [anonymous_334];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_div_fixup {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_317, anonymous_318, anonymous_319];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_div_fmas {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_314, anonymous_315, anonymous_316, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_div_scale {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_312, anonymous_313, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_ds_bpermute {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_ds_permute {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_ds_swizzle {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_ds_swizzle";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_fract {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_329];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_frexp_exp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_frexp_mant {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_328];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_groupstaticsize {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_groupstaticsize";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_add {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_and {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_cmpswap {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_dec {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_inc {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_or {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_smax {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_smin {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_sub {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_swap {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_umax {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_umin {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_atomic_xor {	// SDPatternOperator Intrinsic AMDGPUImageAtomic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_load {	// SDPatternOperator Intrinsic AMDGPUImageLoad
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_load_mip {	// SDPatternOperator Intrinsic AMDGPUImageLoad
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_store {	// SDPatternOperator Intrinsic AMDGPUImageStore
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_image_store_mip {	// SDPatternOperator Intrinsic AMDGPUImageStore
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_anyint_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_implicitarg_ptr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_implicitarg_ptr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [anonymous_337];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_interp_p1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_interp_p1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_interp_p2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_interp_p2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_kernarg_segment_ptr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_kernarg_segment_ptr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [anonymous_336];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_ldexp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_327, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_lerp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_lerp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_log_clamp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_323];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_mbcnt_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_mbcnt_hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_mbcnt_lo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_mbcnt_lo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_mov_dpp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_338, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_ps_live {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_queue_ptr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_queue_ptr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [anonymous_335];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_rcp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_324];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_read_workdim {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_rsq {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_325];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_rsq_clamp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_326];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_rsq_legacy {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_rsq_legacy";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_barrier {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_barrier";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_dcache_inv {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_dcache_inv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_dcache_inv_vol {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_dcache_inv_vol";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_dcache_wb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_dcache_wb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_dcache_wb_vol {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_dcache_wb_vol";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_getreg {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_getreg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_memrealtime {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_memrealtime";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_memtime {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_memtime";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_sleep {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgcn_s_sleep";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_s_waitcnt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_sin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_321];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_trig_preop {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_320, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_amdgcn_workgroup_id_x {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_amdgcn_workgroup_id_x";
  string NAME = "int_amdgcn_workgroup_id";
}
def int_amdgcn_workgroup_id_y {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_amdgcn_workgroup_id_y";
  string NAME = "int_amdgcn_workgroup_id";
}
def int_amdgcn_workgroup_id_z {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_amdgcn_workgroup_id_z";
  string NAME = "int_amdgcn_workgroup_id";
}
def int_amdgcn_workitem_id_x {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_amdgcn_workitem_id";
}
def int_amdgcn_workitem_id_y {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_amdgcn_workitem_id";
}
def int_amdgcn_workitem_id_z {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "amdgcn";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_amdgcn_workitem_id";
}
def int_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_52, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_cdp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_cdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_cdp2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_cdp2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_clrex {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32b {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32cb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32ch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32cw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32h {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32w {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dbg {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dmb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dmb";
  string MSBuiltinName = "__dmb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dsb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dsb";
  string MSBuiltinName = "__dsb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_get_fpscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_get_fpscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_hint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_isb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_isb";
  string MSBuiltinName = "__isb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldaex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldaexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ldc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldc2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ldc2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldc2l {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ldc2l";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldcl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ldcl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldrex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldrexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcr2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcr2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcrr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcrr2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrc {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mrc";
  string MSBuiltinName = "_MoveFromCoprocessor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrc2 {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mrc2";
  string MSBuiltinName = "_MoveFromCoprocessor2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrrc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrrc2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesd {	// SDPatternOperator Intrinsic AES_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aese {	// SDPatternOperator Intrinsic AES_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesimc {	// SDPatternOperator Intrinsic AES_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesmc {	// SDPatternOperator Intrinsic AES_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1c {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1h {	// SDPatternOperator Intrinsic SHA_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1m {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1p {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1su0 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1su1 {	// SDPatternOperator Intrinsic SHA_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256h {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256h2 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256su0 {	// SDPatternOperator Intrinsic SHA_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256su1 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabdu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabs {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vacge {	// SDPatternOperator Intrinsic Neon_Compare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_98];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vacgt {	// SDPatternOperator Intrinsic Neon_Compare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_98];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vbsl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_134, anonymous_135, anonymous_136];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcls {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtas {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtau {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2fxs {	// SDPatternOperator Intrinsic Neon_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2fxu {	// SDPatternOperator Intrinsic Neon_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2hf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfxs2fp {	// SDPatternOperator Intrinsic Neon_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfxu2fp {	// SDPatternOperator Intrinsic Neon_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvthf2fp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtms {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtmu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtns {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtnu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtps {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtpu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhsubs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhsubu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld1 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_101];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld2lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_107];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, anonymous_108, anonymous_109, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld3 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_102, anonymous_103];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld3lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_110, anonymous_111];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, anonymous_112, anonymous_113, anonymous_114, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld4 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_104, anonymous_105, anonymous_106];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld4lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_115, anonymous_116, anonymous_117];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, anonymous_118, anonymous_119, anonymous_120, anonymous_121, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxnm {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vminnm {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmins {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vminu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmullp {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_90, anonymous_91];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmulls {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_90, anonymous_91];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmullu {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_90, anonymous_91];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmulp {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadals {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_99, llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadalu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_100, llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadd {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpaddls {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpaddlu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmaxs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmaxu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmins {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpminu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqabs {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqdmulh {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqdmull {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_90, anonymous_91];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovns {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovnsu {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovnu {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqneg {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrdmulh {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftns {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftnsu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftnu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftns {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftnsu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftnu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftsu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqsubs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqsubu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vraddhn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrecpe {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrecps {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrhadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrhaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrinta {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintm {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintn {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintp {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintx {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintz {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshiftn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsqrte {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_84];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsqrts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsubhn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_88, anonymous_89];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshiftins {	// SDPatternOperator Intrinsic Neon_3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_92, anonymous_93, anonymous_94];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_86, anonymous_87];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst1 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_122, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst2lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_128, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst3 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_123, anonymous_124, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst3lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_129, anonymous_130, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst4 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_125, anonymous_126, anonymous_127, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst4lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyvector_ty, anonymous_131, anonymous_132, anonymous_133, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl1 {	// SDPatternOperator Intrinsic Neon_Tbl2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl2 {	// SDPatternOperator Intrinsic Neon_Tbl3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl3 {	// SDPatternOperator Intrinsic Neon_Tbl4Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl4 {	// SDPatternOperator Intrinsic Neon_Tbl5Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx1 {	// SDPatternOperator Intrinsic Neon_Tbl3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx2 {	// SDPatternOperator Intrinsic Neon_Tbl4Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx3 {	// SDPatternOperator Intrinsic Neon_Tbl5Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx4 {	// SDPatternOperator Intrinsic Neon_Tbl6Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_qadd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_qadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_qsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_qsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_rbit {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_set_fpscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_set_fpscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_space {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ssat {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ssat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_stc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stc2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_stc2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stc2l {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_stc2l";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stcl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_stcl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stlex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stlexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_strex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_strexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_undefined {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_usat {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_usat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_vcvtr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_vcvtru {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_assume {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bitreverse {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_49];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_byte {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_byte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_half {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_half";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_word {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_word";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_pseudo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_pseudo";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bswap {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_45];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_canonicalize {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_38];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ceil {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_33];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_clear_cache {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.clear_cache";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convert_from_fp16 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convert_to_fp16 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertff {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertfsi {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertfui {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertsif {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertss {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertsu {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertuif {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertus {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertuu {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_copysign {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_30, anonymous_31];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_cos {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_21];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ctlz {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_47, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ctpop {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_46];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_cttz {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_48, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_dbg_declare {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_metadata_ty, llvm_metadata_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_dbg_value {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_i64_ty, llvm_metadata_ty, llvm_metadata_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_debugtrap {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_debugtrap";
  string NAME = ?;
}
def int_donothing {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_dwarf_cfa {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_exceptioncode {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_token_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_exceptionpointer {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_token_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_return_i32 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_return_i64 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_callsite {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_functioncontext {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_longjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_lsda {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_setjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_setup_dispatch {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_typeid_for {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_unwind_init {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_unwind_init";
  string NAME = ?;
}
def int_exp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_27];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_exp2 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_28];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_expect {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_43, anonymous_44];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_deoptimize {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_any_ty];
  list<LLVMType> ParamTypes = [llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_relocate {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_any_ty];
  list<LLVMType> ParamTypes = [llvm_token_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_result {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_any_ty];
  list<LLVMType> ParamTypes = [llvm_token_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_statepoint {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_token_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_anyptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_guard {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_patchpoint_i64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_patchpoint_void {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_stackmap {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_fabs {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_29];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_floor {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_32];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_flt_rounds {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_flt_rounds";
  string NAME = ?;
}
def int_fma {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_12, anonymous_13, anonymous_14];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_fmuladd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_15, anonymous_16, anonymous_17];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_frameaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcread {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcroot {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptrptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcwrite {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_0, anonymous_1];
  bit isTarget = 0;
  string NAME = ?;
}
def int_get_dynamic_area_offset {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_abs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_abs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_absp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_absp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_abssat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_abssat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_add {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_add";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addpsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addpsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addsp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_andir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_andir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_andp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_andp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_aslh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_aslh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_asrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_asrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combineii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combineii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combinew {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combinew";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_max {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_max";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_min {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_min";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_neg {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_neg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_negp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_negp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_negsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_negsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_notp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_notp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_orir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_orir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_orp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_orp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_roundsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_roundsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sath {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sath";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svaddhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svaddhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svadduhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svavghs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svavghs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svnavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svnavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_swiz {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_swiz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxtb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxtw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrih {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrih";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfril {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfril";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrpi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrpi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrsi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrsi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabsh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabshsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabshsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabsw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabswsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabswsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddb_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddb_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddubs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vadduhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddws {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavghcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavghcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavghr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavghr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgubr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgubr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgwcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgwcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpbeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpbeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpbgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpbgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpheq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpheq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmphgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmphgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmphgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmphgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpweq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpweq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpwgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpwgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpwgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpwgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vconj {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vconj";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavghcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavghcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavghr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavghr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgwcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgwcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vraddub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vraddub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vraddub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vraddub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vrsadub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vrsadub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vrsadub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vrsadub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubb_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubb_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsububs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsububs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubws {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_xorp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_xorp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_zxtb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_zxtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_zxth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_zxth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_andnp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_andnp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_bitsplit {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_bitsplit";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_bitspliti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_bitspliti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_boundscheck {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_boundscheck";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpheq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpheq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpheqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpheqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_combineir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_combineir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_combineri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_combineri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cround_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cround_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cround_rr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cround_rr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_modwrapu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_modwrapu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_ornp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_ornp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpneq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpneqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpneqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_ri_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_ri_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_rr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_rr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_rr_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_rr_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_tlbmatch {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_tlbmatch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbeq_any {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbeq_any";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpheqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpheqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmphgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmphgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmphgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmphgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpweqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpweqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpwgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpwgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpwgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpwgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A5_vaddhubs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A5_vaddhubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_all8 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_all8";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_any8 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_any8";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsclr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsclr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsclri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsclri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsset {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsset";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeqp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeqp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgei {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgei";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgeui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgeui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmplt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmplt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpltu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpltu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_mask {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_mux {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_mux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_pxfer_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_pxfer_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_tfrpr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_tfrpr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_tfrrp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_tfrrp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_vitpack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_vitpack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_vmux {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_qididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_vmux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplte {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpltei {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpltei";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplteu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplteu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplteui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplteui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpneq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpneqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpneqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_fastcorner9 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_fastcorner9";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_fastcorner9_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_fastcorner9_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsclr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsclr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsclri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsclri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsset {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsset";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_d2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_d2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_d2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_d2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2d {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2d_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2d_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2ud {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2ud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2ud_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2ud_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2uw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2uw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2uw_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2uw_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2w_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2w_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2d {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2d_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2d_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2ud {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2ud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2ud_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2ud_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2uw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2uw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2uw_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2uw_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2w_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2w_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_ud2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_ud2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_ud2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_ud2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_uw2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_uw2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_uw2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_uw2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_w2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_w2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_w2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_w2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfclass {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfsi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfclass";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpuo {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpuo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfimm_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfimm_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfimm_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfimm_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfadd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfclass {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfclass";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpuo {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpuo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma_lib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma_lib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma_sc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsfqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma_sc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffms {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffms_lib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffms_lib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfimm_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfimm_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfimm_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfimm_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmin {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmpy {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmpy";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfsub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_L2_loadw_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_L2_loadw_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_280];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_L4_loadd_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_L4_loadd_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_281];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_acci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_acci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_accii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_accii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmaci_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmaci_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyi_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyi_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpys_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpys_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpysc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpysc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpysc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpysc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_nac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_nac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_rnd_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_rnd_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_nac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_nac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyl_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyl_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_maci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_maci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_macsin {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_macsin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_macsip {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_macsip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpysmi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpysmi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpysu_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpysu_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_nacci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_nacci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_naccii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_naccii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_subacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_subacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vabsdiffh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vabsdiffh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vabsdiffw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vabsdiffw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmac_s0_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmac_s0_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmac_s0_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmac_s0_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s0_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s0_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s0_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s0_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s1_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s1_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s1_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s1_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpyrs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpyrs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpyrs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpyrs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpys_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpys_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2s_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2s_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2s_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2s_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2su_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2su_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2su_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2su_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2es_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2es_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2es_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2es_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s0pack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s0pack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s1pack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s1pack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2su_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2su_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2su_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2su_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vraddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vraddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vradduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vradduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmaci_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmaci_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmaci_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmaci_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmacr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmacr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmacr_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmacr_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyi_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyi_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyi_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyi_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyr_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyr_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_s1rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_s1rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrmac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrmac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrmpy_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrmpy_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_xor_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_xor_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyi_wh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyi_wh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyi_whc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyi_whc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyr_wh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyr_wh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyr_whc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyr_whc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mac_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mac_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addr_u2 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addr_u2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyrr_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyrr_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyrr_addr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyrr_addr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_nac_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_nac_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_pmpyw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_pmpyw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_pmpyw_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_pmpyw_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vpmpyh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vpmpyh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vpmpyh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vpmpyh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vdmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vdmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vdmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vdmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmacbuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmacbuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmpybuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmpybuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmacbuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmacbuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmpybuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmpybuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M6_vabsdiffb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M6_vabsdiffb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M6_vabsdiffub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M6_vabsdiffub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_addasl_rrri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_addasl_rrri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_rnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_rnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_rnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_rnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_rnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_rnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_svw_trun {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_svw_trun";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_svw_trun {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_svw_trun";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_brev {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_brev";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_brevp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_brevp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cabacencbin {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cabacencbin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl0p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl0p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl1p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl1p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clbnorm {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clbnorm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clbp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clbp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clrbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clrbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clrbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clrbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct0p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct0p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct1p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct1p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_deinterleave {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_deinterleave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractu_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractu_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractup_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractup_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insert {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insert";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insert_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insert_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insertp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insertp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insertp_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insertp_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_interleave {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_interleave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lfsp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lfsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_packhl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_packhl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_parityp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_parityp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_setbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_setbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_setbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_setbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffeb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffeh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffob {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_storew_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_storew_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_282];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_svsathb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_svsathb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_svsathub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_svsathub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxb_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxb_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxh_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxh_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxw_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxw_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_togglebit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_togglebit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_togglebit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_togglebit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tstbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tstbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tstbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tstbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_valignib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_valignib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_valignrb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_valignrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vcnegh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vcnegh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vcrotate {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vcrotate";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrcnegh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrcnegh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrndpackwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrndpackwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrndpackwhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrndpackwhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathb_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathb_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathub_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathub_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwh_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwh_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwuh_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwuh_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplatrb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplatrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplatrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplatrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vspliceib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vspliceib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplicerb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplicerb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsxtbh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsxtbh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsxthw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsxthw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunehb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunehb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunewh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunewh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunohb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunohb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunowh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunowh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vzxtbh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vzxtbh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vzxthw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vzxthw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_andi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_andi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_andi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_andi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbpaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbpaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbpnorm {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbpnorm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extract {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extract";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extract_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extract_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extractp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extractp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extractp_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extractp_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_lsli {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_lsli";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ntstbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ntstbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ntstbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ntstbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_andi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_andi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_andix {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_andix";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_ori {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_ori";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ori_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ori_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ori_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ori_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_parity {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_parity";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_stored_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_stored_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_283];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vrcrotate {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vrcrotate";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vrcrotate_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vrcrotate_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_asrhub_rnd_sat_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_asrhub_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_asrhub_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_popcountp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_popcountp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_vasrhrnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_vasrhrnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_p_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_p_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iiii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iiii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iiii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iiii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_rol_i_r_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iiii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_rol_i_r_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_vsplatrbp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_vsplatrbp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_vtrunehb_ppp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_vtrunehb_ppp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S6_vtrunohb_ppp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_LLiLLiLLi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S6_vtrunohb_ppp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_SI_to_SXTHI_asrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_SI_to_SXTHI_asrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_extractw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iv512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_extractw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_extractw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_iv1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_extractw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_hi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v1024_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_hi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v2048_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_hi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_lo {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v1024_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_lo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_lo_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v2048_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_lo_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_lvsplatw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_lvsplatw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_lvsplatw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_lvsplatw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_and_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_and_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_and_n_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_and_n_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_not_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_not_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_or_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_or_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_or_n_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_or_n_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_scalar2 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_scalar2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_scalar2_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_scalar2_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv64i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v512i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_pred_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv128i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_pred_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v1024i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsdiffw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsdiffw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsh_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsh_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsh_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsh_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsw_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsw_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vabsw_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vabsw_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddb_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddb_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddb_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddb_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddbnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddbnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddbnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddbnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddbq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddbq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddbq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddbq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddh_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddh_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddh_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddh_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddhw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddhw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddubsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddubsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vadduhw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vadduhw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddw_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddw_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddw_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddw_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaddwsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaddwsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_valignb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_valignb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_valignb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_valignb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_valignbi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_valignbi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_valignbi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_valignbi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vand {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vand";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vand_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vand_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandqrt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandqrt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandqrt_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandqrt_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandqrt_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v64ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandqrt_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v512i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandqrt_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v128ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandqrt_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v1024i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandvrt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandvrt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandvrt_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandvrt_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandvrt_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandvrt_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vandvrt_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vandvrt_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslhv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslhv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslhv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslhv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslw_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslw_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslw_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslw_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslwv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslwv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vaslwv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vaslwv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhbrndsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhbrndsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhbrndsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhbrndsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhubrndsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhubrndsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhubrndsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhubrndsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhubsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhubsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhubsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhubsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrhv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrhv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrw_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrw_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrw_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrw_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwhrndsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwhrndsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwhrndsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwhrndsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwuhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwuhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwuhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwuhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vasrwv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vasrwv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vassign {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vassign";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vassign_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vassign_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vassignp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vassignp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vassignp_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048_Intrinsic_T
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vassignp_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavghrnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavghrnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavghrnd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavghrnd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgubrnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgubrnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgubrnd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgubrnd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavguh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavguh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavguh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavguh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavguhrnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavguhrnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavguhrnd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavguhrnd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgwrnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgwrnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vavgwrnd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vavgwrnd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcl0h {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcl0h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcl0h_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcl0h_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcl0w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcl0w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcl0w_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcl0w_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcombine {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcombine";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vcombine_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vcombine_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vd0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vd0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vd0_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vd0_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealb4w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealb4w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealb4w_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealb4w_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealvdd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealvdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdealvdd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdealvdd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdelta {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdelta";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdelta_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdelta_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_dv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_dv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpybus_dv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_dv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_dv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhb_dv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhisat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhisat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhisat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhisat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhisat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhisat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhisat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhisat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsuisat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsuisat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsuisat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsuisat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsuisat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsuisat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsuisat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsusat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsusat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsusat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsusat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsusat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsusat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhsusat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhvsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhvsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhvsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhvsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhvsat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhvsat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdmpyhvsat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdsaduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdsaduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdsaduh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdsaduh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdsaduh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdsaduh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vdsaduh_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vdsaduh_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqb_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqb_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqh_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqh_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_veqw_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_veqw_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtb_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtb_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgth_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgth_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtub_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtub_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuh_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuh_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtuw_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtuw_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_and_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_and_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_or_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_or_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v64iv64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v512i1_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vgtw_xor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v128iv128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vgtw_xor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v1024i1_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vinsertwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vinsertwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vinsertwr_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vinsertwr_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlalignb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlalignb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlalignb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlalignb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlalignbi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlalignbi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlalignbi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlalignbi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrhv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrhv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrhv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrhv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrwv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrwv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlsrwv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlsrwv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_dv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_dv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutb_dv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048LLii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutb_dv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvvb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvvb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvvb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvvb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvvb_oracc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvvb_oracc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvvb_oracc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvvb_oracc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvwh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvwh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvwh_oracc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvwh_oracc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vlutvwh_oracc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vlutvwh_oracc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmaxw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmaxw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vminw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vminw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabusv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabusv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabusv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabusv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabuuv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabuuv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpabuuv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpabuuv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpahb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpahb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpahb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpahb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpahb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpahb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpahb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpahb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybusv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybusv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybusv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybusv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybusv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybusv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybusv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybusv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpybv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpybv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyewuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyewuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyewuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyewuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhsat_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhsat_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhsat_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhsat_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhsrs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhsrs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhsrs_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhsrs_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhss {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhss_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhss_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhvsrs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhvsrs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyhvsrs_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyhvsrs_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyieoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyieoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyieoh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyieoh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewh_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewh_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewuh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewuh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiewuh_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiewuh_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyih {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyih";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyih_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyih_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyih_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyih_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyih_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyih_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyihb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyihb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyihb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyihb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyihb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyihb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyihb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyihb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiowh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiowh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiowh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiowh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyiwh_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyiwh_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_rnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_rnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_rnd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_rnd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_rnd_sacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_rnd_sacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_rnd_sacc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_sacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_sacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyowh_sacc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyowh_sacc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyub_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyub_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyubv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyubv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyubv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyubv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyubv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyubv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyubv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyubv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuh_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuh_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuhv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuhv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuhv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuhv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuhv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuhv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmpyuhv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmpyuhv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmux {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vmux_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vmux_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnavgw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnavgw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnormamth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnormamth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnormamth_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnormamth_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnormamtw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnormamtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnormamtw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnormamtw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnot {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnot";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vnot_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vnot_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackeb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackeb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackeb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackeh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackeh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackeh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackhb_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackhb_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackhb_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackhb_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackhub_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackhub_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackhub_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackhub_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackob {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackob_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackob_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackoh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackoh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackwh_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackwh_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackwh_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackwh_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackwuh_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackwuh_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpackwuh_sat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpackwuh_sat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpopcounth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpopcounth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vpopcounth_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vpopcounth_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrdelta {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrdelta";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrdelta_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrdelta_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusi_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusi_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusi_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusi_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybusv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybusv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpybv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpybv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyub_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyub_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubi_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubi_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubi_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubi_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubv_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubv_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrmpyubv_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrmpyubv_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vror {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vror";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vror_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vror_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundhb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundhb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundhb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundhub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundhub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundhub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundhub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundwh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundwh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundwuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundwuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vroundwuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vroundwuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrsadubi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrsadubi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrsadubi_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrsadubi_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrsadubi_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrsadubi_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vrsadubi_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048ii_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vrsadubi_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsathub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsathub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsathub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsathub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsatwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsatwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsatwh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsatwh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufeh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufeh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufeh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffeb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffeb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffeb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffob {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffob_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffob_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffvdd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffvdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshuffvdd_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshuffvdd_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoeb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoeb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoeb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoeh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoeh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoeh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vshufoh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vshufoh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubb_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubb_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubb_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubb_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubbnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubbnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubbnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubbnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubbq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubbq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubbq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubbq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubh_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubh_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubh_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubh_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubhw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubhw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsububsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsububsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubuhw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubuhw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubw_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubw_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubw_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubw_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubw_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubw_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwnq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwnq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwnq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwnq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwq_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwq_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwsat_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwsat_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwsat_dv {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwsat_dv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vsubwsat_dv_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vsubwsat_dv_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vswap {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v64iv512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vswap";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v512i1_ty, llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vswap_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v128iv1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vswap_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v1024i1_ty, llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpybus {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpybus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpybus_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpybus_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpybus_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpybus_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpybus_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpybus_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyhb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyhb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyhb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyhb_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyhb_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vtmpyhb_acc_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v2048i_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vtmpyhb_acc_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v64i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackob {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackob_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackob_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackoh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackoh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v64i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackub_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackub_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vunpackuh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vunpackuh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vxor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v512v512v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vxor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vxor_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v1024v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vxor_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty, llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vzb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vzb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vzb_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vzb_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vzh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v1024v512_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vzh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v32i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_V6_vzh_128B {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v2048v1024_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_V6_vzh_128B";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v64i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_lduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_lduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_stb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_stb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_std {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memdisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_std";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_sth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_sth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_sthhi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_sthhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_stw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_stw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_lduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_lduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_stb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_stb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_std {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memdisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_std";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_sth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_sth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_sthhi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_sthhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_stw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_stw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_mm256i_vaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_v256_v256v256_Intrinsic
  string GCCBuiltinName = "__builtin__mm256i_vaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_prefetch {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_void_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_prefetch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_init_trampoline {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_53];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_init_trampoline";
  string NAME = ?;
}
def int_instrprof_increment {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_instrprof_value_profile {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_invariant_end {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_descriptor_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_69];
  bit isTarget = 0;
  string NAME = ?;
}
def int_invariant_group_barrier {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_invariant_start {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_descriptor_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_68];
  bit isTarget = 0;
  string NAME = ?;
}
def int_lifetime_end {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_67];
  bit isTarget = 0;
  string NAME = ?;
}
def int_lifetime_start {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_66];
  bit isTarget = 0;
  string NAME = ?;
}
def int_load_relative {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localescape {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_vararg_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localrecover {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_24];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log10 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_25];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log2 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_26];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_longjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_gather {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_77, llvm_i32_ty, anonymous_78, anonymous_79];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_load {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_74, llvm_i32_ty, anonymous_75, anonymous_76];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_scatter {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_80, llvm_i32_ty, anonymous_81];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_store {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_71, llvm_i32_ty, anonymous_72];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_maxnum {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_41, anonymous_42];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memcpy {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_3, anonymous_4, anonymous_5, anonymous_6];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memmove {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_7, anonymous_8, anonymous_9];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memset {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i8_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_10, anonymous_11];
  bit isTarget = 0;
  string NAME = ?;
}
def int_minnum {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_39, anonymous_40];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v4q7_ty];
  list<LLVMType> ParamTypes = [mips_v4q7_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addsc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addsc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adduh_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_adduh_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adduh_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_adduh_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addwc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addwc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_and_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_and_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_andi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_andi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_append {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_append";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_balign {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_balign";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bitrev {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_bitrev";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmnz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmnz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmnzi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmnzi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmzi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmzi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bposge32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_bposge32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bsel_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bsel_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cfcmsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cfcmsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_eq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_eq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_le_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_le_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_lt_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_lt_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ctcmsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ctcmsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dlsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dlsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaq_sa_l_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaq_sa_l_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaqx_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaqx_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaqx_sa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaqx_sa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpau_h_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpau_h_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpau_h_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpau_h_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpax_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpax_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dps_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dps_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsq_sa_l_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsq_sa_l_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsqx_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsqx_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsqx_sa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsqx_sa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsu_h_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsu_h_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsu_h_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsu_h_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsx_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsx_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extpdp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extpdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_rs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_rs_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fadd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fadd_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcaf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcaf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcaf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcaf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fceq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fceq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fceq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fceq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclass_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclass_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclass_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclass_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcle_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcle_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcle_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcle_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcne_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcne_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcne_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcne_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcor_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcueq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcueq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcueq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcueq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcule_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcule_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcule_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcule_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcult_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcult_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcult_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcult_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcun_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcun_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcun_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcun_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcune_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcune_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcune_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcune_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fdiv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fdiv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fdiv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fdiv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexdo_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexdo_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8f16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexdo_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexdo_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexp2_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexp2_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexp2_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexp2_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffql_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffql_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffql_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffql_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffqr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffqr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffqr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffqr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_flog2_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_flog2_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_flog2_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_flog2_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmadd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmadd_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmsub_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmsub_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmul_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmul_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmul_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmul_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frcp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frcp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frcp_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frcp_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frint_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frint_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frint_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frint_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frsqrt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frsqrt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frsqrt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frsqrt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsaf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsaf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsaf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsaf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fseq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fseq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fseq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fseq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsle_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsle_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsle_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsle_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fslt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fslt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fslt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fslt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsne_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsne_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsne_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsne_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsor_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsqrt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsqrt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsqrt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsqrt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsub_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsub_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsueq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsueq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsueq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsueq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsule_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsule_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsule_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsule_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsult_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsult_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsult_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsult_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsun_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsun_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsun_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsun_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsune_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsune_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsune_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsune_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftq_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftq_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insv {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_insv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lbux {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lbux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lhx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lhx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lwx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lwx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_madd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_madd_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_madd_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maddu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_s_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_s_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_s_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_s_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_sa_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_sa_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_sa_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_sa_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_modsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_modsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_move_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_move_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_msub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msub_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msub_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_msubu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mthlip {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mthlip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mul_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mul_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mul_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mul_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleq_s_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleq_s_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleq_s_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleq_s_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleu_s_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleu_s_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleu_s_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleu_s_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_rs_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_rs_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_rs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_rs_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulsa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulsa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulsaq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulsaq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mult {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mult";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_multu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_multu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nor_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nor_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_or_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_or_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_packrl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_packrl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pick_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_pick_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pick_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_pick_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceq_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceq_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceq_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceq_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbla {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbla";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbra {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbla {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbla";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbra {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_sra_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_sra_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_sra_r_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_sra_r_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_rs_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_rs_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrqu_s_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrqu_s_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_prepend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_prepend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_raddu_w_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_raddu_w_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_rddsp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_rddsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_repl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_repl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_repl_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_repl_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shilo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shilo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shrl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shrl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shrl_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shrl_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subuh_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subuh_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subuh_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subuh_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_wrdsp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_wrdsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_xor_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_xor_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_xori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_xori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nearbyint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_36];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_abs_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_abs_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_abs_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_abs_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_add_f32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [anonymous_284, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_285];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_dec_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [anonymous_288, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_289];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_inc_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [anonymous_286, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_287];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bar_sync {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_bar_sync";
  string NAME = ?;
}
def int_nvvm_barrier0 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__syncthreads";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_and {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_or {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_popc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_popc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_d2ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_d2ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_f2i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_f2i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_i2f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_i2f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_ll2d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_ll2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_brev32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_brev32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_brev64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_brev64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_clz_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_clz_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_clz_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_clz_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_compiler_error {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.compiler.error";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_compiler_warn {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.compiler.warn";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_cos_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_cos_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_cos_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_cos_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_lo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_lo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2h_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2h_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2h_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2h_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_h2f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_h2f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_isspacep_const {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.const";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_const";
  string NAME = ?;
}
def int_nvvm_isspacep_global {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.global";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_global";
  string NAME = ?;
}
def int_nvvm_isspacep_local {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.local";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_local";
  string NAME = ?;
}
def int_nvvm_isspacep_shared {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.shared";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_shared";
  string NAME = ?;
}
def int_nvvm_istypep_sampler {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.sampler";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_sampler";
  string NAME = ?;
}
def int_nvvm_istypep_surface {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.surface";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_surface";
  string NAME = ?;
}
def int_nvvm_istypep_texture {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.texture";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_texture";
  string NAME = ?;
}
def int_nvvm_ldg_global_f {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.f";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_303, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_304];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldg_global_i {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.i";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_300, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_301];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldg_global_p {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.p";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [anonymous_306, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_307];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_f {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.f";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_294, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_295];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_i {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.i";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_291, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_292];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_p {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.p";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [anonymous_297, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly, anonymous_298];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lohi_i2d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lohi_i2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_cta {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_cta";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_gl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_gl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_sys {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_sys";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_double {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.double";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_float {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.float";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i16 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i16";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i64 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i64";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_ptr {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.ptr";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, anonymous_308];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul24_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul24_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul24_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul24_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_popc_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_popc_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_popc_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_popc_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_prmt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_prmt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_constant_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.constant.to.gen";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_constant {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.constant";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_global {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.global";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_local {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.local";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_param {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.param";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_shared {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.shared";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_global_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.global.to.gen";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_local_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.local.to.gen";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_shared_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.shared.to.gen";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_approx_ftz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_approx_ftz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_clock {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_clock";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_clock64 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r64
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_clock64";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ctaid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_w";
  string NAME = "int_nvvm_read_ptx_sreg_ctaid";
}
def int_nvvm_read_ptx_sreg_ctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_x";
  string NAME = "int_nvvm_read_ptx_sreg_ctaid";
}
def int_nvvm_read_ptx_sreg_ctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_y";
  string NAME = "int_nvvm_read_ptx_sreg_ctaid";
}
def int_nvvm_read_ptx_sreg_ctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_z";
  string NAME = "int_nvvm_read_ptx_sreg_ctaid";
}
def int_nvvm_read_ptx_sreg_envreg0 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg0";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg0";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg1 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg1";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg1";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg10 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg10";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg10";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg11 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg11";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg11";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg12 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg12";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg12";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg13 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg13";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg13";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg14 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg14";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg14";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg15 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg15";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg15";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg16 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg16";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg16";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg17 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg17";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg17";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg18 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg18";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg18";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg19 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg19";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg19";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg2 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg2";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg2";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg20 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg20";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg20";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg21 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg21";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg21";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg22 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg22";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg22";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg23 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg23";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg23";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg24 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg24";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg24";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg25 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg25";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg25";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg26 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg26";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg26";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg27 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg27";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg27";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg28 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg28";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg28";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg29 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg29";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg29";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg3 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg3";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg3";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg30 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg30";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg30";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg31 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg31";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg31";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg4 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg4";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg4";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg5 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg5";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg5";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg6 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg6";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg6";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg7 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg7";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg7";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg8 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg8";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg8";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg9 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg9";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg9";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_gridid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_gridid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_laneid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_laneid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_lanemask_eq {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_lanemask_eq";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_lanemask_ge {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_lanemask_ge";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_lanemask_gt {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_lanemask_gt";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_lanemask_le {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_lanemask_le";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_lanemask_lt {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_lanemask_lt";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_nctaid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_w";
  string NAME = "int_nvvm_read_ptx_sreg_nctaid";
}
def int_nvvm_read_ptx_sreg_nctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_x";
  string NAME = "int_nvvm_read_ptx_sreg_nctaid";
}
def int_nvvm_read_ptx_sreg_nctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_y";
  string NAME = "int_nvvm_read_ptx_sreg_nctaid";
}
def int_nvvm_read_ptx_sreg_nctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_z";
  string NAME = "int_nvvm_read_ptx_sreg_nctaid";
}
def int_nvvm_read_ptx_sreg_nsmid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nsmid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ntid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_w";
  string NAME = "int_nvvm_read_ptx_sreg_ntid";
}
def int_nvvm_read_ptx_sreg_ntid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_x";
  string NAME = "int_nvvm_read_ptx_sreg_ntid";
}
def int_nvvm_read_ptx_sreg_ntid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_y";
  string NAME = "int_nvvm_read_ptx_sreg_ntid";
}
def int_nvvm_read_ptx_sreg_ntid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_z";
  string NAME = "int_nvvm_read_ptx_sreg_ntid";
}
def int_nvvm_read_ptx_sreg_nwarpid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nwarpid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_pm0 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_pm0";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_pm1 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_pm1";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_pm2 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_pm2";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_pm3 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_pm3";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_smid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_smid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_tid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_w";
  string NAME = "int_nvvm_read_ptx_sreg_tid";
}
def int_nvvm_read_ptx_sreg_tid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_x";
  string NAME = "int_nvvm_read_ptx_sreg_tid";
}
def int_nvvm_read_ptx_sreg_tid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_y";
  string NAME = "int_nvvm_read_ptx_sreg_tid";
}
def int_nvvm_read_ptx_sreg_tid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_z";
  string NAME = "int_nvvm_read_ptx_sreg_tid";
}
def int_nvvm_read_ptx_sreg_warpid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_warpid";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_warpsize {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSRegIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_warpsize";
  string NAME = ?;
}
def int_nvvm_reflect {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.reflect";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rotate_b32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.b32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_b32";
  string NAME = ?;
}
def int_nvvm_rotate_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.b64";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_b64";
  string NAME = ?;
}
def int_nvvm_rotate_right_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.right.b64";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_right_b64";
  string NAME = ?;
}
def int_nvvm_round_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_round_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_round_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sad_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sad_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sad_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sad_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_shfl_bfly_f32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.bfly.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_bfly_f32";
  string NAME = ?;
}
def int_nvvm_shfl_bfly_i32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.bfly.i32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_bfly_i32";
  string NAME = ?;
}
def int_nvvm_shfl_down_f32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.down.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_down_f32";
  string NAME = ?;
}
def int_nvvm_shfl_down_i32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.down.i32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_down_i32";
  string NAME = ?;
}
def int_nvvm_shfl_idx_f32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.idx.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_idx_f32";
  string NAME = ?;
}
def int_nvvm_shfl_idx_i32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.idx.i32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_idx_i32";
  string NAME = ?;
}
def int_nvvm_shfl_up_f32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.up.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_up_f32";
  string NAME = ?;
}
def int_nvvm_shfl_up_i32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.shfl.up.i32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, IntrConvergent];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_shfl_up_i32";
  string NAME = ?;
}
def int_nvvm_sin_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sin_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sin_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sin_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suq_array_size {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.array.size";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_array_size";
  string NAME = ?;
}
def int_nvvm_suq_channel_data_type {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.channel.data.type";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_channel_data_type";
  string NAME = ?;
}
def int_nvvm_suq_channel_order {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.channel.order";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_channel_order";
  string NAME = ?;
}
def int_nvvm_suq_depth {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.depth";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_depth";
  string NAME = ?;
}
def int_nvvm_suq_height {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.height";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_height";
  string NAME = ?;
}
def int_nvvm_suq_width {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.width";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_width";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.clamp";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.zero";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i16.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i32.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i8.trap";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_swap_lo_hi_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.swap.lo.hi.b64";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_swap_lo_hi_b64";
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4f32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4s32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4u32.s32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_texsurf_handle {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.texsurf.handle";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_anyi64ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_texsurf_handle_internal {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.texsurf.handle.internal";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4f32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4s32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4u32.f32";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_txq_array_size {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.array.size";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_array_size";
  string NAME = ?;
}
def int_nvvm_txq_channel_data_type {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.channel.data.type";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_channel_data_type";
  string NAME = ?;
}
def int_nvvm_txq_channel_order {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.channel.order";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_channel_order";
  string NAME = ?;
}
def int_nvvm_txq_depth {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.depth";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_depth";
  string NAME = ?;
}
def int_nvvm_txq_height {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.height";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_height";
  string NAME = ?;
}
def int_nvvm_txq_num_mipmap_levels {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.num.mipmap.levels";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_num_mipmap_levels";
  string NAME = ?;
}
def int_nvvm_txq_num_samples {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.num.samples";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_num_samples";
  string NAME = ?;
}
def int_nvvm_txq_width {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.width";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_width";
  string NAME = ?;
}
def int_nvvm_ui2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "nvvm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_objectsize {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i1_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_object_size";
  string NAME = ?;
}
def int_pcmarker {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_pow {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_22, anonymous_23];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_powi {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_19, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vcipher {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vcipher";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vcipherlast {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vcipherlast";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vncipher {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vncipher";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vncipherlast {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vncipherlast";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpermxor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpermxor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vsbox {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vsbox";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vshasigmad {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vshasigmad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vshasigmaw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vshasigmaw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dssall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dssall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dst {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dst";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dstst {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dstst";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dststt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dststt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dstt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dstt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvebx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvehx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvewx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvsl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvxl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_mfvscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_mfvscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_mtvscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_mtvscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvebx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvehx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvewx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvxl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddcuq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_QQQ_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddcuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddcuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddcuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddecuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddecuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddeuqm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddeuqm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddsbs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddsbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddshs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddsws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vadduhs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vadduws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vadduws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavguh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavguh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavguw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavguw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vbpermq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vbpermq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcfsx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcfsx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcfux {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcfux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpbfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpbfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpbfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpbfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpeqfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpeqfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpeqfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpeqfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequb_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequb_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequd_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequd_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgefp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgefp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgefp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsb_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsb_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsd_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsd_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtub_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtub_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtud_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtud_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vctsxs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vctsxs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vctuxs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vctuxs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vexptefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vexptefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vgbbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vgbbd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vlogefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vlogefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaddfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaddfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxfp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxud {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmhaddshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmhaddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmhraddshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmhraddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminfp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminud {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminuh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmladduhm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmladduhm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsummbm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsummbm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumshm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumshm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumubm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumubm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumuhm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumuhm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumuhs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleuh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuloub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuloub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulouh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulouh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulouw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulouw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vnmsubfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vnmsubfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vperm_4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpksdss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpksdss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpksdus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpksdus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkshss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkshss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkshus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkshus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkswss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkswss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkswus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkswus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkudus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkudus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkuhus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkuhus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkuwus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkuwus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfim {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfip {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfiz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfiz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrld {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrsqrtefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrsqrtefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsel {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsel_4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsl {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslo {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsr {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrab {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrah {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrah";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsraw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsraw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsro {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsro";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubcuq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_QQQ_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubcuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubcuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubcuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubecuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubecuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubeuqm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubeuqm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubsbs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubsbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubshs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubsws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsububs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsububs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubuws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubuws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum2sws {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum2sws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4sbs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4sbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4shs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4shs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4ubs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4ubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsumsws {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsumsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_bpermd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpermd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcba {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbi {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_82];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbtst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_83];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbz {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbzl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divde {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divde";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divdeu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divdeu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divwe {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divwe";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divweu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divweu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_texasr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_texasr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_texasru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_texasru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_tfhar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_tfhar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_tfiar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_tfiar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_is_decremented_ctr_nonzero {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_lwsync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_mtctr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfabs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfabs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfid {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfid";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfids {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfids";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfidu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfidu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfidus {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfidus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmplt {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmplt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcpsgn {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcpsgn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctid {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctid";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctidu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctidu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiduz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiduz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctidz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctidz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwuz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwuz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvflogical {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvflogical";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmul {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmuls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmuls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnabs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnabs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfneg {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfneg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfperm {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfre {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfre";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfres {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfres";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrim {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrin {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrip {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfriz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfriz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsqrte {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsqrte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsqrtes {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsqrtes";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsel {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsel";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvftstnan {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvftstnan";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmul {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmuls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmuls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxcpnmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxcpnmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxcpnmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxcpnmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxnpmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxnpmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxnpmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxnpmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvgpci {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvgpci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwaa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwaa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwza {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwza";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcld {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcrd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcrd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcrs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcrs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfiw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfiw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfiwa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfiwa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_texasr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_texasr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_texasru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_texasru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_tfhar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_tfhar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_tfiar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_tfiar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_sync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabort {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabort";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortdc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortdc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortdci {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortdci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortwc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortwc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortwci {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortwci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tbegin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tbegin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tcheck {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tcheck";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tendall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tendall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_trechkpt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_trechkpt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_treclaim {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_treclaim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tresume {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tresume";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tsr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tsr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tsuspend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tsuspend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_ttest {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ttest";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_lxvd2x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_lxvw4x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_stxvd2x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_stxvw4x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xsmaxdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Sca_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xsmaxdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xsmindp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Sca_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xsmindp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqdp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqdp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqsp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqsp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgedp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgedp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgedp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgedp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgesp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgesp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgesp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgesp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtdp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtdp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtsp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtsp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvdivdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvdivdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvdivsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvdivsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmaxdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmaxdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmaxsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmaxsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmindp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmindp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvminsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvminsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrdpip {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvredp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvredp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvresp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvresp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrspip {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrsqrtedp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvrsqrtedp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrsqrtesp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvrsqrtesp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xxleqv {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xxleqv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_prefetch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly, anonymous_2];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ptr_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.ptr.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [anonymous_50];
  list<LLVMType> ParamTypes = [anonymous_51, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_r600_group_barrier {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_r600_group_barrier";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrConvergent];
  bit isTarget = 0;
  string NAME = ?;
}
def int_r600_implicitarg_ptr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_r600_implicitarg_ptr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [anonymous_309];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_r600_rat_store_typed {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_rat_store_typed";
  string NAME = ?;
}
def int_r600_read_global_size_x {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_x";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_global_size_y {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_y";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_global_size_z {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_z";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_local_size_x {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_local_size_y {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_local_size_z {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_ngroups_x {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_x";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_ngroups_y {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_y";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_ngroups_z {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_z";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_tgid_x {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_x";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tgid_y {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_y";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tgid_z {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsicNamed _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_z";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tidig_x {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_tidig";
}
def int_r600_read_tidig_y {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_tidig";
}
def int_r600_read_tidig_z {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_r600_read_tidig";
}
def int_r600_read_workdim {	// SDPatternOperator Intrinsic AMDGPUReadPreloadRegisterIntrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_r600_recipsqrt_clamped {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_311];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_r600_recipsqrt_ieee {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_310];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_read_register {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.read_register";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_metadata_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_readcyclecounter {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_returnaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_rint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_35];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_round {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_37];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_etnd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tx_nesting_depth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_lcbb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_lcbb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_ntstg {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_ppa_txassist {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tx_assist";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tabort {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoReturn, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbegin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbegin_nofloat {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbeginc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tdc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tend";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaccb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vaccb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vacccq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vacccq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaccf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vaccf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vaccg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vaccg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vacch {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vacch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vaccq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vaccq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vacq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vacq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vaq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vavgb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vavgb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vavgf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vavgg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavglb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vavglb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vavglf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vavglg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vavglh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vceqbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vchbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchlbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vcksm {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vcksm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_verimb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_verimb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_verimf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt g
  string GCCBuiltinName = "__builtin_s390_verimg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_verimh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verllb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt b
  string GCCBuiltinName = "__builtin_s390_verllb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt f
  string GCCBuiltinName = "__builtin_s390_verllf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt g
  string GCCBuiltinName = "__builtin_s390_verllg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt h
  string GCCBuiltinName = "__builtin_s390_verllh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllvb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_verllvb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_verllvf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_verllvg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_verllvh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_vfaeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt b
  string GCCBuiltinName = "__builtin_s390_vfaeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaebs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt f
  string GCCBuiltinName = "__builtin_s390_vfaef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaefs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt h
  string GCCBuiltinName = "__builtin_s390_vfaeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaehs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt b
  string GCCBuiltinName = "__builtin_s390_vfaezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezbs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt f
  string GCCBuiltinName = "__builtin_s390_vfaezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezfs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt h
  string GCCBuiltinName = "__builtin_s390_vfaezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezhs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfcedbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfchdbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfchedbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfeeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeebs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfeef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeefs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeehs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfeezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeneb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeneb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenebs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfenef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenefs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfeneh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeneh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenehs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfenezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfenezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfenezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfidb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vftcidb {	// SDPatternOperator Intrinsic SystemZBinaryConvIntCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vgfmab {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vgfmab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmaf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vgfmaf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmag {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv g
  string GCCBuiltinName = "__builtin_s390_vgfmag";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmah {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vgfmah";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vgfmb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vgfmf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vgfmg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vgfmh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vistrb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary b
  string GCCBuiltinName = "__builtin_s390_vistrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrbs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary f
  string GCCBuiltinName = "__builtin_s390_vistrf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrfs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary h
  string GCCBuiltinName = "__builtin_s390_vistrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrhs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vlbb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vlbb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vmaeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmaef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmaef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmaeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmahb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary b
  string GCCBuiltinName = "__builtin_s390_vmahb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmahf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary f
  string GCCBuiltinName = "__builtin_s390_vmahf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmahh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary h
  string GCCBuiltinName = "__builtin_s390_vmahh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmaleb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaleb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmalef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmalef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmaleh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaleh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmalhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary b
  string GCCBuiltinName = "__builtin_s390_vmalhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary f
  string GCCBuiltinName = "__builtin_s390_vmalhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary h
  string GCCBuiltinName = "__builtin_s390_vmalhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmalob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmalof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmalof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmaloh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaloh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmaob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmaof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmaof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmaoh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vmhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vmhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vmhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmleb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmleb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmlef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmlef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmleh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmleh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmlhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vmlhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vmlhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vmlhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmlob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmlof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmlof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmloh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmloh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vmof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vmoh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vpdi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vpdi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vpklsf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vpklsf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vpklsg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vpklsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklshs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpksf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vpksf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vpksg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vpksh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpkshs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vsbcbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vsbcbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vsbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vscbib {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vscbib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbif {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vscbif";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbig {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vscbig";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbih {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vscbih";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vscbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsl {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vslb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vslb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsldb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vsldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsra {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrab {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrl {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrlb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vstl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vstl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vstrcb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_vstrcb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcbs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_vstrcf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcfs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrch {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_vstrch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrchs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrczb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_vstrczb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczbs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_vstrczf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczfs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_vstrczh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczhs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vsumb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumgf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumgf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumgh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumqf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumqf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumqg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumqg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vtm {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vtm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vuphb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuphb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuphf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuphf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuphh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vuphh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuplb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuplb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vuplf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuplf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vuplhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuplhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuplhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vuplhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhw {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv hw
  string GCCBuiltinName = "__builtin_s390_vuplhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vupllb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vupllb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_s390_vupllf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vupllf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_s390_vupllh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vupllh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_sadd_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_54, anonymous_55];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_setjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_siglongjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sigsetjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sin {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_20];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_smul_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_62, anonymous_63];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sqrt {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_18];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ssub_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_58, anonymous_59];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackguard {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackprotector {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackrestore {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_stack_restore";
  string NAME = ?;
}
def int_stacksave {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_stack_save";
  string NAME = ?;
}
def int_thread_pointer {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_thread_pointer";
  string NAME = ?;
}
def int_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoReturn];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_trap";
  string NAME = ?;
}
def int_trunc {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_34];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_type_checked_load {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_metadata_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_type_test {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_metadata_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_uadd_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_56, anonymous_57];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_umul_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_64, anonymous_65];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_usub_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_60, anonymous_61];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vacopy {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_copy";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vaend {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_end";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_var_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.var.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vastart {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_start";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_wasm_current_memory {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "wasm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_wasm_grow_memory {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "wasm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_write_register {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.write_register";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_anyint_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pavgusb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pf2id {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pf2id";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfadd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmax {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmul {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcpit1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcpit1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcpit2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcpit2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrsqit1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrsqit1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrsqrt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrsqrt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfsubr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfsubr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pi2fd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pi2fd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pmulhrw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pf2iw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pf2iw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pfnacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfnacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pfpnacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfpnacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pi2fw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pi2fw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pswapd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarry_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarry_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarry_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarry_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarryx_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarryx_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarryx_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarryx_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesdec {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesdec128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesdeclast {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesdeclast128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesenc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesenc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesenclast {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesenclast128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesimc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesimc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aeskeygenassist {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aeskeygenassist128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_d256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_q";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_q256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_d256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_q";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_q256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstored";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstored256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_mpsadbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mpsadbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packssdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packsswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packusdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packuswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pblendvb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pblendvb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_permd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_permps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsf256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmadd_ub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovmskb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmul_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmul_hr_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pshuf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrav_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrav_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_vperm2i128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permti256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmb512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_broadcastmw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastmw512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtb2mask_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtb2mask128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtb2mask_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtb2mask256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtb2mask_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtb2mask512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtd2mask_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtd2mask128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtd2mask_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtd2mask256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtd2mask_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtd2mask512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2b128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2b256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2b512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2d128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2d256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2d512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2q128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2q256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2q512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2w128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2w256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtmask2w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtmask2w512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtq2mask_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtq2mask128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtq2mask_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtq2mask256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtq2mask_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtq2mask512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2sd32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2sd64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2ss32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2ss64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttsd2si32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttsd2usi32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttsd2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttss2si32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttss2usi32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvttss2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2sd32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2ss32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi642sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2sd64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi642ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2ss64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtw2mask_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtw2mask128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtw2mask_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtw2mask256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtw2mask_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtw2mask512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_exp2_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_exp2pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_exp2_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_exp2ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfdpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfdps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v16i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfqpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfqps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kand_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kandhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kandn_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kandnhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_knot_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_knothi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_korhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kortestc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kortestchi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kortestz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kortestzhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kunpck_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kunpckhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kunpck_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kunpckdi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kunpck_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kunpcksi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kxnor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kxnorhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kxor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kxorhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsd3_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddss3_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf32x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf32x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf32x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf32x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf32x4_512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf32x8_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcastf64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcastf64x4_512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x2_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x2_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x4_512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti32x8_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_broadcasti64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_broadcasti64x4_512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpsd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictsi_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictsi_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictsi_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictdi_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictdi_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictdi_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2qq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2qq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2qq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2qq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2qq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2qq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2udq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2udq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2udq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2udq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2uqq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2uqq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2uqq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2uqq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2uqq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2uqq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2qq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2qq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2qq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2qq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2qq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2qq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2udq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2udq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2udq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2udq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2uqq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2uqq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2uqq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2uqq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2uqq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2uqq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtqq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtqq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtsd2ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2ss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2f64_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtss2sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2sd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4f32_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2qq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2qq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2qq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2qq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2qq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2qq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2udq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2udq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2udq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2udq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2uqq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2uqq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2uqq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2uqq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2uqq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2uqq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2qq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2qq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2qq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2qq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2qq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2qq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2udq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2udq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2udq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2udq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2uqq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2uqq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2uqq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2uqq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2uqq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2uqq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtuqq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtuqq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_dbpsadbw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dbpsadbw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_dbpsadbw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dbpsadbw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_dbpsadbw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dbpsadbw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmsd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fixupimm_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclasspd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclasspd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclasspd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclassps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclassps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclassps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclasssd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_fpclass_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fpclassss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpsd128_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpss128_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getmant_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getmantss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf32x8_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_insertf64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertf64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti32x8_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_inserti64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_inserti64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_d_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_d_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_d_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_q_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_q_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_q_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_move_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movsd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_move_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_b_gpr_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastb128_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_b_gpr_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastb256_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_b_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastb512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_d_gpr_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd128_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_d_gpr_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd256_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_d_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_gpr_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq128_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_gpr_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq256_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq512_mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_w_gpr_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastw128_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_w_gpr_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastw256_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_w_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastw512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_df_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvardf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_df_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvardf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_di_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvardi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_di_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvardi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarhi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarhi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarhi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_sf_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_sf_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_si_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_permvar_si_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddubs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddubs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddubs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddw_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddw_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaddw_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_db_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_dw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovdw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qd_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqd512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_qw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovqw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmov_wb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovwb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_db_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_dw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsdw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qd_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqd512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_qw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsqw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovs_wb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovswb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxb_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxd_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxdq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxd_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxdq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxd_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxdq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovsxw_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_db_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_dw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusdw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qd_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqd512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_qw_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovusqw512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_mem_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb128mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_mem_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb256mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovus_wb_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovuswb512mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxb_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxd_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxd_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxd_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmovzxw_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmultishift_qb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmultishiftqb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmultishift_qb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmultishiftqb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmultishift_qb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmultishiftqb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prold128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prold256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prold512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prol_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prolv_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prolvq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prord128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prord256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prord512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pror_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_prorv_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_prorvq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_di_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_di_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_di_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v8i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_wi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_wi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_wi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv16_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv16hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv2di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv32hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv32hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv8_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_di_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_di_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_di_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v8i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_wi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_wi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_wi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav16_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav16hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav32_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav32hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav4si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav8_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psravq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psravq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_di_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_di_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_di_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v8i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_wi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_wi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_wi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv16_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv16hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv2di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv32hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv32hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv8_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8hi_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pternlog_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangepd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangepd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangepd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangeps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangeps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangeps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangesd128_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_range_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rangess128_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reducepd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reducepd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reducepd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reduceps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reduceps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reduceps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reducesd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_reduce_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_reducess_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalepd_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalepd_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalepd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaleps_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaleps_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaleps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalesd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaless_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_f32x4 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_f32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_f32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_f32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_f64x2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_f64x2_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_f64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_f64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_i32x4 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_i32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_i32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_i32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_i64x2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_i64x2_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_i64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shuf_i64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_shuf_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_shufps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_store_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storess_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subsd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_128 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtph2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtph2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtph2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtps2ph_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtps2ph_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtps2ph_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf32x8_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti32x4_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti32x4_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti32x8_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti32x8_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti64x2_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti64x2_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti64x2_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti64x2_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsd3_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddss3_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermilvar_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52h_uq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52h_uq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52h_uq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52l_uq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52l_uq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpmadd52l_uq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmsd_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_fixupimm_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fixupimmss_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_pternlog_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pternlogq512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsd3_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddss3_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_qi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_qi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_qi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varqi512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52h_uq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52h_uq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52h_uq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52huq512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52l_uq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52l_uq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpmadd52l_uq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadd52luq512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_psad_bw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmb512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestm_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmw512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmb512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_ptestnm_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnmw512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28sd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28ss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14pd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14pd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28sd_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28ss_round_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i16_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i16_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfdpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfdps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v16i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfqpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfqps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_sd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastsd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_ss_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastss512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcomi_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcomisd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcomi_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcomiss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtsd2si32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtsd2si32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtsd2usi32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtsd2usi32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtsd2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtsd2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtss2si32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtss2si32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtss2usi32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtss2usi32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vcvtss2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtss2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_addsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_addsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_blendv_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_blendv_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cmp_pd_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cmp_ps_256 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_pd2_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_pd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_ps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtdq2_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtt_pd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtt_ps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_dp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dpps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ldu_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lddqu256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstorepd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstorepd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_max_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_max_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_min_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_min_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_movmsk_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_movmsk_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestc_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestc256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestnzc_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnzc256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestz_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestz256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_rcp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_round_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_round_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_rsqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_sqrt_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_sqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vbroadcastf128_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastf128_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vbroadcastf128_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastf128_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem, IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_si_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_si256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vzeroall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vzeroall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vzeroupper {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vzeroupper";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bextr_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextr_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bextr_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextr_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bzhi_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bzhi_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bzhi_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bzhi_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pdep_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pdep_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pdep_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pdep_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pext_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pext_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pext_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pext_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_clflushopt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_clflushopt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_flags_read_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_readeflags_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_flags_read_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_readeflags_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_flags_write_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_writeeflags_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_flags_write_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_writeeflags_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxrstor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxrstor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxrstor64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxrstor64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxsave {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxsave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxsave64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxsave64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_int {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_emms {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_emms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_femms {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_femms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_maskmovq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskmovq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_movnt_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptrx86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packssdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packsswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packuswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_palignr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_palignr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pand {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pand";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pandn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pextr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vec_ext_v4hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pinsr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vec_set_v4hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmaxs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmaxu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmins_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pminu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmovmskb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmull_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_por {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_por";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhdq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpcklbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpcklbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckldq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckldq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpcklwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpcklwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pxor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_monitorx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_monitorx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mwaitx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mwaitx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_pclmulqdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pclmulqdq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdfsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdfsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdfsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdfsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdgsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdgsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdgsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdgsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdpkru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdpkru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdpmc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdpmc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_16 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_16 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdtsc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdtsc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdtscp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdtscp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_ehguard {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_ehregnode {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_lsda {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_recoverfp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1msg1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1msg1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1msg2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1msg2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1nexte {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1nexte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1rnds4 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1rnds4";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256msg1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256msg1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256msg2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256msg2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256rnds2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256rnds2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_add_sd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_clflush {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_clflush";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cmp_pd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cmp_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comieq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comige_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comigt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comile_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdle";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comilt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdlt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comineq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtdq2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtpd2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtpd2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtps2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsi2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsi642sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi642sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtss2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttpd2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttps2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttsd2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_div_sd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_lfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_maskmov_dqu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskmovdqu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_max_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_max_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_mfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_min_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_min_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_movmsk_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_mul_sd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packssdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packsswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packuswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pause {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pause";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmovmskb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sqrt_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sqrt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sub_sd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomieq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomige_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomigt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomile_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdle";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomilt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdlt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomineq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_addsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_addsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_ldu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lddqu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_monitor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_monitor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_mwait {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mwait";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_blendvpd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_blendvps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_dppd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dppd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_dpps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dpps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_insertps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertps128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_mpsadbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mpsadbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_packusdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pblendvb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pblendvb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_phminposuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phminposuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmuldq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestnzc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnzc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_16 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_8 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32qi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_64_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestri128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestri128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestria128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestria128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestric128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestric128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestrio128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestrio128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestris128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestris128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestriz128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestriz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestrm128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestrm128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistri128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistri128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistria128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistria128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistric128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistric128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistrio128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistrio128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistris128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistris128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistriz128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistriz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistrm128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistrm128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_extrq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extrq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_extrqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extrqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_insertq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_insertqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_add_ss {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cmp_ps {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cmp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comieq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comieq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comige_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comige";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comigt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comigt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comile_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comile";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comilt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comilt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comineq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comineq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpd2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpi2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpi2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpi2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpi2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtps2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtsi2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtsi642ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi642ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtss2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttpd2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttps2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttss2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_div_ss {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ldmxcsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_max_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_max_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_min_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_min_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_movmsk_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_mul_ss {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_pshuf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rcp_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rcp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rsqrt_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rsqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sqrt_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_stmxcsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sub_ss {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomieq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomieq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomige_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomige";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomigt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomigt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomile_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomile";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomilt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomilt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomineq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomineq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmadd_ub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmadd_ub_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmul_hr_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmul_hr_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pshuf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pshuf_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_subborrow_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subborrow_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_subborrow_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subborrow_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [IntrArgMemOnly];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_tbm_bextri_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextri_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_tbm_bextri_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextri_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtph2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtph2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtps2ph_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtps2ph_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrfsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrfsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrfsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrfsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrgsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrgsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrgsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrgsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrpkru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrpkru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xabort {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xabort";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xbegin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xbegin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcmov {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcmov";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcmov_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcmov_256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadddq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadddq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddudq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddudq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadduwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadduwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadduwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadduwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubdq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdqh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdqh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdql {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdql";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdqh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdqh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdql {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdql";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssww {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssww";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsww {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsww";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmadcsswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadcsswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmadcswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadcswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotbi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotbi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotdi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotdi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotwi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshab {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshad {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshaq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshaq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshaw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshaw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshld {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xrstor {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xrstor64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xrstors {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xrstors64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsave {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsave64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsavec {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsavec64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsaveopt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsaveopt64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsaves {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xsaves64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xtest {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xtest";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_bitrev {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_bitrev";
  string NAME = ?;
}
def int_xcore_checkevent {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_chkct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_249];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clre {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clrpt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_257];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clrsr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_crc32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_crc8 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_edu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_264];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_eeu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_263];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_endin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_271];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_freer {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_242];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_geted {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getet {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getid {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_getid";
  string NAME = ?;
}
def int_xcore_getps {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_getps";
  string NAME = ?;
}
def int_xcore_getr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_272];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getts {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_258];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_in {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_243];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_inct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_245];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initcp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_278];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initdp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_279];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initlr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_277];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initpc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_276];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initsp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_275];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_inshr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_254];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_int {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_244];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_mjoin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_274];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_msync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_273];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_out {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_246];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_248];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outshr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_255];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_247];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_peek {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_270];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_253];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setclk {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_265, anonymous_266];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_252];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setev {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_262];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setps {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_setps";
  string NAME = ?;
}
def int_xcore_setpsc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_269];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setpt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_256];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setrdy {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_267, anonymous_268];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setsr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_settw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_260];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_261];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_sext {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_ssync {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_syncr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_259];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_testct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_250];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_testwct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> IntrProperties = [anonymous_251];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_waitevent {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> IntrProperties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_zext {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> IntrProperties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def interleave {
  string NAME = ?;
}
def intrinsic_void {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::INTRINSIC_VOID";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_492;
  string NAME = ?;
}
def intrinsic_w_chain {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  string Opcode = "ISD::INTRINSIC_W_CHAIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_494;
  string NAME = ?;
}
def intrinsic_wo_chain {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::INTRINSIC_WO_CHAIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_496;
  string NAME = ?;
}
def ioaddr16 {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  uint64_t val = N->getZExtValue();
  return val >= 0x20 && val < 0x5f;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = ioaddr_XFORM;
  string NAME = ?;
}
def ioaddr8 {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  uint64_t val = N->getZExtValue();
  return val >= 0x20 && val < 0x60;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = ioaddr_XFORM;
  string NAME = ?;
}
def ioaddr_XFORM {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "
  return CurDAG->getTargetConstant(uint8_t(N->getZExtValue()) - 0x20, SDLoc(N), MVT::i8);
";
  string NAME = ?;
}
def iobitpos8 {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  return isPowerOf2_32(uint8_t(N->getZExtValue()));
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = iobitpos8_XFORM;
  string NAME = ?;
}
def iobitpos8_XFORM {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "
  return CurDAG->getTargetConstant(Log2_32(uint8_t(N->getZExtValue())),
                                   SDLoc(N), MVT::i8);
";
  string NAME = ?;
}
def iobitposn8 {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  return isPowerOf2_32(uint8_t(~N->getZExtValue()));
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = iobitposn8_XFORM;
  string NAME = ?;
}
def iobitposn8_XFORM {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "
  return CurDAG->getTargetConstant(Log2_32(uint8_t(~N->getZExtValue())),
                                   SDLoc(N), MVT::i8);
";
  string NAME = ?;
}
def isVoid {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 66;
  string NAME = ?;
}
def ist {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::STORE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIStore;
  string NAME = ?;
}
def istore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (ist node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return !cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def itruncstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (ist node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def jumptable {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::JumpTable";
  string SDClass = "JumpTableSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def ld {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::LOAD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTLoad;
  string NAME = ?;
}
def llvm_any_ty {	// LLVMType
  ValueType VT = Any;
  string NAME = ?;
}
def llvm_anyfloat_ty {	// LLVMType
  ValueType VT = fAny;
  string NAME = ?;
}
def llvm_anyi64ptr_ty {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i64_ty;
  string NAME = ?;
}
def llvm_anyint_ty {	// LLVMType
  ValueType VT = iAny;
  string NAME = ?;
}
def llvm_anyptr_ty {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i8_ty;
  string NAME = ?;
}
def llvm_anyvector_ty {	// LLVMType
  ValueType VT = vAny;
  string NAME = ?;
}
def llvm_descriptor_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_empty_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_double_ty {	// LLVMType
  ValueType VT = f64;
  string NAME = ?;
}
def llvm_empty_ty {	// LLVMType
  ValueType VT = OtherVT;
  string NAME = ?;
}
def llvm_f128_ty {	// LLVMType
  ValueType VT = f128;
  string NAME = ?;
}
def llvm_f80_ty {	// LLVMType
  ValueType VT = f80;
  string NAME = ?;
}
def llvm_float_ty {	// LLVMType
  ValueType VT = f32;
  string NAME = ?;
}
def llvm_half_ty {	// LLVMType
  ValueType VT = f16;
  string NAME = ?;
}
def llvm_i16_ty {	// LLVMType
  ValueType VT = i16;
  string NAME = ?;
}
def llvm_i1_ty {	// LLVMType
  ValueType VT = i1;
  string NAME = ?;
}
def llvm_i32_ty {	// LLVMType
  ValueType VT = i32;
  string NAME = ?;
}
def llvm_i64_ty {	// LLVMType
  ValueType VT = i64;
  string NAME = ?;
}
def llvm_i8_ty {	// LLVMType
  ValueType VT = i8;
  string NAME = ?;
}
def llvm_metadata_ty {	// LLVMType
  ValueType VT = MetadataVT;
  string NAME = ?;
}
def llvm_ppcf128_ty {	// LLVMType
  ValueType VT = ppcf128;
  string NAME = ?;
}
def llvm_ptr32_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i32_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptr64_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i64_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptr_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptrptr_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_ptr_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptrx86mmx_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_x86mmx_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_token_ty {	// LLVMType
  ValueType VT = token;
  string NAME = ?;
}
def llvm_v1024i1_ty {	// LLVMType
  ValueType VT = v1024i1;
  string NAME = ?;
}
def llvm_v128i16_ty {	// LLVMType
  ValueType VT = v128i16;
  string NAME = ?;
}
def llvm_v128i8_ty {	// LLVMType
  ValueType VT = v128i8;
  string NAME = ?;
}
def llvm_v16f32_ty {	// LLVMType
  ValueType VT = v16f32;
  string NAME = ?;
}
def llvm_v16i16_ty {	// LLVMType
  ValueType VT = v16i16;
  string NAME = ?;
}
def llvm_v16i1_ty {	// LLVMType
  ValueType VT = v16i1;
  string NAME = ?;
}
def llvm_v16i32_ty {	// LLVMType
  ValueType VT = v16i32;
  string NAME = ?;
}
def llvm_v16i64_ty {	// LLVMType
  ValueType VT = v16i64;
  string NAME = ?;
}
def llvm_v16i8_ty {	// LLVMType
  ValueType VT = v16i8;
  string NAME = ?;
}
def llvm_v1f32_ty {	// LLVMType
  ValueType VT = v1f32;
  string NAME = ?;
}
def llvm_v1f64_ty {	// LLVMType
  ValueType VT = v1f64;
  string NAME = ?;
}
def llvm_v1i128_ty {	// LLVMType
  ValueType VT = v1i128;
  string NAME = ?;
}
def llvm_v1i16_ty {	// LLVMType
  ValueType VT = v1i16;
  string NAME = ?;
}
def llvm_v1i32_ty {	// LLVMType
  ValueType VT = v1i32;
  string NAME = ?;
}
def llvm_v1i64_ty {	// LLVMType
  ValueType VT = v1i64;
  string NAME = ?;
}
def llvm_v1i8_ty {	// LLVMType
  ValueType VT = v1i8;
  string NAME = ?;
}
def llvm_v256i8_ty {	// LLVMType
  ValueType VT = v256i8;
  string NAME = ?;
}
def llvm_v2f16_ty {	// LLVMType
  ValueType VT = v2f16;
  string NAME = ?;
}
def llvm_v2f32_ty {	// LLVMType
  ValueType VT = v2f32;
  string NAME = ?;
}
def llvm_v2f64_ty {	// LLVMType
  ValueType VT = v2f64;
  string NAME = ?;
}
def llvm_v2i16_ty {	// LLVMType
  ValueType VT = v2i16;
  string NAME = ?;
}
def llvm_v2i1_ty {	// LLVMType
  ValueType VT = v2i1;
  string NAME = ?;
}
def llvm_v2i32_ty {	// LLVMType
  ValueType VT = v2i32;
  string NAME = ?;
}
def llvm_v2i64_ty {	// LLVMType
  ValueType VT = v2i64;
  string NAME = ?;
}
def llvm_v2i8_ty {	// LLVMType
  ValueType VT = v2i8;
  string NAME = ?;
}
def llvm_v32i16_ty {	// LLVMType
  ValueType VT = v32i16;
  string NAME = ?;
}
def llvm_v32i1_ty {	// LLVMType
  ValueType VT = v32i1;
  string NAME = ?;
}
def llvm_v32i32_ty {	// LLVMType
  ValueType VT = v32i32;
  string NAME = ?;
}
def llvm_v32i64_ty {	// LLVMType
  ValueType VT = v32i64;
  string NAME = ?;
}
def llvm_v32i8_ty {	// LLVMType
  ValueType VT = v32i8;
  string NAME = ?;
}
def llvm_v4f16_ty {	// LLVMType
  ValueType VT = v4f16;
  string NAME = ?;
}
def llvm_v4f32_ty {	// LLVMType
  ValueType VT = v4f32;
  string NAME = ?;
}
def llvm_v4f64_ty {	// LLVMType
  ValueType VT = v4f64;
  string NAME = ?;
}
def llvm_v4i16_ty {	// LLVMType
  ValueType VT = v4i16;
  string NAME = ?;
}
def llvm_v4i1_ty {	// LLVMType
  ValueType VT = v4i1;
  string NAME = ?;
}
def llvm_v4i32_ty {	// LLVMType
  ValueType VT = v4i32;
  string NAME = ?;
}
def llvm_v4i64_ty {	// LLVMType
  ValueType VT = v4i64;
  string NAME = ?;
}
def llvm_v4i8_ty {	// LLVMType
  ValueType VT = v4i8;
  string NAME = ?;
}
def llvm_v512i1_ty {	// LLVMType
  ValueType VT = v512i1;
  string NAME = ?;
}
def llvm_v64i16_ty {	// LLVMType
  ValueType VT = v64i16;
  string NAME = ?;
}
def llvm_v64i1_ty {	// LLVMType
  ValueType VT = v64i1;
  string NAME = ?;
}
def llvm_v64i32_ty {	// LLVMType
  ValueType VT = v64i32;
  string NAME = ?;
}
def llvm_v64i8_ty {	// LLVMType
  ValueType VT = v64i8;
  string NAME = ?;
}
def llvm_v8f16_ty {	// LLVMType
  ValueType VT = v8f16;
  string NAME = ?;
}
def llvm_v8f32_ty {	// LLVMType
  ValueType VT = v8f32;
  string NAME = ?;
}
def llvm_v8f64_ty {	// LLVMType
  ValueType VT = v8f64;
  string NAME = ?;
}
def llvm_v8i16_ty {	// LLVMType
  ValueType VT = v8i16;
  string NAME = ?;
}
def llvm_v8i1_ty {	// LLVMType
  ValueType VT = v8i1;
  string NAME = ?;
}
def llvm_v8i32_ty {	// LLVMType
  ValueType VT = v8i32;
  string NAME = ?;
}
def llvm_v8i64_ty {	// LLVMType
  ValueType VT = v8i64;
  string NAME = ?;
}
def llvm_v8i8_ty {	// LLVMType
  ValueType VT = v8i8;
  string NAME = ?;
}
def llvm_vararg_ty {	// LLVMType
  ValueType VT = isVoid;
  string NAME = ?;
}
def llvm_void_ty {	// LLVMType
  ValueType VT = isVoid;
  string NAME = ?;
}
def llvm_x86mmx_ty {	// LLVMType
  ValueType VT = x86mmx;
  string NAME = ?;
}
def load {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::NON_EXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def lowioaddr8 {	// SDPatternOperator PatFrag PatLeaf
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = "
  uint64_t val = N->getZExtValue();
  return val >= 0x20 && val < 0x40;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = ioaddr_XFORM;
  string NAME = ?;
}
def masked_gather {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::MGATHER";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTMaskedGather;
  string NAME = ?;
}
def masked_load {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  string Opcode = "ISD::MLOAD";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTMaskedLoad;
  string NAME = ?;
}
def masked_scatter {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::MSCATTER";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTMaskedScatter;
  string NAME = ?;
}
def masked_store {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::MSTORE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTMaskedStore;
  string NAME = ?;
}
def mcsym {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::MCSymbol";
  string SDClass = "MCSymbolSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def memri {	// DAGOperand Operand
  ValueType Type = iPTR;
  string PrintMethod = "printMemri";
  string EncoderMethod = "encodeMemri";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops PTRDISPREGS, i16imm);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = MemriAsmOperand;
  string NAME = ?;
}
def memspi {	// DAGOperand Operand
  ValueType Type = iPTR;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops GPRSP, i16imm);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def mips_q31_ty {	// LLVMType
  ValueType VT = i32;
  string NAME = ?;
}
def mips_v2q15_ty {	// LLVMType
  ValueType VT = v2i16;
  string NAME = ?;
}
def mips_v4q7_ty {	// LLVMType
  ValueType VT = v4i8;
  string NAME = ?;
}
def mul {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::MUL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def mulhs {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::MULHS";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def mulhu {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::MULHU";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def node {
  string NAME = ?;
}
def nontemporalload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (load node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->isNonTemporal();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def nontemporalstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (store node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->isNonTemporal();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def not {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$in);
  dag Fragment = (xor node:$in, -1);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def null_frag {	// SDPatternOperator
  list<SDNodeProperty> Properties = [];
  string NAME = ?;
}
def ops {
  string NAME = ?;
}
def or {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::OR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def outs {
  string NAME = ?;
}
def post_store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr, node:$offset);
  dag Fragment = (istore node:$val, node:$ptr, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::POST_INC || AM == ISD::POST_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncst {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (itruncstore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::POST_INC || AM == ISD::POST_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncstf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def ppcf128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 12;
  string NAME = ?;
}
def pre_store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (istore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::PRE_INC || AM == ISD::PRE_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncst {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (itruncstore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::PRE_INC || AM == ISD::PRE_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncstf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def prefetch {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::PREFETCH";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTPrefetch;
  string NAME = ?;
}
def ptr {	// RegAltNameIndex
  string Namespace = "AVR";
  string NAME = ?;
}
def ptr_rc {	// PointerLikeRegClass
  int RegClassKind = 0;
  string NAME = ?;
}
def readcyclecounter {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::READCYCLECOUNTER";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def relbrtarget_7 {	// DAGOperand Operand
  ValueType Type = OtherVT;
  string PrintMethod = "printPCRelImm";
  string EncoderMethod = "encodeRelCondBrTarget<AVR::fixup_7_pcrel>";
  string DecoderMethod = "";
  bit hasCompleteDecoder = 1;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def rotl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ROTL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def rotr {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ROTR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def scalar_to_vector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SCALAR_TO_VECTOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_478;
  string NAME = ?;
}
def sdiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SDIV";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def sdivrem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SDIVREM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def select {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SELECT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTSelect;
  string NAME = ?;
}
def selectcc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SELECT_CC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTSelectCC;
  string NAME = ?;
}
def sequence {
  string NAME = ?;
}
def set {
  string NAME = ?;
}
def setcc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SETCC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTSetCC;
  string NAME = ?;
}
def seteq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setgt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setle {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETLE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setlt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETLT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setne {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETNE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def seto {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETO);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setoeq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setoge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setogt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setole {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOLE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setolt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOLT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setone {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETONE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setueq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setuge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setugt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setule {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETULE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setult {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETULT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setune {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUNE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setuo {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUO);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SIGN_EXTEND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def sext_inreg {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SIGN_EXTEND_INREG";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTExtInreg;
  string NAME = ?;
}
def sextload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::SEXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def shl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SHL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def sint_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SINT_TO_FP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def smax {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::SMAX";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def smin {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::SMIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def smullohi {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::SMUL_LOHI";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def sra {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SRA";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def srcvalue {
  string NAME = ?;
}
def srem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SREM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def srl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SRL";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def st {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  string Opcode = "ISD::STORE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTStore;
  string NAME = ?;
}
def store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (unindexedstore node:$val, node:$ptr);
  string PredicateCode = "
  return !cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sub {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::SUB";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def sub_hi {	// SubRegIndex
  string Namespace = "AVR";
  int Size = 8;
  int Offset = 8;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
def sub_lo {	// SubRegIndex
  int SubRegIndex:offset = 0;
  string Namespace = "AVR";
  int Size = 8;
  int Offset = 0;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
def subc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue];
  string Opcode = "ISD::SUBC";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def sube {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue, SDNPInGlue];
  string Opcode = "ISD::SUBE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def tblockaddress {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetBlockAddress";
  string SDClass = "BlockAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tconstpool {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetConstantPool";
  string SDClass = "ConstantPoolSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def texternalsym {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetExternalSymbol";
  string SDClass = "ExternalSymbolSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tframeindex {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetFrameIndex";
  string SDClass = "FrameIndexSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tglobaladdr {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetGlobalAddress";
  string SDClass = "GlobalAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tglobaltlsaddr {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetGlobalTLSAddress";
  string SDClass = "GlobalAddressSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def timm {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetConstant";
  string SDClass = "ConstantSDNode";
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def tjumptable {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TargetJumpTable";
  string SDClass = "JumpTableSDNode";
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def token {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 120;
  string NAME = ?;
}
def trap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  string Opcode = "ISD::TRAP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def trunc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::TRUNCATE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntTruncOp;
  string NAME = ?;
}
def truncstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (unindexedstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstoref32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstoref64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorevi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorevi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorevi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def udiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::UDIV";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def udivrem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::UDIVREM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def uimm6 {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = " return isUInt<6>(N->getZExtValue()); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def uint_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::UINT_TO_FP";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def umax {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::UMAX";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def umin {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::UMIN";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def umullohi {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  string Opcode = "ISD::UMUL_LOHI";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def unalignednontemporalstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (nontemporalstore node:$val, node:$ptr);
  string PredicateCode = "
  StoreSDNode *St = cast<StoreSDNode>(N);
  return St->getAlignment() < St->getMemoryVT().getStoreSize();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def undef {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::UNDEF";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTUNDEF;
  string NAME = ?;
}
def unindexedload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (ld node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getAddressingMode() == ISD::UNINDEXED;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def unindexedstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (st node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getAddressingMode() == ISD::UNINDEXED;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def unknown {	// unknown_class
  string NAME = ?;
}
def untyped {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 67;
  string NAME = ?;
}
def urem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::UREM";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def v1024i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 20;
  string NAME = ?;
}
def v128i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 2048;
  int Value = 37;
  string NAME = ?;
}
def v128i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 28;
  string NAME = ?;
}
def v16f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 59;
  string NAME = ?;
}
def v16i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 16;
  string NAME = ?;
}
def v16i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 34;
  string NAME = ?;
}
def v16i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 42;
  string NAME = ?;
}
def v16i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 49;
  string NAME = ?;
}
def v16i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 25;
  string NAME = ?;
}
def v1f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 55;
  string NAME = ?;
}
def v1f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 60;
  string NAME = ?;
}
def v1i128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 51;
  string NAME = ?;
}
def v1i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 30;
  string NAME = ?;
}
def v1i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 38;
  string NAME = ?;
}
def v1i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 45;
  string NAME = ?;
}
def v1i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 21;
  string NAME = ?;
}
def v256i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 2048;
  int Value = 29;
  string NAME = ?;
}
def v2f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 52;
  string NAME = ?;
}
def v2f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 56;
  string NAME = ?;
}
def v2f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 61;
  string NAME = ?;
}
def v2i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 2;
  int Value = 13;
  string NAME = ?;
}
def v2i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 31;
  string NAME = ?;
}
def v2i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 39;
  string NAME = ?;
}
def v2i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 46;
  string NAME = ?;
}
def v2i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 22;
  string NAME = ?;
}
def v32i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 17;
  string NAME = ?;
}
def v32i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 35;
  string NAME = ?;
}
def v32i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 43;
  string NAME = ?;
}
def v32i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 2048;
  int Value = 50;
  string NAME = ?;
}
def v32i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 26;
  string NAME = ?;
}
def v4f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 53;
  string NAME = ?;
}
def v4f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 57;
  string NAME = ?;
}
def v4f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 62;
  string NAME = ?;
}
def v4i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 4;
  int Value = 14;
  string NAME = ?;
}
def v4i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 32;
  string NAME = ?;
}
def v4i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 40;
  string NAME = ?;
}
def v4i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 47;
  string NAME = ?;
}
def v4i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 23;
  string NAME = ?;
}
def v512i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 19;
  string NAME = ?;
}
def v64i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 18;
  string NAME = ?;
}
def v64i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 36;
  string NAME = ?;
}
def v64i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 2048;
  int Value = 44;
  string NAME = ?;
}
def v64i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 27;
  string NAME = ?;
}
def v8f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 54;
  string NAME = ?;
}
def v8f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 58;
  string NAME = ?;
}
def v8f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 63;
  string NAME = ?;
}
def v8i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 15;
  string NAME = ?;
}
def v8i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 33;
  string NAME = ?;
}
def v8i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 41;
  string NAME = ?;
}
def v8i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 48;
  string NAME = ?;
}
def v8i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 24;
  string NAME = ?;
}
def vAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 123;
  string NAME = ?;
}
def variable_ops {
  string NAME = ?;
}
def vector_extract {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::EXTRACT_VECTOR_ELT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_480;
  string NAME = ?;
}
def vector_extract_subvec {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::EXTRACT_SUBVECTOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_490;
  string NAME = ?;
}
def vector_insert {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::INSERT_VECTOR_ELT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = anonymous_483;
  string NAME = ?;
}
def vector_shuffle {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::VECTOR_SHUFFLE";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTVecShuffle;
  string NAME = ?;
}
def vnot {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$in);
  dag Fragment = (xor node:$in, immAllOnesV);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def vselect {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::VSELECT";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTVSelect;
  string NAME = ?;
}
def vt {	// SDPatternOperator SDNode
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::VALUETYPE";
  string SDClass = "VTSDNode";
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def vtFP {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (vt);
  string PredicateCode = " return N->getVT().isFloatingPoint(); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def vtInt {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops);
  dag Fragment = (vt);
  string PredicateCode = " return N->getVT().isInteger(); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def x86mmx {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 64;
  string NAME = ?;
}
def xor {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  string Opcode = "ISD::XOR";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def zero_reg {
  string NAME = ?;
}
def zext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  list<SDNodeProperty> Properties = [];
  string Opcode = "ISD::ZERO_EXTEND";
  string SDClass = "SDNode";
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def zextload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::ZEXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  list<SDNodeProperty> Properties = [];
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
