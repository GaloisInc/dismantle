<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->

<instructionsection id="VRSHR_VORR_r" title="VRSHR (zero) -- AArch32" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="VRSHR" />
    <docvar key="instr-class" value="fpsimd" />
    <docvar key="mnemonic" value="VORR" />
  </docvars>
  <heading>VRSHR (zero)</heading>
  <desc>
    <brief>Vector Rounding Shift Right</brief>
    <longer> copies the contents of one SIMD register to another</longer>
  </desc>
  <aliasto refiform="vorr_r.xml" iformid="VORR_r">VORR (register)</aliasto>
  <classes>
    <classesintro count="2">
      <txt>It has encodings from the following instruction sets:</txt>
      <txt> A32 (</txt>
      <a href="#a1">A1</a>
      <txt>)</txt>
      <txt> and </txt>
      <txt> T32 (</txt>
      <a href="#t1">T1</a>
      <txt>)</txt>
      <txt>.</txt>
    </classesintro>
    <iclass name="A1" oneof="2" id="a1" no_encodings="2" isa="A32">
      <docvars>
        <docvar key="armarmheading" value="A1" />
        <docvar key="instr-class" value="fpsimd" />
        <docvar key="isa" value="A32" />
        <docvar key="mnemonic" value="VORR" />
      </docvars>
      <iclassintro count="2"></iclassintro>
      <regdiagram form="32" psname="">
        <box hibit="31" width="7" settings="7">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="24" name="U" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" settings="1">
          <c>0</c>
        </box>
        <box hibit="22" name="D" usename="1">
          <c></c>
        </box>
        <box hibit="21" width="2" name="size" settings="2">
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="19" width="4" name="Vn" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="15" width="4" name="Vd" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="11" width="4" name="opc" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="7" name="N" usename="1">
          <c></c>
        </box>
        <box hibit="6" name="Q" usename="1">
          <c></c>
        </box>
        <box hibit="5" name="M" usename="1">
          <c></c>
        </box>
        <box hibit="4" name="o1" settings="1">
          <c>1</c>
        </box>
        <box hibit="3" width="4" name="Vm" usename="1">
          <c colspan="4"></c>
        </box>
      </regdiagram>
      <encoding name="VRSHR_VORR_r_A1_D" oneofinclass="2" oneof="4" label="64-bit SIMD vector" bitdiffs="Q == 0">
        <docvars>
          <docvar key="alias_mnemonic" value="VRSHR" />
          <docvar key="armarmheading" value="A1" />
          <docvar key="instr-class" value="fpsimd" />
          <docvar key="isa" value="A32" />
          <docvar key="mnemonic" value="VORR" />
          <docvar key="simdvectorsize" value="double" />
        </docvars>
        <box hibit="6" width="1" name="Q">
          <c>0</c>
        </box>
        <asmtemplate><text>VRSHR</text><text>{</text><a link="c_1" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text> </text><a link="dd" hover="64-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Dd&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a><text>, #0</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="vorr_r.xml#VORR_r_A1_D">VORR</a><text>{</text><a link="c_1" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>{</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text>}</text><text> </text><a link="dd" hover="64-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Dd&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a></asmtemplate>
          <aliascond>Never</aliascond>
        </equivalent_to>
      </encoding>
      <encoding name="VRSHR_VORR_r_A1_Q" oneofinclass="2" oneof="4" label="128-bit SIMD vector" bitdiffs="Q == 1">
        <docvars>
          <docvar key="alias_mnemonic" value="VRSHR" />
          <docvar key="armarmheading" value="A1" />
          <docvar key="instr-class" value="fpsimd" />
          <docvar key="isa" value="A32" />
          <docvar key="mnemonic" value="VORR" />
          <docvar key="simdvectorsize" value="quad" />
        </docvars>
        <box hibit="6" width="1" name="Q">
          <c>1</c>
        </box>
        <asmtemplate><text>VRSHR</text><text>{</text><a link="c_1" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text> </text><a link="qd" hover="128-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Qd&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a><text>, #0</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="vorr_r.xml#VORR_r_A1_Q">VORR</a><text>{</text><a link="c_1" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>{</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text>}</text><text> </text><a link="qd" hover="128-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Qd&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a></asmtemplate>
          <aliascond>Never</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
    <iclass name="T1" oneof="2" id="t1" no_encodings="2" isa="T32">
      <docvars>
        <docvar key="armarmheading" value="T1" />
        <docvar key="instr-class" value="fpsimd" />
        <docvar key="isa" value="T32" />
        <docvar key="mnemonic" value="VORR" />
      </docvars>
      <iclassintro count="2"></iclassintro>
      <regdiagram form="16x2" psname="">
        <box hibit="31" width="3" settings="3">
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="28" name="U" settings="1">
          <c>0</c>
        </box>
        <box hibit="27" width="5" settings="5">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="22" name="D" usename="1">
          <c></c>
        </box>
        <box hibit="21" width="2" name="size" settings="2">
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="19" width="4" name="Vn" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="15" width="4" name="Vd" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="11" width="4" name="opc" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="7" name="N" usename="1">
          <c></c>
        </box>
        <box hibit="6" name="Q" usename="1">
          <c></c>
        </box>
        <box hibit="5" name="M" usename="1">
          <c></c>
        </box>
        <box hibit="4" name="o1" settings="1">
          <c>1</c>
        </box>
        <box hibit="3" width="4" name="Vm" usename="1">
          <c colspan="4"></c>
        </box>
      </regdiagram>
      <encoding name="VRSHR_VORR_r_T1_D" oneofinclass="2" oneof="4" label="64-bit SIMD vector" bitdiffs="Q == 0">
        <docvars>
          <docvar key="alias_mnemonic" value="VRSHR" />
          <docvar key="armarmheading" value="T1" />
          <docvar key="instr-class" value="fpsimd" />
          <docvar key="isa" value="T32" />
          <docvar key="mnemonic" value="VORR" />
          <docvar key="simdvectorsize" value="double" />
        </docvars>
        <box hibit="6" width="1" name="Q">
          <c>0</c>
        </box>
        <asmtemplate><text>VRSHR</text><text>{</text><a link="c" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text> </text><a link="dd" hover="64-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Dd&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a><text>, #0</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="vorr_r.xml#VORR_r_T1_D">VORR</a><text>{</text><a link="c" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>{</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text>}</text><text> </text><a link="dd" hover="64-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Dd&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a><text>, </text><a link="dm_1" hover="64-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Dm&gt;</a></asmtemplate>
          <aliascond>Never</aliascond>
        </equivalent_to>
      </encoding>
      <encoding name="VRSHR_VORR_r_T1_Q" oneofinclass="2" oneof="4" label="128-bit SIMD vector" bitdiffs="Q == 1">
        <docvars>
          <docvar key="alias_mnemonic" value="VRSHR" />
          <docvar key="armarmheading" value="T1" />
          <docvar key="instr-class" value="fpsimd" />
          <docvar key="isa" value="T32" />
          <docvar key="mnemonic" value="VORR" />
          <docvar key="simdvectorsize" value="quad" />
        </docvars>
        <box hibit="6" width="1" name="Q">
          <c>1</c>
        </box>
        <asmtemplate><text>VRSHR</text><text>{</text><a link="c" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text> </text><a link="qd" hover="128-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Qd&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a><text>, #0</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="vorr_r.xml#VORR_r_T1_Q">VORR</a><text>{</text><a link="c" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;c&gt;</a><text>}</text><text>{</text><a link="q" hover="See {xref{ARMARM_Babbefhf}{Standard assembler syntax fields}}">&lt;q&gt;</a><text>}</text><text>{</text><text>.</text><a link="dt_2" hover="Data type for elements of vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64">&lt;dt&gt;</a><text>}</text><text> </text><a link="qd" hover="128-bit SIMD&amp;FP destination register (field &quot;D:Vd&quot;)">&lt;Qd&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a><text>, </text><a link="qm_1" hover="128-bit SIMD&amp;FP source register (field &quot;N:Vn&quot;)">&lt;Qm&gt;</a></asmtemplate>
          <aliascond>Never</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="VRSHR_VORR_r_A1_Q" symboldefcount="1">
      <symbol link="c_1">&lt;c&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="armarmheading" value="A1" />
        </docvars>
        <intro>
          <para>For encoding A1: see <xref linkend="Babbefhf">Standard assembler syntax fields</xref>. This encoding must be unconditional.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_T1_Q" symboldefcount="2">
      <symbol link="c">&lt;c&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="armarmheading" value="T1" />
        </docvars>
        <intro>
          <para>For encoding T1: see <xref linkend="Babbefhf">Standard assembler syntax fields</xref>.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_Q, VRSHR_VORR_r_T1_Q" symboldefcount="1">
      <symbol link="q">&lt;q&gt;</symbol>
      <account encodedin="">
        <intro>
          <para>See <xref linkend="Babbefhf">Standard assembler syntax fields</xref>.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_Q, VRSHR_VORR_r_T1_Q" symboldefcount="1">
      <symbol link="dt_2">&lt;dt&gt;</symbol>
      <account encodedin="">
        <intro>
          <para>Is the data type for the elements of the vectors, and must be one of: S8, S16, S32, S64, U8, U16, U32 or U64.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_Q, VRSHR_VORR_r_T1_Q" symboldefcount="1">
      <symbol link="qd">&lt;Qd&gt;</symbol>
      <account encodedin="D:Vd">
        <intro>
          <para>Is the 128-bit name of the SIMD&amp;FP destination register, encoded in the "D:Vd" field as &lt;Qd&gt;*2.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_Q, VRSHR_VORR_r_T1_Q" symboldefcount="1">
      <symbol link="qm_1">&lt;Qm&gt;</symbol>
      <account encodedin="N:Vn&quot; and &quot;M:Vm">
        <intro>
          <para>Is the 128-bit name of the SIMD&amp;FP source register, encoded in the "N:Vn" and "M:Vm" field as &lt;Qm&gt;*2.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_D, VRSHR_VORR_r_T1_D" symboldefcount="1">
      <symbol link="dd">&lt;Dd&gt;</symbol>
      <account encodedin="D:Vd">
        <intro>
          <para>Is the 64-bit name of the SIMD&amp;FP destination register, encoded in the "D:Vd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="VRSHR_VORR_r_A1_D, VRSHR_VORR_r_T1_D" symboldefcount="1">
      <symbol link="dm_1">&lt;Dm&gt;</symbol>
      <account encodedin="N:Vn&quot; and &quot;M:Vm">
        <intro>
          <para>Is the 64-bit name of the SIMD&amp;FP source register, encoded in the "N:Vn" and "M:Vm" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
